-- BP 7.1.6 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.6

INSERT INTO SM_ISM
	VALUES ("b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"33bdc4f6-8797-4497-a19f-1814205c10c9");
INSERT INTO SM_SM
	VALUES ("b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'',
	3);
INSERT INTO SM_MOORE
	VALUES ("b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_EVTDI
	VALUES ("a0c0f5db-20da-45f6-8e04-702530086afd",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"a132fb80-5076-4b9e-8f52-1e6e1f3c830d");
INSERT INTO SM_EVTDI
	VALUES ("a132fb80-5076-4b9e-8f52-1e6e1f3c830d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'age',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("1493b2c7-769d-4773-b35b-a58a403f62de",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("155067c4-2fd4-4778-a36d-6e2905fab3eb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'i2',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"53e24bff-a6c3-440a-bd8e-b1ff13cea517");
INSERT INTO SM_EVTDI
	VALUES ("bbbae5ee-1d3c-4114-9236-f386ba93cde7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("a29f4ed1-fc15-4bac-babd-e7abaa9110e6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'b2',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"9685191a-a525-4178-a895-42d2820b83d5");
INSERT INTO SM_EVTDI
	VALUES ("2cc97c77-f16b-43c3-895a-5d9102052178",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'r1',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"155067c4-2fd4-4778-a36d-6e2905fab3eb");
INSERT INTO SM_EVTDI
	VALUES ("fccd0ba1-e4cc-48eb-9195-4f290dde58be",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'r2',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"2cc97c77-f16b-43c3-895a-5d9102052178");
INSERT INTO SM_EVTDI
	VALUES ("53e24bff-a6c3-440a-bd8e-b1ff13cea517",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"a29f4ed1-fc15-4bac-babd-e7abaa9110e6");
INSERT INTO SM_EVTDI
	VALUES ("9685191a-a525-4178-a895-42d2820b83d5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_LEVT
	VALUES ("c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	1,
	'start test',
	0,
	'',
	'TCE1',
	'');
INSERT INTO SM_LEVT
	VALUES ("a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	2,
	'next test',
	0,
	'',
	'TCE2',
	'');
INSERT INTO SM_LEVT
	VALUES ("578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	3,
	'event with supp data',
	0,
	'',
	'TCE3',
	'');
INSERT INTO SM_LEVT
	VALUES ("509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	4,
	'next test with supp data',
	0,
	'',
	'TCE4',
	'');
INSERT INTO SM_LEVT
	VALUES ("97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	5,
	'bool event',
	0,
	'',
	'TCE5',
	'');
INSERT INTO SM_LEVT
	VALUES ("d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	6,
	'int event',
	0,
	'',
	'TCE6',
	'');
INSERT INTO SM_STATE
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Constants',
	1,
	0);
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Local Variables',
	2,
	0);
INSERT INTO SM_EIGN
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Object Attributes',
	3,
	0);
INSERT INTO SM_EIGN
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3899e910-cf00-4f1e-899c-84885d22aba8",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Supplemental Data Items Received From An Event',
	4,
	0);
INSERT INTO SM_EIGN
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Function Invocations',
	5,
	0);
INSERT INTO SM_EIGN
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Transformer Invocations',
	6,
	0);
INSERT INTO SM_EIGN
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("2135dcf3-bfec-43b6-a463-883707c64399",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Bridge Invocations',
	7,
	0);
INSERT INTO SM_EIGN
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("8edc7911-d7c5-4940-968d-0b5926dc206c",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Order of Operations',
	8,
	0);
INSERT INTO SM_EIGN
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Stress Limits of Compound Expressions',
	9,
	0);
INSERT INTO SM_EIGN
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Bridges Within Expressions',
	11,
	0);
INSERT INTO SM_EIGN
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("671a6348-1136-455a-80f0-6705b3886fc7",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Transforms Within Expressions',
	12,
	0);
INSERT INTO SM_EIGN
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("96427a47-dceb-4fa2-811d-33f3adca2fef",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Combinine Real and Integer Data Types',
	13,
	1);
INSERT INTO SM_EIGN
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Unary Ops',
	14,
	0);
INSERT INTO SM_CH
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("93230abf-a963-4fcd-881f-68391a2edb7f",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'If Expressions',
	15,
	0);
INSERT INTO SM_CH
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Expressions Within Parameters',
	16,
	0);
INSERT INTO SM_CH
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("4edacc52-e011-461c-908d-613c1949ac03",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Bool Event',
	17,
	0);
INSERT INTO SM_CH
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Int Event',
	18,
	0);
INSERT INTO SM_CH
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'More Expressions within Parms',
	19,
	0);
INSERT INTO SM_CH
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Bool Event Acks',
	20,
	0);
INSERT INTO SM_CH
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Int Event Acks',
	21,
	0);
INSERT INTO SM_CH
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using inst_ref_set<Object>',
	22,
	0);
INSERT INTO SM_EIGN
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using inst_ref<Object>',
	23,
	0);
INSERT INTO SM_EIGN
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("fd562652-d96d-456a-ac4d-8b3dc4dffc9b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"c624e26a-7ce8-4011-bed9-3ff888a3ff67",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("fd562652-d96d-456a-ac4d-8b3dc4dffc9b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("d00103a2-04ff-4abb-a0f6-c8a3d2d2b052",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bd6ca949-e64b-4d3f-a07b-3c9694602981",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("d00103a2-04ff-4abb-a0f6-c8a3d2d2b052",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("72730662-f7be-4b7a-8b3d-cd618198747c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("72730662-f7be-4b7a-8b3d-cd618198747c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3899e910-cf00-4f1e-899c-84885d22aba8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("455176f8-a9a8-4eb3-90c8-7f6047054cbc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("455176f8-a9a8-4eb3-90c8-7f6047054cbc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("89f7e52c-fd2a-477b-a2fe-16eaf6e9adba",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("89f7e52c-fd2a-477b-a2fe-16eaf6e9adba",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"2135dcf3-bfec-43b6-a463-883707c64399",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e23d02e2-9534-4e75-ba5a-e18c6e6123cb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"2135dcf3-bfec-43b6-a463-883707c64399",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e23d02e2-9534-4e75-ba5a-e18c6e6123cb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"8edc7911-d7c5-4940-968d-0b5926dc206c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("b35edc01-029a-4974-8894-637588ac2c2b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"8edc7911-d7c5-4940-968d-0b5926dc206c",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("b35edc01-029a-4974-8894-637588ac2c2b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("f285c186-9d9f-4d8f-a084-b5684dfaee22",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"671a6348-1136-455a-80f0-6705b3886fc7",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("f285c186-9d9f-4d8f-a084-b5684dfaee22",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"96427a47-dceb-4fa2-811d-33f3adca2fef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7afb53b5-daec-4fda-b5df-74b6fde6d635",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3899e910-cf00-4f1e-899c-84885d22aba8",
	"578d549b-fa7c-4141-a3a9-6fcb6408feb7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7afb53b5-daec-4fda-b5df-74b6fde6d635",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5ef1e422-c495-4caa-9d73-532c43e69ccc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("d0d5aa4c-0798-48fa-9034-cff3beaac4e6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("d0d5aa4c-0798-48fa-9034-cff3beaac4e6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"671a6348-1136-455a-80f0-6705b3886fc7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("cdd92f80-f72e-4a71-84d1-e6f8bad9d6e9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"96427a47-dceb-4fa2-811d-33f3adca2fef",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("cdd92f80-f72e-4a71-84d1-e6f8bad9d6e9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"93230abf-a963-4fcd-881f-68391a2edb7f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("bc95e62a-f823-47cc-a448-7607b3db377d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"93230abf-a963-4fcd-881f-68391a2edb7f",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("bc95e62a-f823-47cc-a448-7607b3db377d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("0f85f40a-4229-4edf-bbdf-9cb200461448",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("0f85f40a-4229-4edf-bbdf-9cb200461448",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4edacc52-e011-461c-908d-613c1949ac03",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("1cfc1b60-a33c-4740-97e5-ecaa0b409573",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4edacc52-e011-461c-908d-613c1949ac03",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("1cfc1b60-a33c-4740-97e5-ecaa0b409573",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e6a07190-227c-4c10-b2a9-b30219c80251",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4edacc52-e011-461c-908d-613c1949ac03",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e6a07190-227c-4c10-b2a9-b30219c80251",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("a3b2ea5c-536a-4343-83b7-9459dde78ae9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("a3b2ea5c-536a-4343-83b7-9459dde78ae9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("1cf3a30b-654e-479b-8f87-ca867d66583f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("1cf3a30b-654e-479b-8f87-ca867d66583f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("eceda8d8-6c04-47aa-8875-5ed41a5fa1a5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("eceda8d8-6c04-47aa-8875-5ed41a5fa1a5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("62d7e0ae-52b5-4abc-8153-e52192ef978a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("62d7e0ae-52b5-4abc-8153-e52192ef978a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("2e9a0df7-74d4-47ef-995b-062fc84b878b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("2e9a0df7-74d4-47ef-995b-062fc84b878b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("5ac7124e-0e4a-47f1-aaab-727db4af42a2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("5ac7124e-0e4a-47f1-aaab-727db4af42a2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("4d05dc01-5195-41fc-906d-1815236475e2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("4d05dc01-5195-41fc-906d-1815236475e2",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("245c67d1-fade-4048-8b24-5b84df561b4d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("245c67d1-fade-4048-8b24-5b84df561b4d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("3bb33c9b-2b59-4798-84e3-3a30ba056fa5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("3bb33c9b-2b59-4798-84e3-3a30ba056fa5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("bbd448e6-d6c0-4e4d-9cbc-9c059843c21b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("bbd448e6-d6c0-4e4d-9cbc-9c059843c21b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("4247b890-45ee-4127-b69d-76555f20d550",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"d2dac107-ee1c-417a-b481-21f3231d5e52",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("4247b890-45ee-4127-b69d-76555f20d550",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("267ca202-4b63-4116-8fca-363b1ec5c128",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad",
	"97c369f0-6398-4617-8fdc-ad028799fdb2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("267ca202-4b63-4116-8fca-363b1ec5c128",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("b5493815-282c-4254-baf8-6d157bc03aca",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("b5493815-282c-4254-baf8-6d157bc03aca",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("9c77772a-7998-4f34-b5fc-37647fc46c35",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	"509cde54-1fb4-4bb4-b4de-af3fa45f61a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("9c77772a-7998-4f34-b5fc-37647fc46c35",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e3e787ee-126c-4e10-93bb-1719df71efe1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e3e787ee-126c-4e10-93bb-1719df71efe1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e9fcccca-a1a2-4c1e-9307-16233685b1ee",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e9fcccca-a1a2-4c1e-9307-16233685b1ee",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7a543dee-de44-44b0-9704-b8e953cf8efa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	"a7bed608-1e7c-4ead-9c33-e4d409d13639",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7a543dee-de44-44b0-9704-b8e953cf8efa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_MOAH
	VALUES ("7b2402db-a49e-46db-a731-f55ab2a7f788",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bd6ca949-e64b-4d3f-a07b-3c9694602981");
INSERT INTO SM_AH
	VALUES ("7b2402db-a49e-46db-a731-f55ab2a7f788",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("7b2402db-a49e-46db-a731-f55ab2a7f788",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
// integer:

  if (( (1+2) * (3+4) ) == 21)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - integer") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - integer") ;
  end if;


// real:


  if ((3.3 + 2.2 - 1.1) - 4.4 <= 0.000001)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - real") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - real") ;
  end if;


// string:


  if (("Hello" + "," + " " + "World" + "!") == "Hello, World!")
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string") ;
  end if;

  str1 = "Hello" + "World";
  str = TRAN::ret_string(s:str1);
  if (str == "HelloWorld" )
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string +") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string +") ;
  end if;

  
// boolean:


  if (TRUE or FALSE and TRUE and TRUE)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 1") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 1") ;
  end if;


  if (not (TRUE and FALSE) and (TRUE or FALSE))
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 2") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 2") ;
  end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("005441c5-6377-4bc9-9e90-2c2f4d8ec868",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa");
INSERT INTO SM_AH
	VALUES ("005441c5-6377-4bc9-9e90-2c2f4d8ec868",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("005441c5-6377-4bc9-9e90-2c2f4d8ec868",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
// integer:


// Initialize variables for test:
a = 1;
b = 4;
c = 2;

if ((a - b/c + a*c) == 1)
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - integer") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - integer") ;
end if;


// real:

// Initialize variables for test:
x = 4.0;
y = 1.5;
z = 1.1;

if ( ((x + y - z) > 4.3) and ((x+y-z) < 4.5) )
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - real") ;
end if;


// string:


// Initialize variables for test:
s1 = "Hello";
s2 = ", ";
s3 = "world!";

if ((s1 + s2 + s3) == "Hello, world!")
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - string") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("a396d0d5-dcde-4572-a969-77992ea7e2aa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3899e910-cf00-4f1e-899c-84885d22aba8");
INSERT INTO SM_AH
	VALUES ("a396d0d5-dcde-4572-a969-77992ea7e2aa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("a396d0d5-dcde-4572-a969-77992ea7e2aa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'// integer:

// Create objects for test
create object instance a of A;
create object instance b of A;

// Initialize variables for test:
a.a = 5;
b.a = 2;

// attributes of an instance
if ( ((a.a - b.a) * (a.a - 3) + 1) == 7 )
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
end if;


// Initialize variables for test:
self.a = 5;
self.b = 4;

// self
if ( (self.a + self.b - 2) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - self") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - self") ;
end if;

// Delete any objects created
delete object instance a;
delete object instance b;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR3:''send event with supp data'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("4b230ca0-82eb-413e-a932-03175843ae98",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5ef1e422-c495-4caa-9d73-532c43e69ccc");
INSERT INTO SM_AH
	VALUES ("4b230ca0-82eb-413e-a932-03175843ae98",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("4b230ca0-82eb-413e-a932-03175843ae98",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
if ( (rcvd_evt.name + ": age " + rcvd_evt.age) == "Bob: age 31" )
   LOG::LogSuccess (message:"Test Compound Expressions - Supp Data Items") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Supp Data Items") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("5548554a-c74f-4dad-87af-0a46716a69b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"12ba21a4-84c5-48c8-aa84-76359ca2c4c7");
INSERT INTO SM_AH
	VALUES ("5548554a-c74f-4dad-87af-0a46716a69b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("5548554a-c74f-4dad-87af-0a46716a69b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'// Make sure there are no instances of A
select many as from instances of A;
for each a in as
  delete object instance a;
end for;

select many as from instances of A;

if ( (empty as or not_empty as) and not (empty as and not_empty as) )
   LOG::LogSuccess (message:"Test Coumpund Expressions - Function Invocations - not_empty/empty") ;
else
   LOG::LogFailure (message:"Test Coumpund Expressions - Function Invocations - not_empty/empty") ;
end if;

if ( (2 + cardinality as + 1) == 3 )
   LOG::LogSuccess (message:"Test Coumpund Expressions - Function Invocations - cardinality") ;
else
   LOG::LogFailure (message:"Test Coumpund Expressions - Function Invocations - cardinality") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("cb5f50f5-256a-45cd-840e-3c93606f70b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"2135dcf3-bfec-43b6-a463-883707c64399");
INSERT INTO SM_AH
	VALUES ("cb5f50f5-256a-45cd-840e-3c93606f70b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("cb5f50f5-256a-45cd-840e-3c93606f70b1",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
if ( ( ( TRAN::ret_int(i:1) + TRAN::ret_int(i:2) ) * ( TRAN::ret_int(i:5) - 3 ) ) == 6 )
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - int") ;
end if;

if ( (TRAN::ret_string(s:"hi") + " " + TRAN::ret_string(s:"there")) == "hi there")
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - string") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("3c38af24-73f0-4579-8783-1a7e7fdca4a8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"8edc7911-d7c5-4940-968d-0b5926dc206c");
INSERT INTO SM_AH
	VALUES ("3c38af24-73f0-4579-8783-1a7e7fdca4a8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("3c38af24-73f0-4579-8783-1a7e7fdca4a8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
BrTstTimeDate = TIM::create_date (day:1, month:2, year:3, second:4, minute:5, hour:6);

if ( (TIM::get_day(date:BrTstTimeDate) + TIM::get_month(date:BrTstTimeDate) + TIM::get_year(date:BrTstTimeDate) + 2) == 8)
   LOG::LogSuccess (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("a5d0c0ac-f79c-41fe-9a0f-add0a674196a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e30d84b8-54c2-4d52-bd4d-0f6d1f30f967");
INSERT INTO SM_AH
	VALUES ("a5d0c0ac-f79c-41fe-9a0f-add0a674196a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("a5d0c0ac-f79c-41fe-9a0f-add0a674196a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'if ((1 + 2*3 - 6/3 + 8%3) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - int") ;
end if;

// real:
if ((1.1 + 4.4/2 - 2.2) - 1.1 < 0.000001)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - real") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("742ee7b4-943f-4e99-b661-9891d907c836",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"16e1f0b0-e3f9-4541-9824-8f8296b7820a");
INSERT INTO SM_AH
	VALUES ("742ee7b4-943f-4e99-b661-9891d907c836",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("742ee7b4-943f-4e99-b661-9891d907c836",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'x = ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2));

if (x == 20)
   LOG::LogSuccess (message:"Test Compound Expressions - Stress Limits") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Stress Limits") ;
end if;


//============================================================
// Test complete
//============================================================

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("88e96538-b7d5-4383-be65-fc8fa584cba5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"671a6348-1136-455a-80f0-6705b3886fc7");
INSERT INTO SM_AH
	VALUES ("88e96538-b7d5-4383-be65-fc8fa584cba5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("88e96538-b7d5-4383-be65-fc8fa584cba5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
bridge date = TIM::create_date(second:1, minute:2, hour:3, day:1, month:2, year:3);
year = TIM::get_year (date:date) * 22 + 3;
month = 8 - TIM::get_month (date:date)/2;
day = TIM::get_day (date:date) + 28;

if ((day == 29) and (month == 7) and (year == 69))
   LOG::LogSuccess (message:"Test Compound Expressios - Bridges within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressios - Bridges within Expressions") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("409e9b32-6a6a-43dd-9639-678cef76403e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"96427a47-dceb-4fa2-811d-33f3adca2fef");
INSERT INTO SM_AH
	VALUES ("409e9b32-6a6a-43dd-9639-678cef76403e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("409e9b32-6a6a-43dd-9639-678cef76403e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'a = TRAN::ret_int(i:5) + 10;
b = TRAN::ret_int(i:8)/4 + TRAN::ret_int(i:3)*2;
c = TRAN::ret_int(i:2) * TRAN::ret_int(i:3)/TRAN::ret_int(i:6);

if ((a == 15) and (b == 8) and (c == 1))
   LOG::LogSuccess (message:"Test Compound Expressions - Transforms within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transforms within Expressions") ;
end if;

// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("f61f0153-b1c0-4c86-9607-1a4f95826f69",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff43c52f-9cae-45eb-bdb3-99e7750c12d4");
INSERT INTO SM_AH
	VALUES ("f61f0153-b1c0-4c86-9607-1a4f95826f69",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("f61f0153-b1c0-4c86-9607-1a4f95826f69",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'
a = 1;
x = 1.1;
x = (a + 2) + (x - 0.1);

if ((x - 4.0) < 0.000001)
   LOG::LogSuccess (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR4:''test complete'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("4df049a6-61d1-4077-b65f-e6bbfc3c7447",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"93230abf-a963-4fcd-881f-68391a2edb7f");
INSERT INTO SM_AH
	VALUES ("4df049a6-61d1-4077-b65f-e6bbfc3c7447",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("4df049a6-61d1-4077-b65f-e6bbfc3c7447",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'select any dr from instances of DR;

// Unary Ops in the action language
//
// These are handled in a1test_exconfig, not here
//  empty <handle>        // returns bool
//  not_empty <handle>    // returns bool
//  cardinality <handle>  // returns int
//
// The following are tested with compound expressions:
//
//  not <boolean expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//  <unary op> <expression>
//
//      <expression> is anything that evalates to real or int value:
//        literal, attribute, local var, received event data item, 
//        simple expression, compound expression, transform
//        invocation, bridge invocation.
//
//      <unary op> is + or -

LOG::LogInfo(message:"Starting Test Compound Expressions - Unary Ops") ;

if (true)  // Create a local scope

// local
a=1;
b=2;
ans = not ( (a ==b) AND (b == a) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var") ;
end if;

// literal
ans = not ( (1 == 2) AND (3 == 3) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal") ;
end if;

// received event
ans = not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = not ( (self.b1 == self.b2) AND (self.b1 == self.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
end if;

// unary op + int

// local
a=1;
b=2;
ans1 = + ( a + b );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
end if;

// literal
ans1 = + ( 1 + 2 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = + ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = + ( self.i1 + self.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i1 + tce.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
end if;


// unary op - int

// local
a=1;
b=2;
ans1 = - ( a + b );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = - ( 1 + 2 );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = - ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = - ( self.i1 + self.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i1 + tce.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;   // end local scope

if (true)  // create local scope

// real

// unary op + real

// local
a=1.0;
b=2.0;
ans2 = + ( a + b );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
end if;

// literal
ans2 = + ( 1.0 + 2.0 );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
end if;

// received event
ans2 = + ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = + ( self.r1 + self.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r1 + tce.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
end if;


// unary op - real

// local
a=1.0;
b=2.0;
ans2 = - ( a + b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
end if;

// literal
ans2 = - ( 1.0 + 2.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
end if;

// received event
ans2 = - ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = - ( self.r1 + self.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r1 + tce.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope

if (true)  // create local scope

// single

// local
a1=FALSE;
ans = not ( a1 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
end if;

// literal
ans = not ( FALSE );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
end if;

// received event
ans = not ( rcvd_evt.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
ans = not ( self.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( tce.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( empty tce );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
end if;

// transformer invocations
ans = not ( TRAN::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
ans = not ( BR::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope
// unary op + int


// local
b=2;
ans1 = + ( b );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
end if;

// literal
ans1 = + ( 3 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
end if;

// received event
ans1 = + ( rcvd_evt.i2 );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = + ( self.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( cardinality tce );
if ( ans1 == 1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// unary op - int

// local
b=2;
ans1 = - ( b );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
end if;

// literal
ans1 = - ( 2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
end if;

// received event
ans1 = - ( rcvd_evt.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = - ( self.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i2);
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( cardinality tce );
if ( ans1 == -1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:3) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;   // end local scope
if (true)  // create local scope

// real

// unary op + real

// local
b=2.0;
ans2 = + ( b );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
end if;

// literal
ans2 = + ( 2.0 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
end if;

// received event
ans2 = + ( rcvd_evt.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = + ( self.r2 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( cardinality tce * 1.0 );
if ( ans2 > 0.9 and ans2 < 1.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:3.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:3.0) ); 
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// unary op - real

// local
b=3.0;
ans2 = - ( b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
end if;

// literal
ans2 = - ( 3.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
end if;

// received event
ans2 = - ( rcvd_evt.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = - ( self.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r2);
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) );
if ( ans2 > -1.1 and ans2 < -.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < 2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // close local scope


// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;


',
	'');
INSERT INTO SM_MOAH
	VALUES ("7517a2fd-9b80-4e6e-8675-497e856c80e3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"a5f0b4d9-77bf-44f3-936f-461d2447ec3e");
INSERT INTO SM_AH
	VALUES ("7517a2fd-9b80-4e6e-8675-497e856c80e3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("7517a2fd-9b80-4e6e-8675-497e856c80e3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'select any dr from instances of DR;

// If statements
//
//   if <boolean expression> 
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - If Expressions") ;

if (true)  // create local scope

// local
a=1;
b=2;
if ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var") ;
end if;

// literal
if ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal") ;
end if;

// received event

if ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
if ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true) // create local scope

// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope
if (true) // create local scope

// single

// local
a1=FALSE;
if ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true) // create local scope

// if arithmetic expressions op + int

// local
b=2;
if ( +b == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true) // begin local scope
// real

// if arithmetic expressions + real

// local
b=2.0;
if ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if; // end local scope
if (true) // create local scope
//
//
select any dr from instances of DR;

// else statements
//
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Else Expressions") ;

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if (FALSE)
  // do nothing
elif ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if (FALSE)
  // do nothing
elif ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
end if;

end if;  // end local scope
if (true)  // create local scope

// if aritmetic expressions + int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if (FALSE)
  // do nothing
elif ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;


end if;  // end local scope
if (true)  // create local scope


// single

// local
a1=FALSE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// if arithmetic expressions op + int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +b == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressions + real

// local
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // end local scope

generate TCE4:''next test with supp data''(i1:1,i2:2,r1:1.0,r2:2.0,b1:TRUE,b2:FALSE) to self;

',
	'');
INSERT INTO SM_MOAH
	VALUES ("e0ad4459-d79f-4c6d-9875-4d6c45bba9c5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4edacc52-e011-461c-908d-613c1949ac03");
INSERT INTO SM_AH
	VALUES ("e0ad4459-d79f-4c6d-9875-4d6c45bba9c5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("e0ad4459-d79f-4c6d-9875-4d6c45bba9c5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'select any dr from instances of DR;

// Expressions as parameters to transforms, bridges, 
// events (generate and precreate)
//
//   (parm:<expression> .... )
//   elif <boolean expression>
//
// Expressions
// -----------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compound.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Parm Expressions") ;

// Bridges

// local
a=1;
b=2;
ans = BR::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = BR::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = BR::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = BR::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = BR::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = BR::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = BR::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = BR::ret_bool(b:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = BR::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = BR::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:(- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Transforms

// local
a=1;
b=2;
ans = TRAN::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = TRAN::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = TRAN::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = TRAN::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = TRAN::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = TRAN::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = TRAN::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = TRAN::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Event instance Creation

ack_count=0;

// local
a=1;
b=2;
create event instance e1 of TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;
generate e1;
ack_count=ack_count+1;

// literal
create event instance e1 of TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;
generate e1;
ack_count=ack_count+1;

// received event
create event instance e1 of TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - self
create event instance e1 of TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e1 of TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e1 of TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;
generate e1;
ack_count=ack_count+1;

// transformer invocations
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
create event instance e2 of TCE6:''int event''(i1:( (+ ( a + b )) )) to self;
generate e2;
ack_count=ack_count+1;

// literal
create event instance e2 of TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;
generate e2;
ack_count=ack_count+1;

// received event
create event instance e2 of TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - self
create event instance e2 of TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e2 of TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e2 of TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;
generate e2;
ack_count=ack_count+1;

// transformer invocations
create event instance e2 of TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;
generate e2;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e2 of TCE6:''int event''(i1:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) )) to self;
generate e2;
ack_count=ack_count+1;


// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("00d46a54-f3a5-4924-b178-d8dd20fdc7be",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54");
INSERT INTO SM_AH
	VALUES ("00d46a54-f3a5-4924-b178-d8dd20fdc7be",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("00d46a54-f3a5-4924-b178-d8dd20fdc7be",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("7b3f85b2-04ae-493a-8422-12d5b6501b48",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e");
INSERT INTO SM_AH
	VALUES ("7b3f85b2-04ae-493a-8422-12d5b6501b48",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("7b3f85b2-04ae-493a-8422-12d5b6501b48",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("0b39e7be-c58a-4273-afbd-4d07300cac59",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad");
INSERT INTO SM_AH
	VALUES ("0b39e7be-c58a-4273-afbd-4d07300cac59",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("0b39e7be-c58a-4273-afbd-4d07300cac59",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'// Event generation

ack_count=0;

// local
a=1;
b=2;
generate TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE5:''bool event''(b1:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
generate TCE6:''int event''(i1:( (+ ( a + b )) )) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;

ack_count=ack_count+1;

// received event
generate TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) )) to self;

ack_count=ack_count+1;

// single

// local
bv=FALSE;
generate TCE5:''bool event''(b1:(not(bv))) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not FALSE)) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not(rcvd_evt.b2))) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:(not self.b2)) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not tce.b2 )) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not(empty tce))) to self;
generate TCE5:''bool event''(b1:(not(not_empty no_instances))) to self;
generate TCE5:''bool event''(b1:(empty no_instances)) to self;
generate TCE5:''bool event''(b1:(not_empty tce)) to self;

ack_count=ack_count+4;

// transformer invocations
generate TCE5:''bool event''(b1:(not(TRAN::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(TRAN::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// bridge invocations realized
generate TCE5:''bool event''(b1:(not(BR::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(BR::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// if aritmetic expressions + int

// local
b=3;
generate TCE6:''int event''(i1:+(b)) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:+(3)) to self;

ack_count=ack_count+1;

// function invocations
create object instance t2 of TCE;
create object instance t3 of TCE;

select many tces from instances of TCE;
generate TCE6:''int event''(i1:+(cardinality tces)) to self;

delete object instance t2;
delete object instance t3;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:+(TRAN::ret_int(i:3))) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:+(BR::ret_int(i:3))) to self;

ack_count=ack_count+1;



// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("653f556d-6611-4b9e-9d51-af5fb629b40a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef");
INSERT INTO SM_AH
	VALUES ("653f556d-6611-4b9e-9d51-af5fb629b40a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("653f556d-6611-4b9e-9d51-af5fb629b40a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("65a945e8-df0b-441a-a441-df6a460fde52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e");
INSERT INTO SM_AH
	VALUES ("65a945e8-df0b-441a-a441-df6a460fde52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("65a945e8-df0b-441a-a441-df6a460fde52",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("7496a6a4-5605-4b87-bb56-f64dada7ff88",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0cf3da32-c60a-4d2b-97af-a2e165bf3c0f");
INSERT INTO SM_AH
	VALUES ("7496a6a4-5605-4b87-bb56-f64dada7ff88",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("7496a6a4-5605-4b87-bb56-f64dada7ff88",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'select many a_set from instances of A;
select many b_set from instances of A;
select many c_set from instances of A;
select many d_set from instances of A;

if (( a_set == b_set ) and ( c_set == d_set ))
   LOG::LogSuccess (message:"Test Compound Expressions - inst_ref_set<Object>") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - inst_ref_set<Object>") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("318c2915-cac1-467c-aa98-ab248296f778",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"ff6adc9e-7329-440a-97f5-f32d8fe055a3");
INSERT INTO SM_AH
	VALUES ("318c2915-cac1-467c-aa98-ab248296f778",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("318c2915-cac1-467c-aa98-ab248296f778",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	1,
	'select any a from instances of A;
select any b from instances of A where selected.a_id == a.a_id;
select any c from instances of A;
select any d from instances of A where selected.a_id == c.a_id;

if (( a == b ) and ( c == d))
   LOG::LogSuccess (message:"Test Compound Expressions - inst_ref<Object>") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - inst_ref<Object>") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_TAH
	VALUES ("47df9fcc-67f9-475a-918c-f51103f1b09a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"fd562652-d96d-456a-ac4d-8b3dc4dffc9b");
INSERT INTO SM_AH
	VALUES ("47df9fcc-67f9-475a-918c-f51103f1b09a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("47df9fcc-67f9-475a-918c-f51103f1b09a",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("cfbd2135-6851-4e2d-a73d-cdd61a134396",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"d00103a2-04ff-4abb-a0f6-c8a3d2d2b052");
INSERT INTO SM_AH
	VALUES ("cfbd2135-6851-4e2d-a73d-cdd61a134396",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("cfbd2135-6851-4e2d-a73d-cdd61a134396",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c0d9c4a4-dcf1-41f5-9fb0-74dd8fc7c1dc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"72730662-f7be-4b7a-8b3d-cd618198747c");
INSERT INTO SM_AH
	VALUES ("c0d9c4a4-dcf1-41f5-9fb0-74dd8fc7c1dc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("c0d9c4a4-dcf1-41f5-9fb0-74dd8fc7c1dc",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1ffc0217-55c1-4522-bfc3-9653854de2c8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"455176f8-a9a8-4eb3-90c8-7f6047054cbc");
INSERT INTO SM_AH
	VALUES ("1ffc0217-55c1-4522-bfc3-9653854de2c8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("1ffc0217-55c1-4522-bfc3-9653854de2c8",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("0737110f-b2a9-4056-af4b-205bd90d03cd",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"89f7e52c-fd2a-477b-a2fe-16eaf6e9adba");
INSERT INTO SM_AH
	VALUES ("0737110f-b2a9-4056-af4b-205bd90d03cd",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("0737110f-b2a9-4056-af4b-205bd90d03cd",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1e573d9d-ad6e-498d-8fb6-fce434a64aaa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e23d02e2-9534-4e75-ba5a-e18c6e6123cb");
INSERT INTO SM_AH
	VALUES ("1e573d9d-ad6e-498d-8fb6-fce434a64aaa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("1e573d9d-ad6e-498d-8fb6-fce434a64aaa",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("9e97224a-efa5-4834-af4a-b3cbae59887b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"b35edc01-029a-4974-8894-637588ac2c2b");
INSERT INTO SM_AH
	VALUES ("9e97224a-efa5-4834-af4a-b3cbae59887b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("9e97224a-efa5-4834-af4a-b3cbae59887b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("932c18b9-9d29-4715-8193-b02ee5c30943",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"f285c186-9d9f-4d8f-a084-b5684dfaee22");
INSERT INTO SM_AH
	VALUES ("932c18b9-9d29-4715-8193-b02ee5c30943",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("932c18b9-9d29-4715-8193-b02ee5c30943",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("919cef48-76b2-436e-9c6e-4e7437d6ea2c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"7afb53b5-daec-4fda-b5df-74b6fde6d635");
INSERT INTO SM_AH
	VALUES ("919cef48-76b2-436e-9c6e-4e7437d6ea2c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("919cef48-76b2-436e-9c6e-4e7437d6ea2c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("03d5086c-467a-402e-86b3-793d46eae038",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"d0d5aa4c-0798-48fa-9034-cff3beaac4e6");
INSERT INTO SM_AH
	VALUES ("03d5086c-467a-402e-86b3-793d46eae038",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("03d5086c-467a-402e-86b3-793d46eae038",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("2e279171-36d4-4ff4-9d2c-37700fd546b6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"cdd92f80-f72e-4a71-84d1-e6f8bad9d6e9");
INSERT INTO SM_AH
	VALUES ("2e279171-36d4-4ff4-9d2c-37700fd546b6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("2e279171-36d4-4ff4-9d2c-37700fd546b6",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("ad0cfadd-f511-4396-b5f1-4f8a418f56e5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bc95e62a-f823-47cc-a448-7607b3db377d");
INSERT INTO SM_AH
	VALUES ("ad0cfadd-f511-4396-b5f1-4f8a418f56e5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("ad0cfadd-f511-4396-b5f1-4f8a418f56e5",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c1fbea69-d6f9-456d-8e17-ce2862220afb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"0f85f40a-4229-4edf-bbdf-9cb200461448");
INSERT INTO SM_AH
	VALUES ("c1fbea69-d6f9-456d-8e17-ce2862220afb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("c1fbea69-d6f9-456d-8e17-ce2862220afb",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1718f010-8f61-4876-9c03-027c27169e3f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"1cfc1b60-a33c-4740-97e5-ecaa0b409573");
INSERT INTO SM_AH
	VALUES ("1718f010-8f61-4876-9c03-027c27169e3f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("1718f010-8f61-4876-9c03-027c27169e3f",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("59499dd6-b458-428d-a2f5-b7f8f359f80e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e6a07190-227c-4c10-b2a9-b30219c80251");
INSERT INTO SM_AH
	VALUES ("59499dd6-b458-428d-a2f5-b7f8f359f80e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("59499dd6-b458-428d-a2f5-b7f8f359f80e",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("0f4a125b-07b8-4bcf-8a76-e8aa016324a3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"a3b2ea5c-536a-4343-83b7-9459dde78ae9");
INSERT INTO SM_AH
	VALUES ("0f4a125b-07b8-4bcf-8a76-e8aa016324a3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("0f4a125b-07b8-4bcf-8a76-e8aa016324a3",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("4f82d74f-3f85-4e74-a442-b52c63b9140d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"1cf3a30b-654e-479b-8f87-ca867d66583f");
INSERT INTO SM_AH
	VALUES ("4f82d74f-3f85-4e74-a442-b52c63b9140d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("4f82d74f-3f85-4e74-a442-b52c63b9140d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6485f54c-e035-4fb2-a700-b78cde9d2c8d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"eceda8d8-6c04-47aa-8875-5ed41a5fa1a5");
INSERT INTO SM_AH
	VALUES ("6485f54c-e035-4fb2-a700-b78cde9d2c8d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("6485f54c-e035-4fb2-a700-b78cde9d2c8d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("20f476cc-c57a-4f19-928e-5e99664f0012",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"62d7e0ae-52b5-4abc-8153-e52192ef978a");
INSERT INTO SM_AH
	VALUES ("20f476cc-c57a-4f19-928e-5e99664f0012",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("20f476cc-c57a-4f19-928e-5e99664f0012",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("e3747b93-e63c-4bb3-9251-6026128b341d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"2e9a0df7-74d4-47ef-995b-062fc84b878b");
INSERT INTO SM_AH
	VALUES ("e3747b93-e63c-4bb3-9251-6026128b341d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("e3747b93-e63c-4bb3-9251-6026128b341d",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("21253a65-9694-486f-a412-c3eca2f6e9ea",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"5ac7124e-0e4a-47f1-aaab-727db4af42a2");
INSERT INTO SM_AH
	VALUES ("21253a65-9694-486f-a412-c3eca2f6e9ea",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("21253a65-9694-486f-a412-c3eca2f6e9ea",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("34e4b6d3-7cac-461e-9c3b-91f2b50bd66c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4d05dc01-5195-41fc-906d-1815236475e2");
INSERT INTO SM_AH
	VALUES ("34e4b6d3-7cac-461e-9c3b-91f2b50bd66c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("34e4b6d3-7cac-461e-9c3b-91f2b50bd66c",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c77f9481-367d-4188-b24b-2882b07ca849",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"245c67d1-fade-4048-8b24-5b84df561b4d");
INSERT INTO SM_AH
	VALUES ("c77f9481-367d-4188-b24b-2882b07ca849",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("c77f9481-367d-4188-b24b-2882b07ca849",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("f5fc27c8-92f0-40c9-9c3a-c71861067b91",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"3bb33c9b-2b59-4798-84e3-3a30ba056fa5");
INSERT INTO SM_AH
	VALUES ("f5fc27c8-92f0-40c9-9c3a-c71861067b91",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("f5fc27c8-92f0-40c9-9c3a-c71861067b91",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("a62f0ab7-b04e-4b7f-be6e-d21b2244db1b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"bbd448e6-d6c0-4e4d-9cbc-9c059843c21b");
INSERT INTO SM_AH
	VALUES ("a62f0ab7-b04e-4b7f-be6e-d21b2244db1b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("a62f0ab7-b04e-4b7f-be6e-d21b2244db1b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("27b8296f-8aba-49cf-a612-d08ee2cbb899",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"4247b890-45ee-4127-b69d-76555f20d550");
INSERT INTO SM_AH
	VALUES ("27b8296f-8aba-49cf-a612-d08ee2cbb899",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("27b8296f-8aba-49cf-a612-d08ee2cbb899",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("305500c4-477c-41a9-87c5-d80f6cf1bfe9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"267ca202-4b63-4116-8fca-363b1ec5c128");
INSERT INTO SM_AH
	VALUES ("305500c4-477c-41a9-87c5-d80f6cf1bfe9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("305500c4-477c-41a9-87c5-d80f6cf1bfe9",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("27b53e70-4062-44d8-ac6a-eaaf0f3e474b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"b5493815-282c-4254-baf8-6d157bc03aca");
INSERT INTO SM_AH
	VALUES ("27b53e70-4062-44d8-ac6a-eaaf0f3e474b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("27b53e70-4062-44d8-ac6a-eaaf0f3e474b",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("f1a89d74-56a2-4014-be3e-c7e92bba9b15",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"9c77772a-7998-4f34-b5fc-37647fc46c35");
INSERT INTO SM_AH
	VALUES ("f1a89d74-56a2-4014-be3e-c7e92bba9b15",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("f1a89d74-56a2-4014-be3e-c7e92bba9b15",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("7e8d2176-7e2e-4944-8e0b-26aa77336903",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e3e787ee-126c-4e10-93bb-1719df71efe1");
INSERT INTO SM_AH
	VALUES ("7e8d2176-7e2e-4944-8e0b-26aa77336903",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("7e8d2176-7e2e-4944-8e0b-26aa77336903",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("66d1f4f3-1567-444f-94d4-681a826d9075",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"e9fcccca-a1a2-4c1e-9307-16233685b1ee");
INSERT INTO SM_AH
	VALUES ("66d1f4f3-1567-444f-94d4-681a826d9075",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("66d1f4f3-1567-444f-94d4-681a826d9075",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("17695928-f087-4069-b796-32a3b6b52124",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	"7a543dee-de44-44b0-9704-b8e953cf8efa");
INSERT INTO SM_AH
	VALUES ("17695928-f087-4069-b796-32a3b6b52124",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc");
INSERT INTO SM_ACT
	VALUES ("17695928-f087-4069-b796-32a3b6b52124",
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	3,
	'',
	'');
INSERT INTO GD_MD
	VALUES ("0396e1c6-9db2-4278-bed3-0127c3445fd2",
	8,
	"b4938b29-df61-4f86-93b6-bb8f5e3ccbcc",
	40,
	1,
	0,
	1,
	1,
	0,
	12,
	0,
	0,
	0,
	0,
	0,
	0,
	'',
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine');
INSERT INTO GD_GE
	VALUES ("2f326828-cfe2-4705-afb6-dee2f833df24",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"bd6ca949-e64b-4d3f-a07b-3c9694602981",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants');
INSERT INTO GD_SHP
	VALUES ("2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO GD_NCS
	VALUES ("2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1248.000000,
	"2f326828-cfe2-4705-afb6-dee2f833df24",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2f326828-cfe2-4705-afb6-dee2f833df24",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("70393db1-1d65-4f2d-83bd-77bf6d6d5e51",
	1792.000000,
	1344.000000,
	"2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO DIM_CON
	VALUES ("a050f7c7-baa1-44a7-89ee-85cbc35c7817",
	1696.000000,
	1280.000000,
	"2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO DIM_CON
	VALUES ("bf78aa0f-110a-4a93-8884-278530cde229",
	1728.000000,
	1248.000000,
	"2f326828-cfe2-4705-afb6-dee2f833df24");
INSERT INTO GD_GE
	VALUES ("cb918186-de50-40b9-ab0b-e4c3d9e440a3",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"9c73ecee-d4e1-4471-8e1c-0ecd3e7c4daa",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Local Variables');
INSERT INTO GD_SHP
	VALUES ("cb918186-de50-40b9-ab0b-e4c3d9e440a3");
INSERT INTO GD_NCS
	VALUES ("cb918186-de50-40b9-ab0b-e4c3d9e440a3");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"cb918186-de50-40b9-ab0b-e4c3d9e440a3");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1392.000000,
	"cb918186-de50-40b9-ab0b-e4c3d9e440a3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("cb918186-de50-40b9-ab0b-e4c3d9e440a3",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9bef588a-8218-44a5-897d-3344fda7fcc7",
	1792.000000,
	1392.000000,
	"cb918186-de50-40b9-ab0b-e4c3d9e440a3");
INSERT INTO DIM_CON
	VALUES ("57ba68ed-fee0-40d0-97ae-191e668838dd",
	1792.000000,
	1488.000000,
	"cb918186-de50-40b9-ab0b-e4c3d9e440a3");
INSERT INTO GD_GE
	VALUES ("4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"3899e910-cf00-4f1e-899c-84885d22aba8",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Object Attributes');
INSERT INTO GD_SHP
	VALUES ("4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4");
INSERT INTO GD_NCS
	VALUES ("4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1536.000000,
	"4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("d2bdfba7-7a5b-4e5b-bf2a-c75fa07f5ee0",
	1792.000000,
	1536.000000,
	"4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4");
INSERT INTO DIM_CON
	VALUES ("b6ea349c-a13e-4249-9db1-de52642d67de",
	1792.000000,
	1632.000000,
	"4b02bdbd-96f6-4ab0-b704-cafc9c2a3de4");
INSERT INTO GD_GE
	VALUES ("a4406af7-0912-4758-b9f7-568446781806",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"5ef1e422-c495-4caa-9d73-532c43e69ccc",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Supplemental Data Items Received From An Event');
INSERT INTO GD_SHP
	VALUES ("a4406af7-0912-4758-b9f7-568446781806");
INSERT INTO GD_NCS
	VALUES ("a4406af7-0912-4758-b9f7-568446781806");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"a4406af7-0912-4758-b9f7-568446781806");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1680.000000,
	"a4406af7-0912-4758-b9f7-568446781806",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a4406af7-0912-4758-b9f7-568446781806",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("5f83cfd3-c37b-4c6a-9418-44a5704a8787",
	1792.000000,
	1680.000000,
	"a4406af7-0912-4758-b9f7-568446781806");
INSERT INTO DIM_CON
	VALUES ("7d6b5862-46cc-4f8e-9085-2a26d995b7f2",
	1792.000000,
	1776.000000,
	"a4406af7-0912-4758-b9f7-568446781806");
INSERT INTO GD_GE
	VALUES ("1ae42397-9ba1-4582-9dfe-0b42eb60ba54",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"12ba21a4-84c5-48c8-aa84-76359ca2c4c7",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Function Invocations');
INSERT INTO GD_SHP
	VALUES ("1ae42397-9ba1-4582-9dfe-0b42eb60ba54");
INSERT INTO GD_NCS
	VALUES ("1ae42397-9ba1-4582-9dfe-0b42eb60ba54");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"1ae42397-9ba1-4582-9dfe-0b42eb60ba54");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1824.000000,
	"1ae42397-9ba1-4582-9dfe-0b42eb60ba54",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1ae42397-9ba1-4582-9dfe-0b42eb60ba54",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("afc68476-35ac-43f1-b689-8be5c5d81217",
	1792.000000,
	1824.000000,
	"1ae42397-9ba1-4582-9dfe-0b42eb60ba54");
INSERT INTO DIM_CON
	VALUES ("25da306e-c141-489b-934b-130570609564",
	1792.000000,
	1920.000000,
	"1ae42397-9ba1-4582-9dfe-0b42eb60ba54");
INSERT INTO GD_GE
	VALUES ("39cfd5f2-7378-4c61-86cf-e571b4b28e0d",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"2135dcf3-bfec-43b6-a463-883707c64399",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Transformer Invocations');
INSERT INTO GD_SHP
	VALUES ("39cfd5f2-7378-4c61-86cf-e571b4b28e0d");
INSERT INTO GD_NCS
	VALUES ("39cfd5f2-7378-4c61-86cf-e571b4b28e0d");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"39cfd5f2-7378-4c61-86cf-e571b4b28e0d");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1968.000000,
	"39cfd5f2-7378-4c61-86cf-e571b4b28e0d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("39cfd5f2-7378-4c61-86cf-e571b4b28e0d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("bf315c0a-67ae-4413-944c-860e696b3bba",
	1792.000000,
	1968.000000,
	"39cfd5f2-7378-4c61-86cf-e571b4b28e0d");
INSERT INTO DIM_CON
	VALUES ("0703b222-a17c-4e52-b7a9-53f399bb4a90",
	1792.000000,
	2064.000000,
	"39cfd5f2-7378-4c61-86cf-e571b4b28e0d");
INSERT INTO GD_GE
	VALUES ("901edba7-82fa-4e36-84cd-c008fea57051",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"8edc7911-d7c5-4940-968d-0b5926dc206c",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Bridge Invocations');
INSERT INTO GD_SHP
	VALUES ("901edba7-82fa-4e36-84cd-c008fea57051");
INSERT INTO GD_NCS
	VALUES ("901edba7-82fa-4e36-84cd-c008fea57051");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"901edba7-82fa-4e36-84cd-c008fea57051");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2112.000000,
	"901edba7-82fa-4e36-84cd-c008fea57051",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("901edba7-82fa-4e36-84cd-c008fea57051",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("d0a76c8d-de9b-465c-8f8e-ea8ef240b922",
	1792.000000,
	2112.000000,
	"901edba7-82fa-4e36-84cd-c008fea57051");
INSERT INTO DIM_CON
	VALUES ("11c9f379-4b1a-464c-a38e-18cae20ea569",
	1792.000000,
	2208.000000,
	"901edba7-82fa-4e36-84cd-c008fea57051");
INSERT INTO GD_GE
	VALUES ("01e9bf9a-d67f-4e36-8428-a7b693370006",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"e30d84b8-54c2-4d52-bd4d-0f6d1f30f967",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Order of Operations');
INSERT INTO GD_SHP
	VALUES ("01e9bf9a-d67f-4e36-8428-a7b693370006");
INSERT INTO GD_NCS
	VALUES ("01e9bf9a-d67f-4e36-8428-a7b693370006");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"01e9bf9a-d67f-4e36-8428-a7b693370006");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2256.000000,
	"01e9bf9a-d67f-4e36-8428-a7b693370006",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("01e9bf9a-d67f-4e36-8428-a7b693370006",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("aa3bd953-1d24-42c1-8bb4-80bb349be3ff",
	1792.000000,
	2256.000000,
	"01e9bf9a-d67f-4e36-8428-a7b693370006");
INSERT INTO DIM_CON
	VALUES ("040f58f1-3159-4fb9-98ad-51d4a7b6fd02",
	1872.000000,
	2320.000000,
	"01e9bf9a-d67f-4e36-8428-a7b693370006");
INSERT INTO GD_GE
	VALUES ("5c4d3168-357a-4afe-ab00-12edd01f0b51",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"16e1f0b0-e3f9-4541-9824-8f8296b7820a",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Stress Limits of Compound Expressions');
INSERT INTO GD_SHP
	VALUES ("5c4d3168-357a-4afe-ab00-12edd01f0b51");
INSERT INTO GD_NCS
	VALUES ("5c4d3168-357a-4afe-ab00-12edd01f0b51");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"5c4d3168-357a-4afe-ab00-12edd01f0b51");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1536.000000,
	"5c4d3168-357a-4afe-ab00-12edd01f0b51",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5c4d3168-357a-4afe-ab00-12edd01f0b51",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("51fb9d30-84eb-489c-80e1-e41f64ede4f9",
	2064.000000,
	1632.000000,
	"5c4d3168-357a-4afe-ab00-12edd01f0b51");
INSERT INTO DIM_CON
	VALUES ("46fd4d49-ddd6-44c4-a17f-abcfd9a268cf",
	2064.000000,
	1536.000000,
	"5c4d3168-357a-4afe-ab00-12edd01f0b51");
INSERT INTO GD_GE
	VALUES ("05b4f011-0aef-42c7-90be-7562ebc7b785",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"671a6348-1136-455a-80f0-6705b3886fc7",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bridges Within Expressions');
INSERT INTO GD_SHP
	VALUES ("05b4f011-0aef-42c7-90be-7562ebc7b785");
INSERT INTO GD_NCS
	VALUES ("05b4f011-0aef-42c7-90be-7562ebc7b785");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"05b4f011-0aef-42c7-90be-7562ebc7b785");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1680.000000,
	"05b4f011-0aef-42c7-90be-7562ebc7b785",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("05b4f011-0aef-42c7-90be-7562ebc7b785",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("38e1dbf0-857a-4e68-9cad-bf28fc52e79f",
	2064.000000,
	1776.000000,
	"05b4f011-0aef-42c7-90be-7562ebc7b785");
INSERT INTO DIM_CON
	VALUES ("882e078f-a777-4a90-95a0-b1b846589fb5",
	2064.000000,
	1680.000000,
	"05b4f011-0aef-42c7-90be-7562ebc7b785");
INSERT INTO GD_GE
	VALUES ("cbb410b8-1b48-4795-8888-fb9ede8b5c89",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"96427a47-dceb-4fa2-811d-33f3adca2fef",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Transforms Within Expressions');
INSERT INTO GD_SHP
	VALUES ("cbb410b8-1b48-4795-8888-fb9ede8b5c89");
INSERT INTO GD_NCS
	VALUES ("cbb410b8-1b48-4795-8888-fb9ede8b5c89");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"cbb410b8-1b48-4795-8888-fb9ede8b5c89");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1824.000000,
	"cbb410b8-1b48-4795-8888-fb9ede8b5c89",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("cbb410b8-1b48-4795-8888-fb9ede8b5c89",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("cdb03874-010e-4164-ada4-57523dbd074f",
	2064.000000,
	1824.000000,
	"cbb410b8-1b48-4795-8888-fb9ede8b5c89");
INSERT INTO DIM_CON
	VALUES ("a669d7c1-da8c-400b-9ab5-df1cbb4d9a5f",
	2064.000000,
	1920.000000,
	"cbb410b8-1b48-4795-8888-fb9ede8b5c89");
INSERT INTO GD_GE
	VALUES ("a48ec229-9c19-4c53-9de5-d16e47532a3e",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"ff43c52f-9cae-45eb-bdb3-99e7750c12d4",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Combinine Real and Integer Data Types');
INSERT INTO GD_SHP
	VALUES ("a48ec229-9c19-4c53-9de5-d16e47532a3e");
INSERT INTO GD_NCS
	VALUES ("a48ec229-9c19-4c53-9de5-d16e47532a3e");
INSERT INTO DIM_ND
	VALUES (240.000000,
	528.000000,
	"a48ec229-9c19-4c53-9de5-d16e47532a3e");
INSERT INTO DIM_GE
	VALUES (2304.000000,
	1536.000000,
	"a48ec229-9c19-4c53-9de5-d16e47532a3e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a48ec229-9c19-4c53-9de5-d16e47532a3e",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9f70acfe-8074-418c-bb0b-1ad887890d17",
	2544.000000,
	2016.000000,
	"a48ec229-9c19-4c53-9de5-d16e47532a3e");
INSERT INTO DIM_CON
	VALUES ("1a58151c-5585-4bcd-9ece-ab7b419f9404",
	2544.000000,
	1840.000000,
	"a48ec229-9c19-4c53-9de5-d16e47532a3e");
INSERT INTO GD_GE
	VALUES ("0a63d933-aefb-45fe-9059-22df6ea9054b",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"93230abf-a963-4fcd-881f-68391a2edb7f",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Unary Ops');
INSERT INTO GD_SHP
	VALUES ("0a63d933-aefb-45fe-9059-22df6ea9054b");
INSERT INTO GD_NCS
	VALUES ("0a63d933-aefb-45fe-9059-22df6ea9054b");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"0a63d933-aefb-45fe-9059-22df6ea9054b");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1968.000000,
	"0a63d933-aefb-45fe-9059-22df6ea9054b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0a63d933-aefb-45fe-9059-22df6ea9054b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("a115d208-3533-4879-b7b4-fa485f9560c1",
	2064.000000,
	1968.000000,
	"0a63d933-aefb-45fe-9059-22df6ea9054b");
INSERT INTO DIM_CON
	VALUES ("327faf52-0437-4827-8f3a-c8c86daf30b7",
	2064.000000,
	2064.000000,
	"0a63d933-aefb-45fe-9059-22df6ea9054b");
INSERT INTO GD_GE
	VALUES ("8f336794-4974-4ee9-aeec-527938003872",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"a5f0b4d9-77bf-44f3-936f-461d2447ec3e",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::If Expressions');
INSERT INTO GD_SHP
	VALUES ("8f336794-4974-4ee9-aeec-527938003872");
INSERT INTO GD_NCS
	VALUES ("8f336794-4974-4ee9-aeec-527938003872");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"8f336794-4974-4ee9-aeec-527938003872");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	2112.000000,
	"8f336794-4974-4ee9-aeec-527938003872",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8f336794-4974-4ee9-aeec-527938003872",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("08233282-d039-4829-95be-395707124d85",
	2064.000000,
	2112.000000,
	"8f336794-4974-4ee9-aeec-527938003872");
INSERT INTO DIM_CON
	VALUES ("08af5400-24a3-4d62-ac85-2f5b3f72f642",
	2064.000000,
	2208.000000,
	"8f336794-4974-4ee9-aeec-527938003872");
INSERT INTO GD_GE
	VALUES ("756c8868-2fc3-42e7-9164-e61b3dcb0d3c",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"4edacc52-e011-461c-908d-613c1949ac03",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters');
INSERT INTO GD_SHP
	VALUES ("756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO GD_NCS
	VALUES ("756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	2256.000000,
	"756c8868-2fc3-42e7-9164-e61b3dcb0d3c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("756c8868-2fc3-42e7-9164-e61b3dcb0d3c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("f8637ce7-c61f-4db2-912c-da83f5172351",
	2064.000000,
	2256.000000,
	"756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO DIM_CON
	VALUES ("8097c66a-ae11-4f8a-8482-824ccf0f36e0",
	2160.000000,
	2288.000000,
	"756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO DIM_CON
	VALUES ("f927a2fb-029f-42bc-834c-6ec487a776f6",
	2160.000000,
	2320.000000,
	"756c8868-2fc3-42e7-9164-e61b3dcb0d3c");
INSERT INTO GD_GE
	VALUES ("049c6b4f-933c-493e-b0c8-b3423754dc37",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"3bcf581a-a59d-474a-b80c-aa3f9d026c54",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event');
INSERT INTO GD_SHP
	VALUES ("049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO GD_NCS
	VALUES ("049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	2176.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("049c6b4f-933c-493e-b0c8-b3423754dc37",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("70a18bd9-d5cd-4f79-b99b-aa5346da28d1",
	2496.000000,
	2240.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_CON
	VALUES ("eba3201f-c900-43ae-ad4c-6ff3666e5406",
	2528.000000,
	2272.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_CON
	VALUES ("507b559e-3282-4209-a70d-22664707b794",
	2640.000000,
	2272.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_CON
	VALUES ("b08c0d24-2a98-420a-ba46-7b84b339aead",
	2512.000000,
	2176.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_CON
	VALUES ("1b39d85d-5679-448c-8be3-479feba1f493",
	2640.000000,
	2176.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO DIM_CON
	VALUES ("03b7470e-3232-4f72-849c-5a93b5e9fb3d",
	2672.000000,
	2208.000000,
	"049c6b4f-933c-493e-b0c8-b3423754dc37");
INSERT INTO GD_GE
	VALUES ("a3b22102-0735-4d7c-959b-fa56094da0ee",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"0d109b5e-9064-408f-a463-49ef0e9c5b4e",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event');
INSERT INTO GD_SHP
	VALUES ("a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO GD_NCS
	VALUES ("a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	2352.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3b22102-0735-4d7c-959b-fa56094da0ee",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("c4166a7a-2b36-4660-90f9-b7222fb397fb",
	2496.000000,
	2368.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_CON
	VALUES ("bba13ba3-af65-49ed-b9a7-63a241686bec",
	2528.000000,
	2352.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_CON
	VALUES ("8bbb846b-bece-4f86-8d8a-d36a036d1b89",
	2640.000000,
	2352.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_CON
	VALUES ("828d03dd-a3d2-48fc-94e5-b9d59ab5d8be",
	2512.000000,
	2448.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_CON
	VALUES ("64f2cc33-73c6-4271-ab15-e7f6065e2d92",
	2656.000000,
	2448.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO DIM_CON
	VALUES ("4ad51583-c647-465e-baff-d19e94340842",
	2672.000000,
	2416.000000,
	"a3b22102-0735-4d7c-959b-fa56094da0ee");
INSERT INTO GD_GE
	VALUES ("664956a7-dacb-4e5d-883d-16637d66fa9b",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"5c061101-3c88-4a6c-a028-2595f3c7bbad",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms');
INSERT INTO GD_SHP
	VALUES ("664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO GD_NCS
	VALUES ("664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO DIM_ND
	VALUES (144.000000,
	112.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	2256.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("664956a7-dacb-4e5d-883d-16637d66fa9b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("a5e1447a-0fd8-4a7b-9dd2-199bb7e2937f",
	2912.000000,
	2256.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO DIM_CON
	VALUES ("42e2636d-8e34-46ac-bdc7-5ad7f1f5db62",
	2912.000000,
	2368.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO DIM_CON
	VALUES ("bf96745e-1892-47ed-bf88-9bbbf8852644",
	2944.000000,
	2256.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO DIM_CON
	VALUES ("50c09839-2a91-44dd-86b2-5713f84287d2",
	2976.000000,
	2336.000000,
	"664956a7-dacb-4e5d-883d-16637d66fa9b");
INSERT INTO GD_GE
	VALUES ("0370c37a-aca2-49b3-919f-1d3e291980c1",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"90305451-88c8-43bf-a3a2-dd71ff8df1ef",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks');
INSERT INTO GD_SHP
	VALUES ("0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO GD_NCS
	VALUES ("0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	2000.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0370c37a-aca2-49b3-919f-1d3e291980c1",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("6b1ed0e9-273a-4048-a719-d452e39ac2c4",
	2864.000000,
	2000.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_CON
	VALUES ("4f6e924d-03a4-450e-9c99-a9c870cf7ed1",
	2960.000000,
	2000.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_CON
	VALUES ("20931168-3597-416f-a0f1-88dad45f1656",
	2992.000000,
	2032.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_CON
	VALUES ("074bfa15-64ac-42a1-be41-91f42c595d39",
	2992.000000,
	2080.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_CON
	VALUES ("9fd0bb13-de98-4441-b029-adaa88c04239",
	2944.000000,
	2096.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO DIM_CON
	VALUES ("1da06e2d-ad9e-40d0-b3e3-a70ce66efe0d",
	2832.000000,
	2016.000000,
	"0370c37a-aca2-49b3-919f-1d3e291980c1");
INSERT INTO GD_GE
	VALUES ("f134260e-5531-46e4-a619-997988aac14d",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"01b17fae-d4c2-407a-bfdb-dd11e008b19e",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks');
INSERT INTO GD_SHP
	VALUES ("f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO GD_NCS
	VALUES ("f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_GE
	VALUES (3152.000000,
	2000.000000,
	"f134260e-5531-46e4-a619-997988aac14d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f134260e-5531-46e4-a619-997988aac14d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("1543e653-929e-44f2-bd81-253d45078edb",
	3216.000000,
	2096.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_CON
	VALUES ("9ce3d66a-c046-4f3c-acf4-4059c4898041",
	3296.000000,
	2096.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_CON
	VALUES ("ffe7b234-33db-40c1-b45e-dabe8fd993a1",
	3152.000000,
	2032.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_CON
	VALUES ("b7b13d77-9e08-4a78-adc9-3a9230a79a5e",
	3152.000000,
	2080.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_CON
	VALUES ("7eafbb6a-f665-49a1-ad8b-e9e5078db861",
	3184.000000,
	2096.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO DIM_CON
	VALUES ("62bd7ec6-325d-42da-a3f9-d01df59f0dd9",
	3216.000000,
	2000.000000,
	"f134260e-5531-46e4-a619-997988aac14d");
INSERT INTO GD_GE
	VALUES ("64f39134-bf9c-4ab8-8760-d199adf0f693",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"0cf3da32-c60a-4d2b-97af-a2e165bf3c0f",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref_set<Object>');
INSERT INTO GD_SHP
	VALUES ("64f39134-bf9c-4ab8-8760-d199adf0f693");
INSERT INTO GD_NCS
	VALUES ("64f39134-bf9c-4ab8-8760-d199adf0f693");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"64f39134-bf9c-4ab8-8760-d199adf0f693");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1392.000000,
	"64f39134-bf9c-4ab8-8760-d199adf0f693",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("64f39134-bf9c-4ab8-8760-d199adf0f693",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("c05a56ff-89e4-48de-8ff8-fe7d310f8cc7",
	2064.000000,
	1488.000000,
	"64f39134-bf9c-4ab8-8760-d199adf0f693");
INSERT INTO DIM_CON
	VALUES ("4383af4a-edff-4f91-89fc-afb4aa7660c1",
	2064.000000,
	1392.000000,
	"64f39134-bf9c-4ab8-8760-d199adf0f693");
INSERT INTO GD_GE
	VALUES ("96cb1a05-5109-4b8f-b92a-fe354a1c0c98",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"ff6adc9e-7329-440a-97f5-f32d8fe055a3",
	41,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref<Object>');
INSERT INTO GD_SHP
	VALUES ("96cb1a05-5109-4b8f-b92a-fe354a1c0c98");
INSERT INTO GD_NCS
	VALUES ("96cb1a05-5109-4b8f-b92a-fe354a1c0c98");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"96cb1a05-5109-4b8f-b92a-fe354a1c0c98");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1248.000000,
	"96cb1a05-5109-4b8f-b92a-fe354a1c0c98",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("96cb1a05-5109-4b8f-b92a-fe354a1c0c98",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9b92fdb8-38a8-4223-83a5-de3e9047895f",
	2064.000000,
	1344.000000,
	"96cb1a05-5109-4b8f-b92a-fe354a1c0c98");
INSERT INTO DIM_CON
	VALUES ("665ac919-9bee-4ded-be86-047e9b0ff852",
	1984.000000,
	1296.000000,
	"96cb1a05-5109-4b8f-b92a-fe354a1c0c98");
INSERT INTO GD_GE
	VALUES ("149f4950-d447-458b-bae3-02336f665f2d",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"d00103a2-04ff-4abb-a0f6-c8a3d2d2b052",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("149f4950-d447-458b-bae3-02336f665f2d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("160f5fd2-d2d5-404d-8e43-b8a0d2c3ff41",
	"149f4950-d447-458b-bae3-02336f665f2d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"160f5fd2-d2d5-404d-8e43-b8a0d2c3ff41");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"160f5fd2-d2d5-404d-8e43-b8a0d2c3ff41",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("160f5fd2-d2d5-404d-8e43-b8a0d2c3ff41",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f635c7f5-c207-483e-b094-7cc2c2b592c2",
	"149f4950-d447-458b-bae3-02336f665f2d",
	3,
	-105.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (118.000000,
	35.000000,
	"f635c7f5-c207-483e-b094-7cc2c2b592c2");
INSERT INTO DIM_GE
	VALUES (1671.000000,
	1352.000000,
	"f635c7f5-c207-483e-b094-7cc2c2b592c2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f635c7f5-c207-483e-b094-7cc2c2b592c2",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("47fb4854-698c-44b5-b829-9d881985fd15",
	"149f4950-d447-458b-bae3-02336f665f2d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"47fb4854-698c-44b5-b829-9d881985fd15");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"47fb4854-698c-44b5-b829-9d881985fd15",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("47fb4854-698c-44b5-b829-9d881985fd15",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("4945098e-6e34-4488-9157-77acb716d94e",
	"149f4950-d447-458b-bae3-02336f665f2d",
	"00000000-0000-0000-0000-000000000000",
	"cd013800-4aa1-455a-bc19-6bc313b74bdc",
	"2e628457-45c3-42ef-affe-619ad188cc0f");
INSERT INTO DIM_WAY
	VALUES ("cd013800-4aa1-455a-bc19-6bc313b74bdc",
	1792.000000,
	1344.000000,
	"149f4950-d447-458b-bae3-02336f665f2d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("2e628457-45c3-42ef-affe-619ad188cc0f",
	1792.000000,
	1392.000000,
	"149f4950-d447-458b-bae3-02336f665f2d",
	"00000000-0000-0000-0000-000000000000",
	"cd013800-4aa1-455a-bc19-6bc313b74bdc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"149f4950-d447-458b-bae3-02336f665f2d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("149f4950-d447-458b-bae3-02336f665f2d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("70393db1-1d65-4f2d-83bd-77bf6d6d5e51",
	"9bef588a-8218-44a5-897d-3344fda7fcc7",
	"149f4950-d447-458b-bae3-02336f665f2d");
INSERT INTO GD_GE
	VALUES ("f34443db-6a20-46b9-bee6-52477a59833b",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"72730662-f7be-4b7a-8b3d-cd618198747c",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Local Variables::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("f34443db-6a20-46b9-bee6-52477a59833b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("995fa64b-82a6-4b2f-9151-1c773d3a77cc",
	"f34443db-6a20-46b9-bee6-52477a59833b",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"995fa64b-82a6-4b2f-9151-1c773d3a77cc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"995fa64b-82a6-4b2f-9151-1c773d3a77cc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("995fa64b-82a6-4b2f-9151-1c773d3a77cc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1cf2a75f-927b-4ee3-841e-3692e1f4c11c",
	"f34443db-6a20-46b9-bee6-52477a59833b",
	3,
	-103.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (114.000000,
	34.000000,
	"1cf2a75f-927b-4ee3-841e-3692e1f4c11c");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1495.000000,
	"1cf2a75f-927b-4ee3-841e-3692e1f4c11c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1cf2a75f-927b-4ee3-841e-3692e1f4c11c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fda6cb9d-4dcc-4df9-b812-da06b0fe58c4",
	"f34443db-6a20-46b9-bee6-52477a59833b",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fda6cb9d-4dcc-4df9-b812-da06b0fe58c4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fda6cb9d-4dcc-4df9-b812-da06b0fe58c4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fda6cb9d-4dcc-4df9-b812-da06b0fe58c4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2f909ee7-cdd2-43c5-8e17-9ae11b5f5959",
	"f34443db-6a20-46b9-bee6-52477a59833b",
	"00000000-0000-0000-0000-000000000000",
	"6078d580-94ee-4ae4-ba34-6a86a3004ab8",
	"e1bce796-d2e3-4771-b03b-3a02b2223517");
INSERT INTO DIM_WAY
	VALUES ("6078d580-94ee-4ae4-ba34-6a86a3004ab8",
	1792.000000,
	1488.000000,
	"f34443db-6a20-46b9-bee6-52477a59833b",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e1bce796-d2e3-4771-b03b-3a02b2223517",
	1792.000000,
	1536.000000,
	"f34443db-6a20-46b9-bee6-52477a59833b",
	"00000000-0000-0000-0000-000000000000",
	"6078d580-94ee-4ae4-ba34-6a86a3004ab8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f34443db-6a20-46b9-bee6-52477a59833b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f34443db-6a20-46b9-bee6-52477a59833b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("57ba68ed-fee0-40d0-97ae-191e668838dd",
	"d2bdfba7-7a5b-4e5b-bf2a-c75fa07f5ee0",
	"f34443db-6a20-46b9-bee6-52477a59833b");
INSERT INTO GD_GE
	VALUES ("3d5933de-490d-48b3-aa14-7e01bd884065",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"7afb53b5-daec-4fda-b5df-74b6fde6d635",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Object Attributes::TCE3: event with supp data');
INSERT INTO GD_CON
	VALUES ("3d5933de-490d-48b3-aa14-7e01bd884065",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9f201106-0391-4e1a-9eba-6bcd6079a4b3",
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"9f201106-0391-4e1a-9eba-6bcd6079a4b3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9f201106-0391-4e1a-9eba-6bcd6079a4b3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9f201106-0391-4e1a-9eba-6bcd6079a4b3",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c34703cd-b08a-42b4-8aac-49ab49d4d492",
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	3,
	-11.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (157.000000,
	42.000000,
	"c34703cd-b08a-42b4-8aac-49ab49d4d492");
INSERT INTO DIM_GE
	VALUES (1618.000000,
	1639.000000,
	"c34703cd-b08a-42b4-8aac-49ab49d4d492",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c34703cd-b08a-42b4-8aac-49ab49d4d492",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f0a82328-230a-4eeb-b9b9-476ea2e30bd0",
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f0a82328-230a-4eeb-b9b9-476ea2e30bd0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f0a82328-230a-4eeb-b9b9-476ea2e30bd0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f0a82328-230a-4eeb-b9b9-476ea2e30bd0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("a3fe1dc6-2e93-4d4d-82ed-1d04a455a393",
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	"00000000-0000-0000-0000-000000000000",
	"88834966-2207-4c0e-a83e-5564a260a258",
	"70cc42e1-aa09-42ed-bf4b-ee80571ad20d");
INSERT INTO DIM_WAY
	VALUES ("88834966-2207-4c0e-a83e-5564a260a258",
	1792.000000,
	1632.000000,
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("70cc42e1-aa09-42ed-bf4b-ee80571ad20d",
	1792.000000,
	1680.000000,
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	"00000000-0000-0000-0000-000000000000",
	"88834966-2207-4c0e-a83e-5564a260a258");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"3d5933de-490d-48b3-aa14-7e01bd884065",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3d5933de-490d-48b3-aa14-7e01bd884065",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("b6ea349c-a13e-4249-9db1-de52642d67de",
	"5f83cfd3-c37b-4c6a-9418-44a5704a8787",
	"3d5933de-490d-48b3-aa14-7e01bd884065");
INSERT INTO GD_GE
	VALUES ("aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"fd562652-d96d-456a-ac4d-8b3dc4dffc9b",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Constants::TCE1: start test');
INSERT INTO GD_CON
	VALUES ("aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b93af46e-cbc0-4f45-b47b-fa5960479576",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b93af46e-cbc0-4f45-b47b-fa5960479576");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b93af46e-cbc0-4f45-b47b-fa5960479576",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b93af46e-cbc0-4f45-b47b-fa5960479576",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1cd67546-83f6-4f75-a173-ce26ea139f8e",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	3,
	108.000000,
	-48.000000);
INSERT INTO DIM_ND
	VALUES (108.000000,
	22.000000,
	"1cd67546-83f6-4f75-a173-ce26ea139f8e");
INSERT INTO DIM_GE
	VALUES (1658.000000,
	1191.000000,
	"1cd67546-83f6-4f75-a173-ce26ea139f8e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1cd67546-83f6-4f75-a173-ce26ea139f8e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("de461481-1d16-4bd7-a486-106dd0849549",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"de461481-1d16-4bd7-a486-106dd0849549");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"de461481-1d16-4bd7-a486-106dd0849549",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("de461481-1d16-4bd7-a486-106dd0849549",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("b65af725-f55c-45ef-ae9b-947007305258",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"668d27d3-f1aa-4c8b-be9a-26fb76db1360",
	"d277f2f1-d442-4640-95e4-420ea793c0f7");
INSERT INTO GD_LS
	VALUES ("da83ab12-d5de-430e-8ec9-52e840e0e08c",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"b65af725-f55c-45ef-ae9b-947007305258",
	"d277f2f1-d442-4640-95e4-420ea793c0f7",
	"2feefbbc-2cfa-4c41-a84b-57b96817e047");
INSERT INTO GD_LS
	VALUES ("82c119ce-0b0c-411b-83fe-fd1c178874cd",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"da83ab12-d5de-430e-8ec9-52e840e0e08c",
	"2feefbbc-2cfa-4c41-a84b-57b96817e047",
	"4706298e-d3d5-4b20-975f-69b5e8461167");
INSERT INTO GD_LS
	VALUES ("4ad79988-59a9-4bc4-98b6-29ffb0261a6b",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"82c119ce-0b0c-411b-83fe-fd1c178874cd",
	"4706298e-d3d5-4b20-975f-69b5e8461167",
	"465d62fe-40fd-418b-9809-2f05c378c176");
INSERT INTO DIM_WAY
	VALUES ("668d27d3-f1aa-4c8b-be9a-26fb76db1360",
	1696.000000,
	1280.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("d277f2f1-d442-4640-95e4-420ea793c0f7",
	1664.000000,
	1280.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"668d27d3-f1aa-4c8b-be9a-26fb76db1360");
INSERT INTO DIM_WAY
	VALUES ("2feefbbc-2cfa-4c41-a84b-57b96817e047",
	1664.000000,
	1216.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"d277f2f1-d442-4640-95e4-420ea793c0f7");
INSERT INTO DIM_WAY
	VALUES ("4706298e-d3d5-4b20-975f-69b5e8461167",
	1728.000000,
	1216.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"2feefbbc-2cfa-4c41-a84b-57b96817e047");
INSERT INTO DIM_WAY
	VALUES ("465d62fe-40fd-418b-9809-2f05c378c176",
	1728.000000,
	1248.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000",
	"4706298e-d3d5-4b20-975f-69b5e8461167");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"aeda5f26-480b-4339-8a21-f4f9d99279d8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aeda5f26-480b-4339-8a21-f4f9d99279d8",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a050f7c7-baa1-44a7-89ee-85cbc35c7817",
	"bf78aa0f-110a-4a93-8884-278530cde229",
	"aeda5f26-480b-4339-8a21-f4f9d99279d8");
INSERT INTO GD_GE
	VALUES ("6d9d4e80-894b-434b-b450-975f8c2bde75",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"455176f8-a9a8-4eb3-90c8-7f6047054cbc",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Supplemental Data Items Received From An Event::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("6d9d4e80-894b-434b-b450-975f8c2bde75",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("43d45bda-c502-4114-86dd-6826697f9ad8",
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"43d45bda-c502-4114-86dd-6826697f9ad8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"43d45bda-c502-4114-86dd-6826697f9ad8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("43d45bda-c502-4114-86dd-6826697f9ad8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c34c8fcb-80ee-457d-a0d5-f9e2e5f18281",
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	3,
	-11.000000,
	-3.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"c34c8fcb-80ee-457d-a0d5-f9e2e5f18281");
INSERT INTO DIM_GE
	VALUES (1670.000000,
	1788.000000,
	"c34c8fcb-80ee-457d-a0d5-f9e2e5f18281",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c34c8fcb-80ee-457d-a0d5-f9e2e5f18281",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fe7549e8-8691-4e70-ac85-c69fc686d6a9",
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fe7549e8-8691-4e70-ac85-c69fc686d6a9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fe7549e8-8691-4e70-ac85-c69fc686d6a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fe7549e8-8691-4e70-ac85-c69fc686d6a9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("77e18c41-6513-42f5-a534-89563450b1dc",
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	"00000000-0000-0000-0000-000000000000",
	"b843a593-e501-4bf0-afa3-671dc4cc121a",
	"b91f27b2-cf07-434a-ae5d-eb6a90d0d65f");
INSERT INTO DIM_WAY
	VALUES ("b843a593-e501-4bf0-afa3-671dc4cc121a",
	1792.000000,
	1776.000000,
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("b91f27b2-cf07-434a-ae5d-eb6a90d0d65f",
	1792.000000,
	1824.000000,
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	"00000000-0000-0000-0000-000000000000",
	"b843a593-e501-4bf0-afa3-671dc4cc121a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6d9d4e80-894b-434b-b450-975f8c2bde75",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6d9d4e80-894b-434b-b450-975f8c2bde75",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("7d6b5862-46cc-4f8e-9085-2a26d995b7f2",
	"afc68476-35ac-43f1-b689-8be5c5d81217",
	"6d9d4e80-894b-434b-b450-975f8c2bde75");
INSERT INTO GD_GE
	VALUES ("92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"89f7e52c-fd2a-477b-a2fe-16eaf6e9adba",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Function Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fd9b3c9e-8d10-4c9d-9857-23a3729720bd",
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fd9b3c9e-8d10-4c9d-9857-23a3729720bd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fd9b3c9e-8d10-4c9d-9857-23a3729720bd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fd9b3c9e-8d10-4c9d-9857-23a3729720bd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e3d4233b-ac32-448a-aa90-6e2128a09628",
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	3,
	-7.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"e3d4233b-ac32-448a-aa90-6e2128a09628");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1931.000000,
	"e3d4233b-ac32-448a-aa90-6e2128a09628",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e3d4233b-ac32-448a-aa90-6e2128a09628",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fdfe56d8-d863-43b2-8728-5603fa00d385",
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fdfe56d8-d863-43b2-8728-5603fa00d385");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fdfe56d8-d863-43b2-8728-5603fa00d385",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fdfe56d8-d863-43b2-8728-5603fa00d385",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f088eb91-18ab-4661-a8e7-f249ec220296",
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"00000000-0000-0000-0000-000000000000",
	"3a886d03-ca8e-40dd-94a2-d6c5d0586947",
	"ec1bdfe6-b483-4fcd-90c6-a9c2ccb9a29b");
INSERT INTO DIM_WAY
	VALUES ("3a886d03-ca8e-40dd-94a2-d6c5d0586947",
	1792.000000,
	1920.000000,
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ec1bdfe6-b483-4fcd-90c6-a9c2ccb9a29b",
	1792.000000,
	1968.000000,
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"00000000-0000-0000-0000-000000000000",
	"3a886d03-ca8e-40dd-94a2-d6c5d0586947");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("92d88ee3-5bea-4a8a-b685-bc0b4db709ee",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("25da306e-c141-489b-934b-130570609564",
	"bf315c0a-67ae-4413-944c-860e696b3bba",
	"92d88ee3-5bea-4a8a-b685-bc0b4db709ee");
INSERT INTO GD_GE
	VALUES ("01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"e23d02e2-9534-4e75-ba5a-e18c6e6123cb",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Transformer Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ae7d81eb-04ce-4dea-9ee9-645a8c461364",
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ae7d81eb-04ce-4dea-9ee9-645a8c461364");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ae7d81eb-04ce-4dea-9ee9-645a8c461364",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ae7d81eb-04ce-4dea-9ee9-645a8c461364",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fc967c1c-f584-43e7-9e1c-79f70d2d8ef1",
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	3,
	-6.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"fc967c1c-f584-43e7-9e1c-79f70d2d8ef1");
INSERT INTO DIM_GE
	VALUES (1674.000000,
	2074.000000,
	"fc967c1c-f584-43e7-9e1c-79f70d2d8ef1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fc967c1c-f584-43e7-9e1c-79f70d2d8ef1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1a2a4e0d-f27a-4021-8248-488de7843bb1",
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1a2a4e0d-f27a-4021-8248-488de7843bb1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1a2a4e0d-f27a-4021-8248-488de7843bb1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1a2a4e0d-f27a-4021-8248-488de7843bb1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("62cfda73-a84c-4a71-8c5b-cafa51b6ce1b",
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"00000000-0000-0000-0000-000000000000",
	"b2b4b6a0-5d26-477e-a398-b3a1a6667d99",
	"13820f25-4d62-41bb-8924-a4786c197e53");
INSERT INTO DIM_WAY
	VALUES ("b2b4b6a0-5d26-477e-a398-b3a1a6667d99",
	1792.000000,
	2064.000000,
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("13820f25-4d62-41bb-8924-a4786c197e53",
	1792.000000,
	2112.000000,
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"00000000-0000-0000-0000-000000000000",
	"b2b4b6a0-5d26-477e-a398-b3a1a6667d99");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"01a09d1a-a30d-410b-9388-eee3cf4d536f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("01a09d1a-a30d-410b-9388-eee3cf4d536f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("0703b222-a17c-4e52-b7a9-53f399bb4a90",
	"d0a76c8d-de9b-465c-8f8e-ea8ef240b922",
	"01a09d1a-a30d-410b-9388-eee3cf4d536f");
INSERT INTO GD_GE
	VALUES ("e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"b35edc01-029a-4974-8894-637588ac2c2b",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using Bridge Invocations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0af22caf-2a98-46a1-a410-b3c4d8c9f643",
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0af22caf-2a98-46a1-a410-b3c4d8c9f643");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0af22caf-2a98-46a1-a410-b3c4d8c9f643",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0af22caf-2a98-46a1-a410-b3c4d8c9f643",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2d36596d-653a-4504-89af-7daa9a173fd9",
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	3,
	-7.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"2d36596d-653a-4504-89af-7daa9a173fd9");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	2218.000000,
	"2d36596d-653a-4504-89af-7daa9a173fd9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2d36596d-653a-4504-89af-7daa9a173fd9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b792f265-d29d-4bac-8b3b-3cd0095d7bae",
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b792f265-d29d-4bac-8b3b-3cd0095d7bae");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b792f265-d29d-4bac-8b3b-3cd0095d7bae",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b792f265-d29d-4bac-8b3b-3cd0095d7bae",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("c9dfc125-cde8-4e9c-8be2-6983db6fe913",
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"00000000-0000-0000-0000-000000000000",
	"b3bee0b7-01a8-48a0-a308-335ed633f3ac",
	"22db658e-6376-4415-a53a-fcf583488c96");
INSERT INTO DIM_WAY
	VALUES ("b3bee0b7-01a8-48a0-a308-335ed633f3ac",
	1792.000000,
	2208.000000,
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("22db658e-6376-4415-a53a-fcf583488c96",
	1792.000000,
	2256.000000,
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"00000000-0000-0000-0000-000000000000",
	"b3bee0b7-01a8-48a0-a308-335ed633f3ac");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e92f8c6c-6beb-44ba-8c17-6c9709be7b9e",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("11c9f379-4b1a-464c-a38e-18cae20ea569",
	"aa3bd953-1d24-42c1-8bb4-80bb349be3ff",
	"e92f8c6c-6beb-44ba-8c17-6c9709be7b9e");
INSERT INTO GD_GE
	VALUES ("d7942376-2c04-4256-a45b-46320c7d5795",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"f285c186-9d9f-4d8f-a084-b5684dfaee22",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bridges Within Expressions::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("d7942376-2c04-4256-a45b-46320c7d5795",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("12bf3169-ca7c-451d-8099-551f35df9c13",
	"d7942376-2c04-4256-a45b-46320c7d5795",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"12bf3169-ca7c-451d-8099-551f35df9c13");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"12bf3169-ca7c-451d-8099-551f35df9c13",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("12bf3169-ca7c-451d-8099-551f35df9c13",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fe4c63a8-27cc-4d44-a620-7436b60a9a53",
	"d7942376-2c04-4256-a45b-46320c7d5795",
	3,
	131.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"fe4c63a8-27cc-4d44-a620-7436b60a9a53");
INSERT INTO DIM_GE
	VALUES (2084.000000,
	1791.000000,
	"fe4c63a8-27cc-4d44-a620-7436b60a9a53",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fe4c63a8-27cc-4d44-a620-7436b60a9a53",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("86d31f7d-fbe9-4b07-ae91-014f0b047e2a",
	"d7942376-2c04-4256-a45b-46320c7d5795",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"86d31f7d-fbe9-4b07-ae91-014f0b047e2a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"86d31f7d-fbe9-4b07-ae91-014f0b047e2a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("86d31f7d-fbe9-4b07-ae91-014f0b047e2a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("1fac6a64-f779-4d37-85bc-aa15528f1319",
	"d7942376-2c04-4256-a45b-46320c7d5795",
	"00000000-0000-0000-0000-000000000000",
	"98e3e1a8-6205-4515-a27e-9d986d154008",
	"def3b7d7-0f32-4c04-b070-d51a887b3cdd");
INSERT INTO DIM_WAY
	VALUES ("98e3e1a8-6205-4515-a27e-9d986d154008",
	2064.000000,
	1776.000000,
	"d7942376-2c04-4256-a45b-46320c7d5795",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("def3b7d7-0f32-4c04-b070-d51a887b3cdd",
	2064.000000,
	1824.000000,
	"d7942376-2c04-4256-a45b-46320c7d5795",
	"00000000-0000-0000-0000-000000000000",
	"98e3e1a8-6205-4515-a27e-9d986d154008");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d7942376-2c04-4256-a45b-46320c7d5795",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d7942376-2c04-4256-a45b-46320c7d5795",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("38e1dbf0-857a-4e68-9cad-bf28fc52e79f",
	"cdb03874-010e-4164-ada4-57523dbd074f",
	"d7942376-2c04-4256-a45b-46320c7d5795");
INSERT INTO GD_GE
	VALUES ("89ae72f7-99df-4406-a108-2527e1213c86",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"d0d5aa4c-0798-48fa-9034-cff3beaac4e6",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Stress Limits of Compound Expressions::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("89ae72f7-99df-4406-a108-2527e1213c86",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f52ab74f-a8c9-47da-bda8-920eb17d5e7c",
	"89ae72f7-99df-4406-a108-2527e1213c86",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f52ab74f-a8c9-47da-bda8-920eb17d5e7c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f52ab74f-a8c9-47da-bda8-920eb17d5e7c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f52ab74f-a8c9-47da-bda8-920eb17d5e7c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e6a6b00c-9822-4bc0-92b0-959d62c832fb",
	"89ae72f7-99df-4406-a108-2527e1213c86",
	3,
	127.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"e6a6b00c-9822-4bc0-92b0-959d62c832fb");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	1643.000000,
	"e6a6b00c-9822-4bc0-92b0-959d62c832fb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e6a6b00c-9822-4bc0-92b0-959d62c832fb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7d11e187-da51-417b-af9a-670282f55fe8",
	"89ae72f7-99df-4406-a108-2527e1213c86",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7d11e187-da51-417b-af9a-670282f55fe8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7d11e187-da51-417b-af9a-670282f55fe8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7d11e187-da51-417b-af9a-670282f55fe8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("4b35879f-ae13-4f79-b0ea-88364356c229",
	"89ae72f7-99df-4406-a108-2527e1213c86",
	"00000000-0000-0000-0000-000000000000",
	"b8df52f9-279a-48da-a6c5-7da1f3e90a40",
	"49af74e5-74ca-4660-848b-0767bfe3a0a6");
INSERT INTO DIM_WAY
	VALUES ("b8df52f9-279a-48da-a6c5-7da1f3e90a40",
	2064.000000,
	1632.000000,
	"89ae72f7-99df-4406-a108-2527e1213c86",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("49af74e5-74ca-4660-848b-0767bfe3a0a6",
	2064.000000,
	1680.000000,
	"89ae72f7-99df-4406-a108-2527e1213c86",
	"00000000-0000-0000-0000-000000000000",
	"b8df52f9-279a-48da-a6c5-7da1f3e90a40");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"89ae72f7-99df-4406-a108-2527e1213c86",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("89ae72f7-99df-4406-a108-2527e1213c86",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("51fb9d30-84eb-489c-80e1-e41f64ede4f9",
	"882e078f-a777-4a90-95a0-b1b846589fb5",
	"89ae72f7-99df-4406-a108-2527e1213c86");
INSERT INTO GD_GE
	VALUES ("01129a67-179b-4e71-bfb5-866971515904",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"cdd92f80-f72e-4a71-84d1-e6f8bad9d6e9",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Transforms Within Expressions::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("01129a67-179b-4e71-bfb5-866971515904",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("58c6c091-20d0-4073-b418-2201ea0c2438",
	"01129a67-179b-4e71-bfb5-866971515904",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"58c6c091-20d0-4073-b418-2201ea0c2438");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"58c6c091-20d0-4073-b418-2201ea0c2438",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("58c6c091-20d0-4073-b418-2201ea0c2438",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9fcfc0ef-e70e-4339-a826-98fa6aa96e6d",
	"01129a67-179b-4e71-bfb5-866971515904",
	3,
	196.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"9fcfc0ef-e70e-4339-a826-98fa6aa96e6d");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	1924.000000,
	"9fcfc0ef-e70e-4339-a826-98fa6aa96e6d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9fcfc0ef-e70e-4339-a826-98fa6aa96e6d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b5de114f-8575-4311-bac9-55e7d0a27212",
	"01129a67-179b-4e71-bfb5-866971515904",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b5de114f-8575-4311-bac9-55e7d0a27212");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b5de114f-8575-4311-bac9-55e7d0a27212",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b5de114f-8575-4311-bac9-55e7d0a27212",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("023a2c0e-ad10-4a59-91ee-eda887fde5d0",
	"01129a67-179b-4e71-bfb5-866971515904",
	"00000000-0000-0000-0000-000000000000",
	"1502acbe-3426-4877-ad2f-77f992bd0bb6",
	"ae337c8c-f23e-4c97-9eae-f2982f36ebe7");
INSERT INTO DIM_WAY
	VALUES ("1502acbe-3426-4877-ad2f-77f992bd0bb6",
	2064.000000,
	1920.000000,
	"01129a67-179b-4e71-bfb5-866971515904",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ae337c8c-f23e-4c97-9eae-f2982f36ebe7",
	2064.000000,
	1968.000000,
	"01129a67-179b-4e71-bfb5-866971515904",
	"00000000-0000-0000-0000-000000000000",
	"1502acbe-3426-4877-ad2f-77f992bd0bb6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"01129a67-179b-4e71-bfb5-866971515904",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("01129a67-179b-4e71-bfb5-866971515904",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a669d7c1-da8c-400b-9ab5-df1cbb4d9a5f",
	"a115d208-3533-4879-b7b4-fa485f9560c1",
	"01129a67-179b-4e71-bfb5-866971515904");
INSERT INTO GD_GE
	VALUES ("fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"bc95e62a-f823-47cc-a448-7607b3db377d",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Unary Ops::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4104b5c2-00b9-4c81-9583-b8402a6f33b7",
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4104b5c2-00b9-4c81-9583-b8402a6f33b7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4104b5c2-00b9-4c81-9583-b8402a6f33b7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4104b5c2-00b9-4c81-9583-b8402a6f33b7",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a3fa5567-9a76-4496-b8c7-ba376e471717",
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	3,
	197.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"a3fa5567-9a76-4496-b8c7-ba376e471717");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	2069.000000,
	"a3fa5567-9a76-4496-b8c7-ba376e471717",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3fa5567-9a76-4496-b8c7-ba376e471717",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4d41b948-c92a-4576-a9c2-402d5a720879",
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4d41b948-c92a-4576-a9c2-402d5a720879");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4d41b948-c92a-4576-a9c2-402d5a720879",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4d41b948-c92a-4576-a9c2-402d5a720879",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("153bb160-84b7-4db7-a87e-9887e71bb9ee",
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"00000000-0000-0000-0000-000000000000",
	"6d143387-8a80-4d49-9b2d-5b9fb9cdb5e3",
	"9b3d73b9-3371-496e-a746-e8435c4853da");
INSERT INTO DIM_WAY
	VALUES ("6d143387-8a80-4d49-9b2d-5b9fb9cdb5e3",
	2064.000000,
	2064.000000,
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("9b3d73b9-3371-496e-a746-e8435c4853da",
	2064.000000,
	2112.000000,
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"00000000-0000-0000-0000-000000000000",
	"6d143387-8a80-4d49-9b2d-5b9fb9cdb5e3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fec155a9-cf59-43bf-8aa4-d97765467ac0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fec155a9-cf59-43bf-8aa4-d97765467ac0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("327faf52-0437-4827-8f3a-c8c86daf30b7",
	"08233282-d039-4829-95be-395707124d85",
	"fec155a9-cf59-43bf-8aa4-d97765467ac0");
INSERT INTO GD_GE
	VALUES ("e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"0f85f40a-4229-4edf-bbdf-9cb200461448",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::If Expressions::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4e07e57b-28fd-4f79-bfca-6bf3f2d7c444",
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4e07e57b-28fd-4f79-bfca-6bf3f2d7c444");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4e07e57b-28fd-4f79-bfca-6bf3f2d7c444",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4e07e57b-28fd-4f79-bfca-6bf3f2d7c444",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8afbcb44-4b30-4cc5-939b-fe3910fd54e6",
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	3,
	196.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"8afbcb44-4b30-4cc5-939b-fe3910fd54e6");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	2212.000000,
	"8afbcb44-4b30-4cc5-939b-fe3910fd54e6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8afbcb44-4b30-4cc5-939b-fe3910fd54e6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f0a51554-7812-4258-9876-56024798ccc4",
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f0a51554-7812-4258-9876-56024798ccc4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f0a51554-7812-4258-9876-56024798ccc4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f0a51554-7812-4258-9876-56024798ccc4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("7112fa2b-9247-4920-8fbf-5d8de277a3a3",
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"00000000-0000-0000-0000-000000000000",
	"3c2f0cc0-50ba-4cec-82f1-09f8d0d5625c",
	"d331d112-b0af-4236-983d-0dcfd3172b2b");
INSERT INTO DIM_WAY
	VALUES ("3c2f0cc0-50ba-4cec-82f1-09f8d0d5625c",
	2064.000000,
	2208.000000,
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("d331d112-b0af-4236-983d-0dcfd3172b2b",
	2064.000000,
	2256.000000,
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"00000000-0000-0000-0000-000000000000",
	"3c2f0cc0-50ba-4cec-82f1-09f8d0d5625c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e8e47576-7ccf-47d0-ab76-b04c5256cc16",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("08af5400-24a3-4d62-ac85-2f5b3f72f642",
	"f8637ce7-c61f-4db2-912c-da83f5172351",
	"e8e47576-7ccf-47d0-ab76-b04c5256cc16");
INSERT INTO GD_GE
	VALUES ("1534d3c2-5794-44f9-920e-19a0d97d6615",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"1cfc1b60-a33c-4740-97e5-ecaa0b409573",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("1534d3c2-5794-44f9-920e-19a0d97d6615",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0d6df8d2-a6ea-493b-a680-d51d90769438",
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0d6df8d2-a6ea-493b-a680-d51d90769438");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0d6df8d2-a6ea-493b-a680-d51d90769438",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0d6df8d2-a6ea-493b-a680-d51d90769438",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("943e2993-45b5-4a0b-8686-fd6fb25f89ad",
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	3,
	149.000000,
	-38.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"943e2993-45b5-4a0b-8686-fd6fb25f89ad");
INSERT INTO DIM_GE
	VALUES (2317.000000,
	2208.000000,
	"943e2993-45b5-4a0b-8686-fd6fb25f89ad",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("943e2993-45b5-4a0b-8686-fd6fb25f89ad",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6389a6f2-2364-4e6a-836c-8ce7ac326a0f",
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"6389a6f2-2364-4e6a-836c-8ce7ac326a0f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6389a6f2-2364-4e6a-836c-8ce7ac326a0f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6389a6f2-2364-4e6a-836c-8ce7ac326a0f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("4b4805d6-94dd-4cf9-adc5-02a8e2cd7ae5",
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	"00000000-0000-0000-0000-000000000000",
	"b3b05108-2fe3-4f0c-a4d7-3cbcfe8c442d",
	"941b74b1-81ba-433a-a469-687a56c734b7");
INSERT INTO DIM_WAY
	VALUES ("b3b05108-2fe3-4f0c-a4d7-3cbcfe8c442d",
	2160.000000,
	2288.000000,
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("941b74b1-81ba-433a-a469-687a56c734b7",
	2496.000000,
	2240.000000,
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	"00000000-0000-0000-0000-000000000000",
	"b3b05108-2fe3-4f0c-a4d7-3cbcfe8c442d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1534d3c2-5794-44f9-920e-19a0d97d6615",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1534d3c2-5794-44f9-920e-19a0d97d6615",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("8097c66a-ae11-4f8a-8482-824ccf0f36e0",
	"70a18bd9-d5cd-4f79-b99b-aa5346da28d1",
	"1534d3c2-5794-44f9-920e-19a0d97d6615");
INSERT INTO GD_GE
	VALUES ("a5fc8291-2612-4b93-8fde-c4df14c50333",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"e6a07190-227c-4c10-b2a9-b30219c80251",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Expressions Within Parameters::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("a5fc8291-2612-4b93-8fde-c4df14c50333",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("489d71ed-51d4-4f80-b082-cb5a24c8e9bd",
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"489d71ed-51d4-4f80-b082-cb5a24c8e9bd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"489d71ed-51d4-4f80-b082-cb5a24c8e9bd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("489d71ed-51d4-4f80-b082-cb5a24c8e9bd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1f280036-929b-4044-b49e-9d35161b5ffa",
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	3,
	130.000000,
	35.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"1f280036-929b-4044-b49e-9d35161b5ffa");
INSERT INTO DIM_GE
	VALUES (2336.000000,
	2378.000000,
	"1f280036-929b-4044-b49e-9d35161b5ffa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1f280036-929b-4044-b49e-9d35161b5ffa",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("59ec9003-211c-460e-b080-571103bcb2c4",
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"59ec9003-211c-460e-b080-571103bcb2c4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"59ec9003-211c-460e-b080-571103bcb2c4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("59ec9003-211c-460e-b080-571103bcb2c4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("0ce5a010-91cd-4124-811a-2ae117dfd2c3",
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	"00000000-0000-0000-0000-000000000000",
	"8a883d42-a014-4c7f-aac4-e2f986331275",
	"072e40e0-a69c-4f52-8c4a-eef3f0d9db24");
INSERT INTO DIM_WAY
	VALUES ("8a883d42-a014-4c7f-aac4-e2f986331275",
	2160.000000,
	2320.000000,
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("072e40e0-a69c-4f52-8c4a-eef3f0d9db24",
	2496.000000,
	2368.000000,
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	"00000000-0000-0000-0000-000000000000",
	"8a883d42-a014-4c7f-aac4-e2f986331275");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a5fc8291-2612-4b93-8fde-c4df14c50333",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a5fc8291-2612-4b93-8fde-c4df14c50333",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("f927a2fb-029f-42bc-834c-6ec487a776f6",
	"c4166a7a-2b36-4660-90f9-b7222fb397fb",
	"a5fc8291-2612-4b93-8fde-c4df14c50333");
INSERT INTO GD_GE
	VALUES ("d79d6540-5664-4298-a4a0-534931a6c2c4",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"a3b2ea5c-536a-4343-83b7-9459dde78ae9",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("d79d6540-5664-4298-a4a0-534931a6c2c4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f7cf5db4-d3a8-4f14-a80f-4231df75f94f",
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f7cf5db4-d3a8-4f14-a80f-4231df75f94f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f7cf5db4-d3a8-4f14-a80f-4231df75f94f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f7cf5db4-d3a8-4f14-a80f-4231df75f94f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f7218be9-eea5-4a0f-9c7a-609dd2cbe9b1",
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	3,
	-28.000000,
	6.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"f7218be9-eea5-4a0f-9c7a-609dd2cbe9b1");
INSERT INTO DIM_GE
	VALUES (2379.000000,
	2299.000000,
	"f7218be9-eea5-4a0f-9c7a-609dd2cbe9b1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f7218be9-eea5-4a0f-9c7a-609dd2cbe9b1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2967be92-71f1-4af4-b166-83c50790fab6",
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"2967be92-71f1-4af4-b166-83c50790fab6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2967be92-71f1-4af4-b166-83c50790fab6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2967be92-71f1-4af4-b166-83c50790fab6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("86950dab-cb41-4c6c-923c-b889f31c54b4",
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	"00000000-0000-0000-0000-000000000000",
	"fbde2658-7db7-42d2-83de-164f538e83ad",
	"0f862579-0bda-4b33-a06c-b377008a0e2c");
INSERT INTO DIM_WAY
	VALUES ("fbde2658-7db7-42d2-83de-164f538e83ad",
	2528.000000,
	2272.000000,
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("0f862579-0bda-4b33-a06c-b377008a0e2c",
	2528.000000,
	2352.000000,
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	"00000000-0000-0000-0000-000000000000",
	"fbde2658-7db7-42d2-83de-164f538e83ad");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d79d6540-5664-4298-a4a0-534931a6c2c4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d79d6540-5664-4298-a4a0-534931a6c2c4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("eba3201f-c900-43ae-ad4c-6ff3666e5406",
	"bba13ba3-af65-49ed-b9a7-63a241686bec",
	"d79d6540-5664-4298-a4a0-534931a6c2c4");
INSERT INTO GD_GE
	VALUES ("e7dcd114-7540-4333-8e70-c417f384b37c",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"1cf3a30b-654e-479b-8f87-ca867d66583f",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("e7dcd114-7540-4333-8e70-c417f384b37c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("bd411aeb-03ac-497e-9b85-a61e516bfa86",
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"bd411aeb-03ac-497e-9b85-a61e516bfa86");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"bd411aeb-03ac-497e-9b85-a61e516bfa86",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bd411aeb-03ac-497e-9b85-a61e516bfa86",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("64dcee8d-20be-419d-8bbf-5bbd331e2de4",
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	3,
	165.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"64dcee8d-20be-419d-8bbf-5bbd331e2de4");
INSERT INTO DIM_GE
	VALUES (2646.000000,
	2305.000000,
	"64dcee8d-20be-419d-8bbf-5bbd331e2de4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("64dcee8d-20be-419d-8bbf-5bbd331e2de4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("89d301ef-a776-4916-b02a-0249b6de4ef9",
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"89d301ef-a776-4916-b02a-0249b6de4ef9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"89d301ef-a776-4916-b02a-0249b6de4ef9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("89d301ef-a776-4916-b02a-0249b6de4ef9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("fd05a8c8-0263-453e-af73-0a4d0458d740",
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	"00000000-0000-0000-0000-000000000000",
	"bf33887a-028a-4571-a845-c3332cf0d336",
	"66304259-d350-4f85-8b9b-7dec73f4d624");
INSERT INTO DIM_WAY
	VALUES ("bf33887a-028a-4571-a845-c3332cf0d336",
	2640.000000,
	2352.000000,
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("66304259-d350-4f85-8b9b-7dec73f4d624",
	2640.000000,
	2272.000000,
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	"00000000-0000-0000-0000-000000000000",
	"bf33887a-028a-4571-a845-c3332cf0d336");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e7dcd114-7540-4333-8e70-c417f384b37c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e7dcd114-7540-4333-8e70-c417f384b37c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("8bbb846b-bece-4f86-8d8a-d36a036d1b89",
	"507b559e-3282-4209-a70d-22664707b794",
	"e7dcd114-7540-4333-8e70-c417f384b37c");
INSERT INTO GD_GE
	VALUES ("7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"eceda8d8-6c04-47aa-8875-5ed41a5fa1a5",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("78152c65-cdd6-4033-be5a-10aa1c4ae793",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"78152c65-cdd6-4033-be5a-10aa1c4ae793");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"78152c65-cdd6-4033-be5a-10aa1c4ae793",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("78152c65-cdd6-4033-be5a-10aa1c4ae793",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4e27c16c-f30f-4a26-a21f-a0deef2c7e4c",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	3,
	1.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"4e27c16c-f30f-4a26-a21f-a0deef2c7e4c");
INSERT INTO DIM_GE
	VALUES (2503.000000,
	2117.000000,
	"4e27c16c-f30f-4a26-a21f-a0deef2c7e4c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4e27c16c-f30f-4a26-a21f-a0deef2c7e4c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1e98be0a-ceb0-4f46-998c-07bb7eae5f87",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1e98be0a-ceb0-4f46-998c-07bb7eae5f87");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1e98be0a-ceb0-4f46-998c-07bb7eae5f87",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1e98be0a-ceb0-4f46-998c-07bb7eae5f87",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("948c2d4a-5890-4939-bd9d-f3161104f2b3",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000",
	"abf172b7-8e1b-443d-bca0-90d04b72b329",
	"60600be6-36dc-48aa-a656-b5e5afa5ca04");
INSERT INTO GD_LS
	VALUES ("971d7d62-d91d-4830-9c7f-1adf1f6cdef2",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"948c2d4a-5890-4939-bd9d-f3161104f2b3",
	"60600be6-36dc-48aa-a656-b5e5afa5ca04",
	"28623815-68f9-4738-a6dd-0f284098e358");
INSERT INTO GD_LS
	VALUES ("cddae335-d261-4644-b268-c44a87453869",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"971d7d62-d91d-4830-9c7f-1adf1f6cdef2",
	"28623815-68f9-4738-a6dd-0f284098e358",
	"dfc86411-999b-402b-88bd-cb76e531e722");
INSERT INTO DIM_WAY
	VALUES ("abf172b7-8e1b-443d-bca0-90d04b72b329",
	2512.000000,
	2176.000000,
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("60600be6-36dc-48aa-a656-b5e5afa5ca04",
	2512.000000,
	2144.000000,
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000",
	"abf172b7-8e1b-443d-bca0-90d04b72b329");
INSERT INTO DIM_WAY
	VALUES ("28623815-68f9-4738-a6dd-0f284098e358",
	2640.000000,
	2144.000000,
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000",
	"60600be6-36dc-48aa-a656-b5e5afa5ca04");
INSERT INTO DIM_WAY
	VALUES ("dfc86411-999b-402b-88bd-cb76e531e722",
	2640.000000,
	2176.000000,
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000",
	"28623815-68f9-4738-a6dd-0f284098e358");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7b4f96a8-ea18-462e-8e85-99f6b107761f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7b4f96a8-ea18-462e-8e85-99f6b107761f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("b08c0d24-2a98-420a-ba46-7b84b339aead",
	"1b39d85d-5679-448c-8be3-479feba1f493",
	"7b4f96a8-ea18-462e-8e85-99f6b107761f");
INSERT INTO GD_GE
	VALUES ("bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"62d7e0ae-52b5-4abc-8153-e52192ef978a",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7a1130a6-3e1c-4d49-b731-bdfc6281ae14",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7a1130a6-3e1c-4d49-b731-bdfc6281ae14");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7a1130a6-3e1c-4d49-b731-bdfc6281ae14",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7a1130a6-3e1c-4d49-b731-bdfc6281ae14",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b4a24232-42de-4bbe-898a-6b11d9c0a3d5",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	3,
	-18.000000,
	56.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"b4a24232-42de-4bbe-898a-6b11d9c0a3d5");
INSERT INTO DIM_GE
	VALUES (2511.000000,
	2488.000000,
	"b4a24232-42de-4bbe-898a-6b11d9c0a3d5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b4a24232-42de-4bbe-898a-6b11d9c0a3d5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f5947e2f-c2da-40de-8cd9-4ab465e1e4ed",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f5947e2f-c2da-40de-8cd9-4ab465e1e4ed");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f5947e2f-c2da-40de-8cd9-4ab465e1e4ed",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f5947e2f-c2da-40de-8cd9-4ab465e1e4ed",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("32f95e6c-52b8-4494-b57e-5f911d260fef",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000",
	"6827f37b-c2bc-4d35-a4df-c2c56bda213a",
	"ea2b0e73-1d5d-4eee-ad36-8a3241a3332b");
INSERT INTO GD_LS
	VALUES ("7b2f630e-6cf7-4155-b759-1d9c2f639939",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"32f95e6c-52b8-4494-b57e-5f911d260fef",
	"ea2b0e73-1d5d-4eee-ad36-8a3241a3332b",
	"b0ec5d62-7921-4a44-b399-21345758c607");
INSERT INTO GD_LS
	VALUES ("d7ced617-5823-4124-b7de-14c306381884",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"7b2f630e-6cf7-4155-b759-1d9c2f639939",
	"b0ec5d62-7921-4a44-b399-21345758c607",
	"f6f1ff3b-d5e4-45f2-af03-6694f43dc868");
INSERT INTO DIM_WAY
	VALUES ("6827f37b-c2bc-4d35-a4df-c2c56bda213a",
	2512.000000,
	2448.000000,
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ea2b0e73-1d5d-4eee-ad36-8a3241a3332b",
	2512.000000,
	2480.000000,
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000",
	"6827f37b-c2bc-4d35-a4df-c2c56bda213a");
INSERT INTO DIM_WAY
	VALUES ("b0ec5d62-7921-4a44-b399-21345758c607",
	2656.000000,
	2480.000000,
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000",
	"ea2b0e73-1d5d-4eee-ad36-8a3241a3332b");
INSERT INTO DIM_WAY
	VALUES ("f6f1ff3b-d5e4-45f2-af03-6694f43dc868",
	2656.000000,
	2448.000000,
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000",
	"b0ec5d62-7921-4a44-b399-21345758c607");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bdbd7c60-c366-47d1-9db6-0a7eedf32767",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("828d03dd-a3d2-48fc-94e5-b9d59ab5d8be",
	"64f2cc33-73c6-4271-ab15-e7f6065e2d92",
	"bdbd7c60-c366-47d1-9db6-0a7eedf32767");
INSERT INTO GD_GE
	VALUES ("d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"5ac7124e-0e4a-47f1-aaab-727db4af42a2",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Bool Event::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3258d42f-d5de-4bfa-88df-accda07a1996",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"3258d42f-d5de-4bfa-88df-accda07a1996");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"3258d42f-d5de-4bfa-88df-accda07a1996",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3258d42f-d5de-4bfa-88df-accda07a1996",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("29ba9dd0-f016-492e-8ad2-5221afc22c08",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	3,
	-19.000000,
	-7.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"29ba9dd0-f016-492e-8ad2-5221afc22c08");
INSERT INTO DIM_GE
	VALUES (2688.000000,
	2153.000000,
	"29ba9dd0-f016-492e-8ad2-5221afc22c08",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("29ba9dd0-f016-492e-8ad2-5221afc22c08",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5ee68275-2bb3-4cb2-bb47-b8250b13e2bd",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5ee68275-2bb3-4cb2-bb47-b8250b13e2bd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5ee68275-2bb3-4cb2-bb47-b8250b13e2bd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5ee68275-2bb3-4cb2-bb47-b8250b13e2bd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("449a23b0-df6c-4a9c-90c9-d0c10a69e56e",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000",
	"b529a94a-23aa-4aaf-b3c3-cce2415efa0f",
	"166019f6-f5a3-4c68-b6cf-35b719e0b2c5");
INSERT INTO GD_LS
	VALUES ("31931f7a-180d-4930-8814-618bf6bf441d",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"449a23b0-df6c-4a9c-90c9-d0c10a69e56e",
	"166019f6-f5a3-4c68-b6cf-35b719e0b2c5",
	"190fff90-4bb6-495c-b5eb-29b1343e4d3c");
INSERT INTO DIM_WAY
	VALUES ("b529a94a-23aa-4aaf-b3c3-cce2415efa0f",
	2672.000000,
	2208.000000,
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("166019f6-f5a3-4c68-b6cf-35b719e0b2c5",
	2912.000000,
	2208.000000,
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000",
	"b529a94a-23aa-4aaf-b3c3-cce2415efa0f");
INSERT INTO DIM_WAY
	VALUES ("190fff90-4bb6-495c-b5eb-29b1343e4d3c",
	2912.000000,
	2256.000000,
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000",
	"166019f6-f5a3-4c68-b6cf-35b719e0b2c5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d42dbc10-dc5a-49c7-9c09-259da7af02fe",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("03b7470e-3232-4f72-849c-5a93b5e9fb3d",
	"a5e1447a-0fd8-4a7b-9dd2-199bb7e2937f",
	"d42dbc10-dc5a-49c7-9c09-259da7af02fe");
INSERT INTO GD_GE
	VALUES ("16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"2e9a0df7-74d4-47ef-995b-062fc84b878b",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Count Acks from Int Event::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a0951fe8-29bb-4eea-8f84-3561dafb6b33",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a0951fe8-29bb-4eea-8f84-3561dafb6b33");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a0951fe8-29bb-4eea-8f84-3561dafb6b33",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a0951fe8-29bb-4eea-8f84-3561dafb6b33",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("97409588-c504-4e70-9e2a-f3a0e6b8e817",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	3,
	-8.000000,
	55.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"97409588-c504-4e70-9e2a-f3a0e6b8e817");
INSERT INTO DIM_GE
	VALUES (2699.000000,
	2423.000000,
	"97409588-c504-4e70-9e2a-f3a0e6b8e817",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("97409588-c504-4e70-9e2a-f3a0e6b8e817",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7ecf0b62-98af-4f58-8d43-2e17f8216e43",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7ecf0b62-98af-4f58-8d43-2e17f8216e43");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7ecf0b62-98af-4f58-8d43-2e17f8216e43",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7ecf0b62-98af-4f58-8d43-2e17f8216e43",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f5983651-2c40-4402-8b90-f656ff7b5a31",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000",
	"f441a8a3-4976-45e0-a979-0f25621cb1e8",
	"9b15569e-3e93-409e-ba9c-300afea45b02");
INSERT INTO GD_LS
	VALUES ("369dc43e-573b-4891-9a3a-516b9884446c",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"f5983651-2c40-4402-8b90-f656ff7b5a31",
	"9b15569e-3e93-409e-ba9c-300afea45b02",
	"bc7a5e6e-7f2d-4105-b78b-7d9ba9f88ef8");
INSERT INTO DIM_WAY
	VALUES ("f441a8a3-4976-45e0-a979-0f25621cb1e8",
	2672.000000,
	2416.000000,
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("9b15569e-3e93-409e-ba9c-300afea45b02",
	2912.000000,
	2416.000000,
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000",
	"f441a8a3-4976-45e0-a979-0f25621cb1e8");
INSERT INTO DIM_WAY
	VALUES ("bc7a5e6e-7f2d-4105-b78b-7d9ba9f88ef8",
	2912.000000,
	2368.000000,
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000",
	"9b15569e-3e93-409e-ba9c-300afea45b02");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("16e9e32b-16d9-4e90-bd0b-12a6d8737e17",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("4ad51583-c647-465e-baff-d19e94340842",
	"42e2636d-8e34-46ac-bdc7-5ad7f1f5db62",
	"16e9e32b-16d9-4e90-bd0b-12a6d8737e17");
INSERT INTO GD_GE
	VALUES ("73c193b7-41af-43ea-adfe-3680d9c2c822",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"4d05dc01-5195-41fc-906d-1815236475e2",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("560c942d-b7b9-492b-a270-b37d7cff64bb",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"560c942d-b7b9-492b-a270-b37d7cff64bb");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"560c942d-b7b9-492b-a270-b37d7cff64bb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("560c942d-b7b9-492b-a270-b37d7cff64bb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2913d8d9-c2c7-48c4-949e-8a0aef376793",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	3,
	-6.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"2913d8d9-c2c7-48c4-949e-8a0aef376793");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	1938.000000,
	"2913d8d9-c2c7-48c4-949e-8a0aef376793",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2913d8d9-c2c7-48c4-949e-8a0aef376793",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b697c573-0178-4da1-97ef-daf19d8f8461",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b697c573-0178-4da1-97ef-daf19d8f8461");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b697c573-0178-4da1-97ef-daf19d8f8461",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b697c573-0178-4da1-97ef-daf19d8f8461",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("d62f3362-0e2c-4ac7-af3c-a715821b142d",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000",
	"d2a50a5b-575b-4560-bc86-a74099e59c12",
	"22bc1e91-796c-498e-a2d6-1291bac2a1a9");
INSERT INTO GD_LS
	VALUES ("00dc94e3-f666-4622-821f-6fc8bc51ee4f",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"d62f3362-0e2c-4ac7-af3c-a715821b142d",
	"22bc1e91-796c-498e-a2d6-1291bac2a1a9",
	"ffa01fda-1e03-48e6-812b-36404385803a");
INSERT INTO GD_LS
	VALUES ("40287ef2-f05e-450e-86dc-82e4c989d567",
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00dc94e3-f666-4622-821f-6fc8bc51ee4f",
	"ffa01fda-1e03-48e6-812b-36404385803a",
	"0d8afcf5-21ff-417c-a809-ca730214cfbc");
INSERT INTO DIM_WAY
	VALUES ("d2a50a5b-575b-4560-bc86-a74099e59c12",
	2864.000000,
	2000.000000,
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("22bc1e91-796c-498e-a2d6-1291bac2a1a9",
	2864.000000,
	1968.000000,
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000",
	"d2a50a5b-575b-4560-bc86-a74099e59c12");
INSERT INTO DIM_WAY
	VALUES ("ffa01fda-1e03-48e6-812b-36404385803a",
	2960.000000,
	1968.000000,
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000",
	"22bc1e91-796c-498e-a2d6-1291bac2a1a9");
INSERT INTO DIM_WAY
	VALUES ("0d8afcf5-21ff-417c-a809-ca730214cfbc",
	2960.000000,
	2000.000000,
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000",
	"ffa01fda-1e03-48e6-812b-36404385803a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"73c193b7-41af-43ea-adfe-3680d9c2c822",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("73c193b7-41af-43ea-adfe-3680d9c2c822",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("6b1ed0e9-273a-4048-a719-d452e39ac2c4",
	"4f6e924d-03a4-450e-9c99-a9c870cf7ed1",
	"73c193b7-41af-43ea-adfe-3680d9c2c822");
INSERT INTO GD_GE
	VALUES ("f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"bbd448e6-d6c0-4e4d-9cbc-9c059843c21b",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0d55c9e1-4d49-4d18-96ba-965085db0371",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0d55c9e1-4d49-4d18-96ba-965085db0371");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0d55c9e1-4d49-4d18-96ba-965085db0371",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0d55c9e1-4d49-4d18-96ba-965085db0371",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4dba79a2-6e86-43fa-9d55-79f83f981feb",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	3,
	-10.000000,
	59.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"4dba79a2-6e86-43fa-9d55-79f83f981feb");
INSERT INTO DIM_GE
	VALUES (3191.000000,
	2139.000000,
	"4dba79a2-6e86-43fa-9d55-79f83f981feb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4dba79a2-6e86-43fa-9d55-79f83f981feb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5a7787ae-8ea8-4bfa-b906-397470dd438b",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5a7787ae-8ea8-4bfa-b906-397470dd438b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5a7787ae-8ea8-4bfa-b906-397470dd438b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5a7787ae-8ea8-4bfa-b906-397470dd438b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("587391ef-3efe-4c83-8927-fb7c51019481",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000",
	"6e23f127-822b-4a1f-8557-b3e4c6d742a4",
	"4b43a546-7e44-413f-aab5-951bdb92cafa");
INSERT INTO GD_LS
	VALUES ("3110c90b-f64e-48de-a2d5-bfa463c5ccd1",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"587391ef-3efe-4c83-8927-fb7c51019481",
	"4b43a546-7e44-413f-aab5-951bdb92cafa",
	"dd693b4c-fbb9-4664-9531-246d65742b55");
INSERT INTO GD_LS
	VALUES ("6003a7af-f3c9-4441-8467-3871a064952d",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"3110c90b-f64e-48de-a2d5-bfa463c5ccd1",
	"dd693b4c-fbb9-4664-9531-246d65742b55",
	"cfcd55a4-2b99-4a8d-b443-8174421735c6");
INSERT INTO DIM_WAY
	VALUES ("6e23f127-822b-4a1f-8557-b3e4c6d742a4",
	3216.000000,
	2096.000000,
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4b43a546-7e44-413f-aab5-951bdb92cafa",
	3216.000000,
	2128.000000,
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000",
	"6e23f127-822b-4a1f-8557-b3e4c6d742a4");
INSERT INTO DIM_WAY
	VALUES ("dd693b4c-fbb9-4664-9531-246d65742b55",
	3296.000000,
	2128.000000,
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000",
	"4b43a546-7e44-413f-aab5-951bdb92cafa");
INSERT INTO DIM_WAY
	VALUES ("cfcd55a4-2b99-4a8d-b443-8174421735c6",
	3296.000000,
	2096.000000,
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000",
	"dd693b4c-fbb9-4664-9531-246d65742b55");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f9c2e13f-1c95-48e3-b840-38d7ab6202ae",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("1543e653-929e-44f2-bd81-253d45078edb",
	"9ce3d66a-c046-4f3c-acf4-4059c4898041",
	"f9c2e13f-1c95-48e3-b840-38d7ab6202ae");
INSERT INTO GD_GE
	VALUES ("c07a3f2a-babe-4459-b297-735eba0643e2",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"245c67d1-fade-4048-8b24-5b84df561b4d",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("c07a3f2a-babe-4459-b297-735eba0643e2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("734fa2df-75ff-4c01-9db8-a07e7b04d75f",
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"734fa2df-75ff-4c01-9db8-a07e7b04d75f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"734fa2df-75ff-4c01-9db8-a07e7b04d75f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("734fa2df-75ff-4c01-9db8-a07e7b04d75f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f06fa3de-4412-47c1-a93a-87d388968b34",
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	3,
	-3.000000,
	-8.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"f06fa3de-4412-47c1-a93a-87d388968b34");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	1995.000000,
	"f06fa3de-4412-47c1-a93a-87d388968b34",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f06fa3de-4412-47c1-a93a-87d388968b34",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a0cb398e-955a-41b8-abb7-d804d57a618a",
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a0cb398e-955a-41b8-abb7-d804d57a618a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a0cb398e-955a-41b8-abb7-d804d57a618a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a0cb398e-955a-41b8-abb7-d804d57a618a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("d8bd8fe2-f837-42fa-abd5-5a3e09a050c0",
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	"00000000-0000-0000-0000-000000000000",
	"ddbbb37e-f85e-4c87-ba4f-995dd4c145f0",
	"7ca56122-cc19-442f-a238-8ec60fac6f6e");
INSERT INTO DIM_WAY
	VALUES ("ddbbb37e-f85e-4c87-ba4f-995dd4c145f0",
	3152.000000,
	2032.000000,
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("7ca56122-cc19-442f-a238-8ec60fac6f6e",
	2992.000000,
	2032.000000,
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	"00000000-0000-0000-0000-000000000000",
	"ddbbb37e-f85e-4c87-ba4f-995dd4c145f0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c07a3f2a-babe-4459-b297-735eba0643e2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c07a3f2a-babe-4459-b297-735eba0643e2",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("ffe7b234-33db-40c1-b45e-dabe8fd993a1",
	"20931168-3597-416f-a0f1-88dad45f1656",
	"c07a3f2a-babe-4459-b297-735eba0643e2");
INSERT INTO GD_GE
	VALUES ("c1dc1dee-9c96-481c-b471-20aec57cf097",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"3bb33c9b-2b59-4798-84e3-3a30ba056fa5",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("c1dc1dee-9c96-481c-b471-20aec57cf097",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a3ec3ee2-f7c5-4cbe-b013-00b63b76537d",
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a3ec3ee2-f7c5-4cbe-b013-00b63b76537d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a3ec3ee2-f7c5-4cbe-b013-00b63b76537d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3ec3ee2-f7c5-4cbe-b013-00b63b76537d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("195771df-971e-48c0-ba48-35d6792d8a29",
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	3,
	-22.000000,
	65.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"195771df-971e-48c0-ba48-35d6792d8a29");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	2097.000000,
	"195771df-971e-48c0-ba48-35d6792d8a29",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("195771df-971e-48c0-ba48-35d6792d8a29",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c79b672e-419d-4823-b5c4-76a0b8ec2dc2",
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c79b672e-419d-4823-b5c4-76a0b8ec2dc2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c79b672e-419d-4823-b5c4-76a0b8ec2dc2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c79b672e-419d-4823-b5c4-76a0b8ec2dc2",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("1d7914b2-3e39-4b27-8b11-62696850e2b5",
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	"00000000-0000-0000-0000-000000000000",
	"d5a1bfb3-eb07-4cd0-867d-ae98b21b9bac",
	"ab116345-7bf0-41a3-9ce0-9229e7f97672");
INSERT INTO DIM_WAY
	VALUES ("d5a1bfb3-eb07-4cd0-867d-ae98b21b9bac",
	2992.000000,
	2080.000000,
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ab116345-7bf0-41a3-9ce0-9229e7f97672",
	3152.000000,
	2080.000000,
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	"00000000-0000-0000-0000-000000000000",
	"d5a1bfb3-eb07-4cd0-867d-ae98b21b9bac");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c1dc1dee-9c96-481c-b471-20aec57cf097",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c1dc1dee-9c96-481c-b471-20aec57cf097",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("074bfa15-64ac-42a1-be41-91f42c595d39",
	"b7b13d77-9e08-4a78-adc9-3a9230a79a5e",
	"c1dc1dee-9c96-481c-b471-20aec57cf097");
INSERT INTO GD_GE
	VALUES ("7b9e1255-342e-4fed-a10d-99483ffda10c",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"267ca202-4b63-4116-8fca-363b1ec5c128",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms::TCE5: bool event');
INSERT INTO GD_CON
	VALUES ("7b9e1255-342e-4fed-a10d-99483ffda10c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("44621115-37ab-4535-aec7-7e1c218c5f9a",
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"44621115-37ab-4535-aec7-7e1c218c5f9a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"44621115-37ab-4535-aec7-7e1c218c5f9a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("44621115-37ab-4535-aec7-7e1c218c5f9a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("50f39934-4ea0-4a42-8f0e-548b44de82d1",
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	3,
	170.000000,
	33.000000);
INSERT INTO DIM_ND
	VALUES (153.000000,
	23.000000,
	"50f39934-4ea0-4a42-8f0e-548b44de82d1");
INSERT INTO DIM_GE
	VALUES (2955.000000,
	2200.000000,
	"50f39934-4ea0-4a42-8f0e-548b44de82d1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("50f39934-4ea0-4a42-8f0e-548b44de82d1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2ca753b6-f8a5-4acb-8538-e2dfe5b32435",
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"2ca753b6-f8a5-4acb-8538-e2dfe5b32435");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2ca753b6-f8a5-4acb-8538-e2dfe5b32435",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2ca753b6-f8a5-4acb-8538-e2dfe5b32435",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("fddda534-3d36-478c-808d-4adbc8e40c80",
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	"00000000-0000-0000-0000-000000000000",
	"de211f92-2dd3-4981-afb2-8e2943466ae7",
	"64d8319b-0f04-43c7-8158-fe9f4c7352fa");
INSERT INTO DIM_WAY
	VALUES ("de211f92-2dd3-4981-afb2-8e2943466ae7",
	2944.000000,
	2256.000000,
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("64d8319b-0f04-43c7-8158-fe9f4c7352fa",
	2944.000000,
	2096.000000,
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	"00000000-0000-0000-0000-000000000000",
	"de211f92-2dd3-4981-afb2-8e2943466ae7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7b9e1255-342e-4fed-a10d-99483ffda10c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7b9e1255-342e-4fed-a10d-99483ffda10c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("bf96745e-1892-47ed-bf88-9bbbf8852644",
	"9fd0bb13-de98-4441-b029-adaa88c04239",
	"7b9e1255-342e-4fed-a10d-99483ffda10c");
INSERT INTO GD_GE
	VALUES ("24776c4a-5377-49a6-a72a-b21b0308c085",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"4247b890-45ee-4127-b69d-76555f20d550",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::More Expressions within Parms::TCE6: int event');
INSERT INTO GD_CON
	VALUES ("24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9467fe39-7296-43df-bd04-f84d2fb78790",
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"9467fe39-7296-43df-bd04-f84d2fb78790");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9467fe39-7296-43df-bd04-f84d2fb78790",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9467fe39-7296-43df-bd04-f84d2fb78790",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1f21f00d-6e2a-4b89-8b20-208e9c6048a0",
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	3,
	-26.000000,
	150.000000);
INSERT INTO DIM_ND
	VALUES (115.000000,
	42.000000,
	"1f21f00d-6e2a-4b89-8b20-208e9c6048a0");
INSERT INTO DIM_GE
	VALUES (3037.000000,
	2347.000000,
	"1f21f00d-6e2a-4b89-8b20-208e9c6048a0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1f21f00d-6e2a-4b89-8b20-208e9c6048a0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a222ef75-1d2b-4f5a-8400-164e63b88b4e",
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a222ef75-1d2b-4f5a-8400-164e63b88b4e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a222ef75-1d2b-4f5a-8400-164e63b88b4e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a222ef75-1d2b-4f5a-8400-164e63b88b4e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("54729981-7ab4-4813-a56e-f3c715279606",
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000",
	"1a4d07e9-36d9-4e26-b017-bd7b6b7a0f9f",
	"08a45429-ecf7-4b30-95de-a6e3409b754b");
INSERT INTO GD_LS
	VALUES ("7f431b1b-c46d-4312-9494-a9f21d8f8373",
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"54729981-7ab4-4813-a56e-f3c715279606",
	"08a45429-ecf7-4b30-95de-a6e3409b754b",
	"545c576d-049a-46ce-b066-8f4548e3b66d");
INSERT INTO DIM_WAY
	VALUES ("1a4d07e9-36d9-4e26-b017-bd7b6b7a0f9f",
	2976.000000,
	2336.000000,
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("08a45429-ecf7-4b30-95de-a6e3409b754b",
	3184.000000,
	2336.000000,
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000",
	"1a4d07e9-36d9-4e26-b017-bd7b6b7a0f9f");
INSERT INTO DIM_WAY
	VALUES ("545c576d-049a-46ce-b066-8f4548e3b66d",
	3184.000000,
	2096.000000,
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000",
	"08a45429-ecf7-4b30-95de-a6e3409b754b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"24776c4a-5377-49a6-a72a-b21b0308c085",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("24776c4a-5377-49a6-a72a-b21b0308c085",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("50c09839-2a91-44dd-86b2-5713f84287d2",
	"7eafbb6a-f665-49a1-ad8b-e9e5078db861",
	"24776c4a-5377-49a6-a72a-b21b0308c085");
INSERT INTO GD_GE
	VALUES ("4c946774-a8d3-4879-a881-f9dc715b4b05",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"9c77772a-7998-4f34-b5fc-37647fc46c35",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Bool Event Acks::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("4c946774-a8d3-4879-a881-f9dc715b4b05",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b4841a89-4787-40db-a491-1d61883098a1",
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b4841a89-4787-40db-a491-1d61883098a1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b4841a89-4787-40db-a491-1d61883098a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b4841a89-4787-40db-a491-1d61883098a1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c0353f3e-c02c-4e18-912a-ff60f82b9147",
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	3,
	-15.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"c0353f3e-c02c-4e18-912a-ff60f82b9147");
INSERT INTO DIM_GE
	VALUES (2588.000000,
	1963.000000,
	"c0353f3e-c02c-4e18-912a-ff60f82b9147",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c0353f3e-c02c-4e18-912a-ff60f82b9147",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("cce96a03-22e6-4697-bdf3-f1967413fb91",
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"cce96a03-22e6-4697-bdf3-f1967413fb91");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"cce96a03-22e6-4697-bdf3-f1967413fb91",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("cce96a03-22e6-4697-bdf3-f1967413fb91",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("6b98ad9b-5ca8-40ce-8370-2cdd388793a1",
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	"00000000-0000-0000-0000-000000000000",
	"9596814b-490f-4d01-b00a-e644c112b920",
	"4925dce3-aec4-4f48-8c32-3fbca0a7113e");
INSERT INTO DIM_WAY
	VALUES ("9596814b-490f-4d01-b00a-e644c112b920",
	2832.000000,
	2016.000000,
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4925dce3-aec4-4f48-8c32-3fbca0a7113e",
	2544.000000,
	2016.000000,
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	"00000000-0000-0000-0000-000000000000",
	"9596814b-490f-4d01-b00a-e644c112b920");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4c946774-a8d3-4879-a881-f9dc715b4b05",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4c946774-a8d3-4879-a881-f9dc715b4b05",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("1da06e2d-ad9e-40d0-b3e3-a70ce66efe0d",
	"9f70acfe-8074-418c-bb0b-1ad887890d17",
	"4c946774-a8d3-4879-a881-f9dc715b4b05");
INSERT INTO GD_GE
	VALUES ("ed025e21-a698-4f86-b332-79bed882cecd",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"b5493815-282c-4254-baf8-6d157bc03aca",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Int Event Acks::TCE4: next test with supp data');
INSERT INTO GD_CON
	VALUES ("ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a8d4ff60-d844-4149-9618-4ec1738dbee6",
	"ed025e21-a698-4f86-b332-79bed882cecd",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a8d4ff60-d844-4149-9618-4ec1738dbee6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a8d4ff60-d844-4149-9618-4ec1738dbee6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a8d4ff60-d844-4149-9618-4ec1738dbee6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c1ddb5a8-522e-4297-b82f-d11fe15b8d57",
	"ed025e21-a698-4f86-b332-79bed882cecd",
	3,
	-198.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (175.000000,
	42.000000,
	"c1ddb5a8-522e-4297-b82f-d11fe15b8d57");
INSERT INTO DIM_GE
	VALUES (2597.000000,
	1787.000000,
	"c1ddb5a8-522e-4297-b82f-d11fe15b8d57",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c1ddb5a8-522e-4297-b82f-d11fe15b8d57",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d618f489-cc66-4bfb-9203-311c78142b7f",
	"ed025e21-a698-4f86-b332-79bed882cecd",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d618f489-cc66-4bfb-9203-311c78142b7f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d618f489-cc66-4bfb-9203-311c78142b7f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d618f489-cc66-4bfb-9203-311c78142b7f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("20a25486-9ed4-4a56-88a2-3263b86d2ac3",
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000",
	"6ddbff75-48fc-44d4-b6ce-3e0461e62659",
	"e459bd0c-ceb0-414e-afab-b6f0218c3fa6");
INSERT INTO GD_LS
	VALUES ("bb4bb124-a11b-4fda-a18f-0ebacd99a96b",
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"20a25486-9ed4-4a56-88a2-3263b86d2ac3",
	"e459bd0c-ceb0-414e-afab-b6f0218c3fa6",
	"a40d37f3-81d4-452a-b881-b38fd60dc08b");
INSERT INTO DIM_WAY
	VALUES ("6ddbff75-48fc-44d4-b6ce-3e0461e62659",
	3216.000000,
	2000.000000,
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e459bd0c-ceb0-414e-afab-b6f0218c3fa6",
	3216.000000,
	1840.000000,
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000",
	"6ddbff75-48fc-44d4-b6ce-3e0461e62659");
INSERT INTO DIM_WAY
	VALUES ("a40d37f3-81d4-452a-b881-b38fd60dc08b",
	2544.000000,
	1840.000000,
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000",
	"e459bd0c-ceb0-414e-afab-b6f0218c3fa6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ed025e21-a698-4f86-b332-79bed882cecd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ed025e21-a698-4f86-b332-79bed882cecd",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("62bd7ec6-325d-42da-a3f9-d01df59f0dd9",
	"1a58151c-5585-4bcd-9ece-ab7b419f9404",
	"ed025e21-a698-4f86-b332-79bed882cecd");
INSERT INTO GD_GE
	VALUES ("547d4460-d903-4b40-999e-c6940463a64f",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"e9fcccca-a1a2-4c1e-9307-16233685b1ee",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref_set<Object>::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("547d4460-d903-4b40-999e-c6940463a64f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("142e69fd-818a-4773-a11e-8fa24cae0e5d",
	"547d4460-d903-4b40-999e-c6940463a64f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"142e69fd-818a-4773-a11e-8fa24cae0e5d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"142e69fd-818a-4773-a11e-8fa24cae0e5d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("142e69fd-818a-4773-a11e-8fa24cae0e5d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("69ce5b52-499b-4ea7-89db-a2dde1cd4a65",
	"547d4460-d903-4b40-999e-c6940463a64f",
	3,
	139.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"69ce5b52-499b-4ea7-89db-a2dde1cd4a65");
INSERT INTO DIM_GE
	VALUES (2092.000000,
	1499.000000,
	"69ce5b52-499b-4ea7-89db-a2dde1cd4a65",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("69ce5b52-499b-4ea7-89db-a2dde1cd4a65",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c3fa7c24-83cd-4472-9e08-d23b85ed5358",
	"547d4460-d903-4b40-999e-c6940463a64f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c3fa7c24-83cd-4472-9e08-d23b85ed5358");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c3fa7c24-83cd-4472-9e08-d23b85ed5358",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c3fa7c24-83cd-4472-9e08-d23b85ed5358",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("eaf21981-f2cc-4ea6-a7a7-038555d0ccfd",
	"547d4460-d903-4b40-999e-c6940463a64f",
	"00000000-0000-0000-0000-000000000000",
	"f0c8dbc4-cdff-4aed-849f-6537a4bb8b1f",
	"e124c21f-e11e-4de9-b01b-ed5d38178536");
INSERT INTO DIM_WAY
	VALUES ("f0c8dbc4-cdff-4aed-849f-6537a4bb8b1f",
	2064.000000,
	1488.000000,
	"547d4460-d903-4b40-999e-c6940463a64f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e124c21f-e11e-4de9-b01b-ed5d38178536",
	2064.000000,
	1536.000000,
	"547d4460-d903-4b40-999e-c6940463a64f",
	"00000000-0000-0000-0000-000000000000",
	"f0c8dbc4-cdff-4aed-849f-6537a4bb8b1f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"547d4460-d903-4b40-999e-c6940463a64f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("547d4460-d903-4b40-999e-c6940463a64f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("c05a56ff-89e4-48de-8ff8-fe7d310f8cc7",
	"46fd4d49-ddd6-44c4-a17f-abcfd9a268cf",
	"547d4460-d903-4b40-999e-c6940463a64f");
INSERT INTO GD_GE
	VALUES ("8b1599ef-2d53-419b-846b-0f128f171a97",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"e3e787ee-126c-4e10-93bb-1719df71efe1",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Compound Expressions Using inst_ref<Object>::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("8b1599ef-2d53-419b-846b-0f128f171a97",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ef482573-86fe-496d-8fff-402737a64826",
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ef482573-86fe-496d-8fff-402737a64826");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ef482573-86fe-496d-8fff-402737a64826",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ef482573-86fe-496d-8fff-402737a64826",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("524c32aa-d258-4202-9c28-7d134370358a",
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	3,
	138.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"524c32aa-d258-4202-9c28-7d134370358a");
INSERT INTO DIM_GE
	VALUES (2091.000000,
	1358.000000,
	"524c32aa-d258-4202-9c28-7d134370358a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("524c32aa-d258-4202-9c28-7d134370358a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("799595c2-edb8-44c5-93d5-2db5f9de3df6",
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"799595c2-edb8-44c5-93d5-2db5f9de3df6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"799595c2-edb8-44c5-93d5-2db5f9de3df6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("799595c2-edb8-44c5-93d5-2db5f9de3df6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2aaba01e-856a-49a7-97a8-da1795d31f1f",
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	"00000000-0000-0000-0000-000000000000",
	"4cd0fd76-269b-4673-9a56-a5091d8c2fb0",
	"40ccad35-c315-44a3-8b5c-e6cd54587210");
INSERT INTO DIM_WAY
	VALUES ("4cd0fd76-269b-4673-9a56-a5091d8c2fb0",
	2064.000000,
	1344.000000,
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("40ccad35-c315-44a3-8b5c-e6cd54587210",
	2064.000000,
	1392.000000,
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	"00000000-0000-0000-0000-000000000000",
	"4cd0fd76-269b-4673-9a56-a5091d8c2fb0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8b1599ef-2d53-419b-846b-0f128f171a97",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8b1599ef-2d53-419b-846b-0f128f171a97",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("9b92fdb8-38a8-4223-83a5-de3e9047895f",
	"4383af4a-edff-4f91-89fc-afb4aa7660c1",
	"8b1599ef-2d53-419b-846b-0f128f171a97");
INSERT INTO GD_GE
	VALUES ("0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"0396e1c6-9db2-4278-bed3-0127c3445fd2",
	"7a543dee-de44-44b0-9704-b8e953cf8efa",
	42,
	0,
	'ex2::ex2::ex2::Test Compound Expressions::Instance State Machine::Order of Operations::TCE2: next test');
INSERT INTO GD_CON
	VALUES ("0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1d562986-7014-4c76-ba60-4ff70dc3ed60",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1d562986-7014-4c76-ba60-4ff70dc3ed60");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1d562986-7014-4c76-ba60-4ff70dc3ed60",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1d562986-7014-4c76-ba60-4ff70dc3ed60",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a71834bd-965c-4859-af65-640a18c6b45c",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	3,
	53.000000,
	540.000000);
INSERT INTO DIM_ND
	VALUES (105.000000,
	23.000000,
	"a71834bd-965c-4859-af65-640a18c6b45c");
INSERT INTO DIM_GE
	VALUES (1878.000000,
	2339.000000,
	"a71834bd-965c-4859-af65-640a18c6b45c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a71834bd-965c-4859-af65-640a18c6b45c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ca34fdcb-a743-4e25-8f26-48bf7f39f767",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ca34fdcb-a743-4e25-8f26-48bf7f39f767");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ca34fdcb-a743-4e25-8f26-48bf7f39f767",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ca34fdcb-a743-4e25-8f26-48bf7f39f767",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("d4c28035-0e2b-48b1-806b-b1b0845ebcea",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000",
	"04d906fb-ae33-4ae4-a2da-b0819185c33b",
	"90d2ec04-2bfb-4ba4-88f4-7685a0e91745");
INSERT INTO GD_LS
	VALUES ("bd3944e6-1da3-493d-b979-3b4072d3cf12",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"d4c28035-0e2b-48b1-806b-b1b0845ebcea",
	"90d2ec04-2bfb-4ba4-88f4-7685a0e91745",
	"cf209c6a-2b38-43ee-b871-081495b9231e");
INSERT INTO GD_LS
	VALUES ("1e54e59f-7f08-46b2-b359-98df926af368",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"bd3944e6-1da3-493d-b979-3b4072d3cf12",
	"cf209c6a-2b38-43ee-b871-081495b9231e",
	"b23f347c-eea5-4b7f-be1f-72ef8b830042");
INSERT INTO DIM_WAY
	VALUES ("04d906fb-ae33-4ae4-a2da-b0819185c33b",
	1872.000000,
	2320.000000,
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("90d2ec04-2bfb-4ba4-88f4-7685a0e91745",
	1936.000000,
	2320.000000,
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000",
	"04d906fb-ae33-4ae4-a2da-b0819185c33b");
INSERT INTO DIM_WAY
	VALUES ("cf209c6a-2b38-43ee-b871-081495b9231e",
	1936.000000,
	1296.000000,
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000",
	"90d2ec04-2bfb-4ba4-88f4-7685a0e91745");
INSERT INTO DIM_WAY
	VALUES ("b23f347c-eea5-4b7f-be1f-72ef8b830042",
	1984.000000,
	1296.000000,
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000",
	"cf209c6a-2b38-43ee-b871-081495b9231e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0cde5a36-f58b-4ca9-ab17-86163ca2a956",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("040f58f1-3159-4fb9-98ad-51d4a7b6fd02",
	"665ac919-9bee-4ded-be86-047e9b0ff852",
	"0cde5a36-f58b-4ca9-ab17-86163ca2a956");
INSERT INTO DIM_DIA
	VALUES ("0396e1c6-9db2-4278-bed3-0127c3445fd2",
	'',
	0.768700,
	1164.000000,
	1602.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_OBJ_PROXY
	VALUES ("33bdc4f6-8797-4497-a19f-1814205c10c9",
	'Test Compound Expressions',
	2,
	'TCE',
	'',
	"00000000-0000-0000-0000-000000000000",
	'../Test Compound Expressions.xtuml');
