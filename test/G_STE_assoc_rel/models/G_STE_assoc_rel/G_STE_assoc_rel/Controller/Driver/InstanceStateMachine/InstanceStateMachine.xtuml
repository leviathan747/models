-- BP 7.1 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.6

INSERT INTO SM_ISM
	VALUES ("7f9ee828-eebd-4fc6-8369-104189a48062",
	"292234d6-8592-4a07-88b7-c9b92bb97f22");
INSERT INTO SM_SM
	VALUES ("7f9ee828-eebd-4fc6-8369-104189a48062",
	'',
	4);
INSERT INTO SM_MOORE
	VALUES ("7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_LEVT
	VALUES ("2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	1,
	'',
	0,
	'',
	'DRV1',
	'');
INSERT INTO SM_STATE
	VALUES ("fd0ae964-1223-4902-b13a-f12b6a09492d",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-One-One',
	1,
	0);
INSERT INTO SM_SEME
	VALUES ("fd0ae964-1223-4902-b13a-f12b6a09492d",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("8228e700-5dfa-4cdc-93cd-314abe33d47a",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-One-Many',
	2,
	0);
INSERT INTO SM_SEME
	VALUES ("8228e700-5dfa-4cdc-93cd-314abe33d47a",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("7909d6ba-29a3-43f9-9379-e42c09893b9e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-Many-One',
	3,
	0);
INSERT INTO SM_SEME
	VALUES ("7909d6ba-29a3-43f9-9379-e42c09893b9e",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("6999e564-fc1d-4e83-be14-3248ccf9cea3",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-Many-Many',
	4,
	0);
INSERT INTO SM_SEME
	VALUES ("6999e564-fc1d-4e83-be14-3248ccf9cea3",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("4a848a68-d75d-4b2f-a5ba-f1accd30979c",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'Many-Many-Many',
	8,
	0);
INSERT INTO SM_SEME
	VALUES ("4a848a68-d75d-4b2f-a5ba-f1accd30979c",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("60d7e4ce-8603-4964-8bb0-8011693bba53",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'Many-Many-One',
	7,
	0);
INSERT INTO SM_SEME
	VALUES ("60d7e4ce-8603-4964-8bb0-8011693bba53",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("37347ce1-cb36-486c-aba6-d7666ff036b5",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-One-One-Reflexive',
	9,
	0);
INSERT INTO SM_SEME
	VALUES ("37347ce1-cb36-486c-aba6-d7666ff036b5",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("6ad85b9d-647d-4437-b3ef-7b101db43524",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-One-Many-Reflexive',
	10,
	0);
INSERT INTO SM_SEME
	VALUES ("6ad85b9d-647d-4437-b3ef-7b101db43524",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("5f379213-6a58-408a-a6dd-b2192311adbc",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-Many-One-Reflexive',
	11,
	0);
INSERT INTO SM_SEME
	VALUES ("5f379213-6a58-408a-a6dd-b2192311adbc",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("39887177-6083-46bd-84c3-666176c50953",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'One-Many-Many-Reflexive',
	12,
	0);
INSERT INTO SM_SEME
	VALUES ("39887177-6083-46bd-84c3-666176c50953",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("2e3fd513-1482-4f74-908b-7c8a1924dab3",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'Many-Many-Many-Reflexive',
	13,
	0);
INSERT INTO SM_SEME
	VALUES ("2e3fd513-1482-4f74-908b-7c8a1924dab3",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("ef458cb4-e343-4439-ae99-27db09dd0117",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'Many-Many-One-Reflexive',
	14,
	0);
INSERT INTO SM_SEME
	VALUES ("ef458cb4-e343-4439-ae99-27db09dd0117",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("4d2e66d5-5d99-4887-bb52-a2f2592edb9f",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'Cleanup',
	15,
	0);
INSERT INTO SM_EIGN
	VALUES ("4d2e66d5-5d99-4887-bb52-a2f2592edb9f",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4d2e66d5-5d99-4887-bb52-a2f2592edb9f",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("14b92a49-f330-4506-ae0d-3ec12d7827c1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"fd0ae964-1223-4902-b13a-f12b6a09492d",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("14b92a49-f330-4506-ae0d-3ec12d7827c1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"8228e700-5dfa-4cdc-93cd-314abe33d47a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7dc20475-5c88-4a9c-b3ca-998507e1741c",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"8228e700-5dfa-4cdc-93cd-314abe33d47a",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7dc20475-5c88-4a9c-b3ca-998507e1741c",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"7909d6ba-29a3-43f9-9379-e42c09893b9e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("6b4fec86-0b77-443f-b28f-0d9c46b165fc",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"7909d6ba-29a3-43f9-9379-e42c09893b9e",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("6b4fec86-0b77-443f-b28f-0d9c46b165fc",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6999e564-fc1d-4e83-be14-3248ccf9cea3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("a075c66c-6993-4c5a-b6fb-ae2ab427535b",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"60d7e4ce-8603-4964-8bb0-8011693bba53",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("a075c66c-6993-4c5a-b6fb-ae2ab427535b",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4a848a68-d75d-4b2f-a5ba-f1accd30979c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CRTXN
	VALUES ("262649b0-de0f-4689-ab2c-d65b009348b2",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000200001");
INSERT INTO SM_TXN
	VALUES ("262649b0-de0f-4689-ab2c-d65b009348b2",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"fd0ae964-1223-4902-b13a-f12b6a09492d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("18e2d166-bfdb-4a8e-a34a-3bd07c0e6457",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6999e564-fc1d-4e83-be14-3248ccf9cea3",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("18e2d166-bfdb-4a8e-a34a-3bd07c0e6457",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"60d7e4ce-8603-4964-8bb0-8011693bba53",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("2f133236-d6b7-4564-83c0-6aaed6710910",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"39887177-6083-46bd-84c3-666176c50953",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("2f133236-d6b7-4564-83c0-6aaed6710910",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"ef458cb4-e343-4439-ae99-27db09dd0117",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("55c61fe2-7d63-4f33-8bef-6cc036847a30",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"ef458cb4-e343-4439-ae99-27db09dd0117",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("55c61fe2-7d63-4f33-8bef-6cc036847a30",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"2e3fd513-1482-4f74-908b-7c8a1924dab3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("4dde17bf-fbf8-4af2-b2b0-9a9227aa3772",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"5f379213-6a58-408a-a6dd-b2192311adbc",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("4dde17bf-fbf8-4af2-b2b0-9a9227aa3772",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"39887177-6083-46bd-84c3-666176c50953",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("d0b86985-1129-451b-82d0-0d9a52aeb2b1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6ad85b9d-647d-4437-b3ef-7b101db43524",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("d0b86985-1129-451b-82d0-0d9a52aeb2b1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"5f379213-6a58-408a-a6dd-b2192311adbc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7cbea71a-63cd-40f2-a6d7-ef194bd7f4da",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"37347ce1-cb36-486c-aba6-d7666ff036b5",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7cbea71a-63cd-40f2-a6d7-ef194bd7f4da",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6ad85b9d-647d-4437-b3ef-7b101db43524",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("aa776acc-8c1d-46a1-ab5e-26b12bf2e7b6",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4a848a68-d75d-4b2f-a5ba-f1accd30979c",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("aa776acc-8c1d-46a1-ab5e-26b12bf2e7b6",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"37347ce1-cb36-486c-aba6-d7666ff036b5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("a2bb6fdd-d766-4ee1-bf65-5d30d0a868df",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"2e3fd513-1482-4f74-908b-7c8a1924dab3",
	"2114ce5d-b14e-4c0d-b996-dc23582980b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("a2bb6fdd-d766-4ee1-bf65-5d30d0a868df",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4d2e66d5-5d99-4887-bb52-a2f2592edb9f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_MOAH
	VALUES ("ed2ad67f-ffb7-490e-85a6-2b366413e50b",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"fd0ae964-1223-4902-b13a-f12b6a09492d");
INSERT INTO SM_AH
	VALUES ("ed2ad67f-ffb7-490e-85a6-2b366413e50b",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("ed2ad67f-ffb7-490e-85a6-2b366413e50b",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'LOG::LogInfo( message: "SIMPLE TEST BEGIN..." );

select any a from instances of A where selected.a_id == 0;
select any b from instances of B where selected.b_id == 0;
select any c from instances of C where selected.a_id == 0 AND selected.b_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one b1 related by a->B[R1];
if ( b != b1 )
  LOG::LogFailure( message: "Selection of b1 failed." );
end if;

select one c1 related by a->C[R1];
if ( c != c1 )
  LOG::LogFailure( message: "Selection of c1 failed." );
end if;

select one a1 related by b->A[R1];
if ( a != a1 )
  LOG::LogFailure( message: "Selection of a1 failed." );
end if;

select one c2 related by b->C[R1];
if ( c != c2 )
  LOG::LogFailure( message: "Selection of c2 failed." );
end if;

select one b2 related by c->B[R1];
if ( b != b2 )
  LOG::LogFailure( message: "Selection of b2 failed." );
end if;

select one a2 related by c->A[R1];
if ( a != a2 )
  LOG::LogFailure( message: "Selection of a2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select one b3 related by a->C[R1]->B[R1];
if ( b != b3 )
  LOG::LogFailure( message: "Selection of b3 failed." );
end if;

select one a3 related by b->C[R1]->A[R1];
if ( a != a3 )
  LOG::LogFailure( message: "Selection of a3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many a_set from instances of A;
if ( cardinality a_set != 2 )
  LOG::LogFailure( message: "Selection of a_set failed." );
end if;

select many b_set from instances of B;
if ( cardinality b_set != 2 )
  LOG::LogFailure( message: "Selection of b_set failed." );
end if;

select many c_set from instances of C;
if ( cardinality c_set != 2 )
  LOG::LogFailure( message: "Selection of c_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any b4 related by a_set->B[R1];
if ( empty b4 )
  LOG::LogFailure( message: "Selection of b4 failed." );
end if;

select any c3 related by a_set->C[R1];
if ( empty c3 )
  LOG::LogFailure( message: "Selection of c3 failed." );
end if;

select any a4 related by b_set->A[R1];
if ( empty a4 )
  LOG::LogFailure( message: "Selection of a4 failed." );
end if;

select any c4 related by b_set->C[R1];
if ( empty c4 )
  LOG::LogFailure( message: "Selection of c4 failed." );
end if;

select any a5 related by c_set->A[R1];
if ( empty a5 )
  LOG::LogFailure( message: "Selection of a5 failed." );
end if;

select any b5 related by c_set->B[R1];
if ( empty b5 )
  LOG::LogFailure( message: "Selection of b5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many b1_set related by a_set->B[R1];
if ( cardinality b1_set != 2 )
  LOG::LogFailure( message: "Selection of b1_set failed." );
end if;

select many c1_set related by a_set->C[R1];
if ( cardinality c1_set != 2 )
  LOG::LogFailure( message: "Selection of c1_set failed." );
end if;

select many a1_set related by b_set->A[R1];
if ( cardinality a1_set != 2 )
  LOG::LogFailure( message: "Selection of a1_set failed." );
end if;

select many c2_set related by b_set->C[R1];
if ( cardinality c2_set != 2 )
  LOG::LogFailure( message: "Selection of c2_set failed." );
end if;

select many a2_set related by c_set->A[R1];
if ( cardinality a2_set != 2 )
  LOG::LogFailure( message: "Selection of a2_set failed." );
end if;

select many b2_set related by c_set->B[R1];
if ( cardinality b2_set != 2 )
  LOG::LogFailure( message: "Selection of b2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any b6 related by a_set->C[R1]->B[R1];
if ( empty b6 )
  LOG::LogFailure( message: "Selection of b6 failed." );
end if;

select any a6 related by b_set->C[R1]->A[R1];
if ( empty a6 )
  LOG::LogFailure( message: "Selection of a6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many b3_set related by a_set->C[R1]->B[R1];
if ( cardinality b3_set != 2 )
  LOG::LogFailure( message: "Selection of b3_set failed." );
end if;

select many a3_set related by b_set->C[R1]->A[R1];
if ( cardinality a3_set != 2 )
  LOG::LogFailure( message: "Selection of a3_set failed." );
end if;

generate DRV1 to self;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("b71432f8-e88f-44b0-97ae-f516c3cdfa6e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"8228e700-5dfa-4cdc-93cd-314abe33d47a");
INSERT INTO SM_AH
	VALUES ("b71432f8-e88f-44b0-97ae-f516c3cdfa6e",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("b71432f8-e88f-44b0-97ae-f516c3cdfa6e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any d from instances of D where selected.d_id == 0;
select any e from instances of E where selected.e_id == 0;
select any f from instances of F where selected.f_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one e1 related by d->E[R2];
if ( e != e1 )
  LOG::LogFailure( message: "Selection of e1 failed." );
end if;

select one d1 related by e->D[R2];
if ( d != d1 )
  LOG::LogFailure( message: "Selection of d1 failed." );
end if;

select one e2 related by f->E[R2];
if ( e != e2 ) 
  LOG::LogFailure( message: "Selection of e2 failed." );
end if;

select one d2 related by f->D[R2];
if ( d != d2 ) 
  LOG::LogFailure( message: "Selection of d2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any f1 related by d->F[R2];
if ( empty f1 )
  LOG::LogFailure( message: "Selection of f1 failed." );
end if;

select any f2 related by e->F[R2];
if ( empty f2 )
  LOG::LogFailure( message: "Selection of f2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many f1_set related by d->F[R2];
if ( cardinality f1_set != 2 )
  LOG::LogFailure( message: "Selection of f1_set failed." );
end if;

select many f2_set related by e->F[R2];
if ( cardinality f2_set != 2 )
  LOG::LogFailure( message: "Selection of f2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any e3 related by d->F[R2]->E[R2];
if ( e != e3 ) 
  LOG::LogFailure( message: "Selection of e3 failed." );
end if;

select any d3 related by e->F[R2]->D[R2];
if ( d != d3 ) 
  LOG::LogFailure( message: "Selection of d3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many e1_set related by d->F[R2]->E[R2];
if ( cardinality e1_set != 1 ) 
  LOG::LogFailure( message: "Selection of e1_set failed." );
end if;

select many d1_set related by e->F[R2]->D[R2];
if ( cardinality d1_set != 1 ) 
  LOG::LogFailure( message: "Selection of d1_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many d_set from instances of D;
if ( cardinality d_set != 2 )
  LOG::LogFailure( message: "Selection of d_set failed." );
end if;

select many e_set from instances of E;
if ( cardinality e_set != 2 )
  LOG::LogFailure( message: "Selection of e_set failed." );
end if;

select many f_set from instances of F;
if ( cardinality f_set != 3 )
  LOG::LogFailure( message: "Selection of f_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any e4 related by d_set->E[R2];
if ( empty e4 )
  LOG::LogFailure( message: "Selection of e4 failed." );
end if;

select any d4 related by e_set->D[R2];
if ( empty d4 )
  LOG::LogFailure( message: "Selection of d4 failed." );
end if;

select any e5 related by f_set->E[R2];
if ( empty e5 )
  LOG::LogFailure( message: "Selection of e5 failed." );
end if;

select any d5 related by f_set->D[R2];
if ( empty d5 )
  LOG::LogFailure( message: "Selection of d5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many e2_set related by d_set->E[R2];
if ( cardinality e2_set != 2 )
  LOG::LogFailure( message: "Selection of e2_set failed." );
end if;

select many d2_set related by e_set->D[R2];
if ( cardinality d2_set != 2 )
  LOG::LogFailure( message: "Selection of d2_set failed." );
end if;

select many e3_set related by f_set->E[R2];
if ( cardinality e3_set != 2 )
  LOG::LogFailure( message: "Selection of e3_set failed." );
end if;

select many d3_set related by f_set->D[R2];
if ( cardinality d3_set != 2 )
  LOG::LogFailure( message: "Selection of d3_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any e6 related by d_set->F[R2]->E[R2];
if ( empty e6 )
  LOG::LogFailure( message: "Selection of e6 failed." );
end if;

select any d6 related by e_set->F[R2]->D[R2];
if ( empty d6 )
  LOG::LogFailure( message: "Selection of d6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many e4_set related by d_set->F[R2]->E[R2];
if ( cardinality e4_set != 2 )
  LOG::LogFailure( message: "Selection of e4_set failed." );
end if;

select many d4_set related by e_set->F[R2]->D[R2];
if ( cardinality d4_set != 2 )
  LOG::LogFailure( message: "Selection of d4_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("16c49810-bd15-4dfd-8a77-d8b16838ec54",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"7909d6ba-29a3-43f9-9379-e42c09893b9e");
INSERT INTO SM_AH
	VALUES ("16c49810-bd15-4dfd-8a77-d8b16838ec54",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("16c49810-bd15-4dfd-8a77-d8b16838ec54",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any g from instances of G where selected.g_id == 0;
select any h from instances of H where selected.h_id == 0;
select any i from instances of I where selected.g_id == 0 and selected.h_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any h1 related by g->H[R3];
if ( empty h1 )
  LOG::LogFailure( message: "Selection of h1 failed." );
end if;

select any i1 related by g->I[R3];
if ( empty i1 )
  LOG::LogFailure( message: "Selection of i1 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many h1_set related by g->H[R3];
if ( cardinality h1_set != 2 )
  LOG::LogFailure( message: "Selection of h1_set failed." );
end if;

select many i1_set related by g->I[R3];
if ( cardinality i1_set != 2 )
  LOG::LogFailure( message: "Selection of i1_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one g1 related by h->G[R3];
if ( g != g1 )
  LOG::LogFailure( message: "Selection of g1 failed." );
end if;

select one i2 related by h->I[R3];
if ( i != i2 )
  LOG::LogFailure( message: "Selection of i2 failed." );
end if;

select one g2 related by i->G[R3];
if ( g != g2 )
  LOG::LogFailure( message: "Selection of g2 failed." );
end if;

select one h2 related by i->H[R3];
if ( h != h2 )
  LOG::LogFailure( message: "Selection of h2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select one g3 related by h->I[R3]->G[R3];
if ( g != g3 )
  LOG::LogFailure( message: "Selection of g3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any h3 related by g->I[R3]->H[R3];
if ( empty h3 )
  LOG::LogFailure( message: "Selection of h3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many h2_set related by g->I[R3]->H[R3];
if ( cardinality h2_set != 2 )
  LOG::LogFailure( message: "Selection of h2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many g_set from instances of G;
select many h_set from instances of H;
select many i_set from instances of I;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any h4 related by g_set->H[R3];
if ( empty h4 )
  LOG::LogFailure( message: "Selection of h4 failed." );
end if;

select any i3 related by g_set->I[R3];
if ( empty i3 )
  LOG::LogFailure( message: "Selection of i3 failed." );
end if;

select any g4 related by h_set->G[R3];
if ( empty g4 )
  LOG::LogFailure( message: "Selection of g4 failed." );
end if;

select any i4 related by h_set->I[R3];
if ( empty i4 )
  LOG::LogFailure( message: "Selection of i4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many h3_set related by g_set->H[R3];
if ( cardinality h3_set != 3 )
  LOG::LogFailure( message: "Selection of h3_set failed." );
end if;

select many i2_set related by g_set->I[R3];
if ( cardinality i2_set != 3 )
  LOG::LogFailure( message: "Selection of i2_set failed." );
end if;

select many g1_set related by h_set->G[R3];
if ( cardinality g1_set != 2 )
  LOG::LogFailure( message: "Selection of g1_set failed." );
end if;

select many i3_set related by h_set->I[R3];
if ( cardinality i3_set != 3 )
  LOG::LogFailure( message: "Selection of i3_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any h5 related by g_set->I[R3]->H[R3];
if ( empty h5 )
  LOG::LogFailure( message: "Selection of h5 failed." );
end if;

select any g5 related by h_set->I[R3]->G[R3];
if ( empty g5 )
  LOG::LogFailure( message: "Selection of g5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many h4_set related by g_set->I[R3]->H[R3];
if ( cardinality h4_set != 3 )
  LOG::LogFailure( message: "Selection of h4_set failed." );
end if;

select many g2_set related by h_set->I[R3]->G[R3];
if ( cardinality g2_set != 2 )
  LOG::LogFailure( message: "Selection of g2_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("c33eb2ec-0681-40b1-b9db-b875f54d5fb5",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6999e564-fc1d-4e83-be14-3248ccf9cea3");
INSERT INTO SM_AH
	VALUES ("c33eb2ec-0681-40b1-b9db-b875f54d5fb5",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("c33eb2ec-0681-40b1-b9db-b875f54d5fb5",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any j from instances of J where selected.j_id == 0;
select any k from instances of K where selected.k_id == 0;
select any l from instances of L where selected.l_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one j1 related by k->J[R4];
if ( empty j1 )
  LOG::LogFailure( message: "Selection of j1 failed." );
end if;

select one j2 related by l->J[R4];
if ( empty j2 )
  LOG::LogFailure( message: "Selection of j2 failed." );
end if;

select one k1 related by l->K[R4];
if ( empty k1 )
  LOG::LogFailure( message: "Selection of k1 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any k2 related by j->K[R4];
if ( empty k2 )
  LOG::LogFailure( message: "Selection of k2 failed." );
end if;

select any l1 related by k->L[R4];
if ( empty l1 )
  LOG::LogFailure( message: "Selection of l1 failed." );
end if;

select any l2 related by j->L[R4];
if ( empty l2 )
  LOG::LogFailure( message: "Selection of l2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many k1_set related by j->K[R4];
if ( cardinality k1_set != 2 )
  LOG::LogFailure( message: "Selection of k1_set failed." );
end if;

select many l1_set related by j->L[R4];
if ( cardinality l1_set != 4 )
  LOG::LogFailure( message: "Selection of l1_set failed." );
end if;

select many l2_set related by k->L[R4];
if ( cardinality l2_set != 2 )
  LOG::LogFailure( message: "Selection of l2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any k3 related by j->L[R4]->K[R4];
if ( empty k3 )
  LOG::LogFailure( message: "Selection of k3 failed." );
end if;

select any j3 related by k->L[R4]->J[R4];
if ( empty j3 )
  LOG::LogFailure( message: "Selection of j3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many k2_set related by j->L[R4]->K[R4];
if ( cardinality k2_set != 2 )
  LOG::LogFailure( message: "Selection of k2_set failed." );
end if;

select many j1_set related by k->L[R4]->J[R4];
if ( cardinality j1_set != 1 )
  LOG::LogFailure( message: "Selection of j1_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many j_set from instances of J;
select many k_set from instances of K;
select many l_set from instances of L;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any k4 related by j_set->K[R4];
if ( empty k4 )
  LOG::LogFailure( message: "Selection of k4 failed." );
end if;

select any l3 related by j_set->L[R4];
if ( empty l3 )
  LOG::LogFailure( message: "Selection of l3 failed." );
end if;

select any j4 related by k_set->J[R4];
if ( empty j4 )
  LOG::LogFailure( message: "Selection of j4 failed." );
end if;

select any l4 related by k_set->L[R4];
if ( empty l4 )
  LOG::LogFailure( message: "Selection of l4 failed." );
end if;

select any j5 related by l_set->J[R4];
if ( empty j5 )
  LOG::LogFailure( message: "Selection of j5 failed." );
end if;

select any k5 related by l_set->K[R4];
if ( empty k5 )
  LOG::LogFailure( message: "Selection of k5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many k3_set related by j_set->K[R4];
if ( cardinality k3_set != 3 )
  LOG::LogFailure( message: "Selection of k3_set failed." );
end if;

select many l3_set related by j_set->L[R4];
if ( cardinality l3_set != 5 )
  LOG::LogFailure( message: "Selection of l3_set failed." );
end if;

select many j2_set related by k_set->J[R4];
if ( cardinality j2_set != 2 )
  LOG::LogFailure( message: "Selection of j2_set failed." );
end if;

select many l4_set related by k_set->L[R4];
if ( cardinality l4_set != 5 )
  LOG::LogFailure( message: "Selection of l4_set failed." );
end if;

select many j3_set related by l_set->J[R4];
if ( cardinality j3_set != 2 )
  LOG::LogFailure( message: "Selection of j3_set failed." );
end if;

select many k4_set related by l_set->K[R4];
if ( cardinality k4_set != 3 )
  LOG::LogFailure( message: "Selection of k4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any k6 related by j_set->L[R4]->K[R4];
if ( empty k6 )
  LOG::LogFailure( message: "Selection of k6 failed." );
end if;

select any j6 related by k_set->L[R4]->J[R4];
if ( empty j6 )
  LOG::LogFailure( message: "Selection of j6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many k5_set related by j_set->L[R4]->K[R4];
if ( cardinality k5_set != 3 )
  LOG::LogFailure( message: "Selection of k5_set failed." );
end if;

select many j4_set related by k_set->L[R4]->J[R4];
if ( cardinality j4_set != 2 )
  LOG::LogFailure( message: "Selection of j4_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("74184ef5-17da-4bf2-b80c-eb6a3cbcac47",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4a848a68-d75d-4b2f-a5ba-f1accd30979c");
INSERT INTO SM_AH
	VALUES ("74184ef5-17da-4bf2-b80c-eb6a3cbcac47",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("74184ef5-17da-4bf2-b80c-eb6a3cbcac47",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any p from instances of P where selected.p_id == 0;
select any q from instances of Q where selected.q_id == 0;
select any r from instances of R where selected.r_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one q1 related by r->Q[R8];
if ( empty q1 )
  LOG::LogFailure( message: "Selection of q1 failed." );
end if;

select one p1 related by r->P[R8];
if ( empty p1 )
  LOG::LogFailure( message: "Selection of p1 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any q2 related by p->Q[R8];
if ( empty q2 )
  LOG::LogFailure( message: "Selection of q2 failed." );
end if;

select any r1 related by p->R[R8];
if ( empty r1 )
  LOG::LogFailure( message: "Selection of r1 failed." );
end if;

select any p2 related by q->P[R8];
if ( empty p2 )
  LOG::LogFailure( message: "Selection of p2 failed." );
end if;

select any r2 related by q->R[R8];
if ( empty r2 )
  LOG::LogFailure( message: "Selection of r2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many q1_set related by p->Q[R8];
if ( cardinality q1_set != 2 )
  LOG::LogFailure( message: "Selection of q1_set failed." );
end if;

select many r1_set related by p->R[R8];
if ( cardinality r1_set != 4 )
  LOG::LogFailure( message: "Selection of r1_set failed." );
end if;

select many p1_set related by q->P[R8];
if ( cardinality p1_set != 2 )
  LOG::LogFailure( message: "Selection of p1_set failed." );
end if;

select many r2_set related by q->R[R8];
if ( cardinality r2_set != 4 )
  LOG::LogFailure( message: "Selection of r2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any q3 related by p->R[R8]->Q[R8];
if ( empty q3 )
  LOG::LogFailure( message: "Selection of q3 failed." );
end if;

select any p3 related by q->R[R8]->P[R8];
if ( empty p3 )
  LOG::LogFailure( message: "Selection of p3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many q2_set related by p->R[R8]->Q[R8];
if ( cardinality q2_set != 2 )
  LOG::LogFailure( message: "Selection of q2_set failed." );
end if;

select many p2_set related by q->R[R8]->P[R8];
if ( cardinality p2_set != 2 )
  LOG::LogFailure( message: "Selection of p2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many p_set from instances of P;
select many q_set from instances of Q;
select many r_set from instances of R;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any q4 related by p_set->Q[R8];
if ( empty q4 )
  LOG::LogFailure( message: "Selection of q4 failed." );
end if;

select any r3 related by p_set->R[R8];
if ( empty r3 )
  LOG::LogFailure( message: "Selection of r3 failed." );
end if;

select any p4 related by q_set->P[R8];
if ( empty p4 )
  LOG::LogFailure( message: "Selection of p4 failed." );
end if;

select any r4 related by q_set->R[R8];
if ( empty r4 )
  LOG::LogFailure( message: "Selection of r4 failed." );
end if;

select any q5 related by r_set->Q[R8];
if ( empty q5 )
  LOG::LogFailure( message: "Selection of q5 failed." );
end if;

select any p5 related by r_set->P[R8];
if ( empty p5 )
  LOG::LogFailure( message: "Selection of p5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many q3_set related by p_set->Q[R8];
if ( cardinality q3_set != 3 )
  LOG::LogFailure( message: "Selection of q3_set failed." );
end if;

select many r1_set related by p_set->R[R8];
if ( cardinality r1_set != 9 )
  LOG::LogFailure( message: "Selection of r1_set failed." );
end if;

select many p3_set related by q_set->P[R8];
if ( cardinality p3_set != 3 )
  LOG::LogFailure( message: "Selection of p3_set failed." );
end if;

select many r2_set related by q_set->R[R8];
if ( cardinality r2_set != 9 )
  LOG::LogFailure( message: "Selection of r2_set failed." );
end if;

select many q4_set related by r_set->Q[R8];
if ( cardinality q4_set != 3 )
  LOG::LogFailure( message: "Selection of q4_set failed." );
end if;

select many p4_set related by r_set->P[R8];
if ( cardinality p4_set != 3 )
  LOG::LogFailure( message: "Selection of p4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any q6 related by p_set->R[R8]->Q[R8];
if ( empty q6 )
  LOG::LogFailure( message: "Selection of q6 failed." );
end if;

select any p6 related by q_set->R[R8]->P[R8];
if ( empty p6 )
  LOG::LogFailure( message: "Selection of p6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many q5_set related by p_set->R[R8]->Q[R8];
if ( cardinality q5_set != 3 )
  LOG::LogFailure( message: "Selection of q5_set failed." );
end if;

select many p5_set related by q_set->R[R8]->P[R8];
if ( cardinality p5_set != 3 )
  LOG::LogFailure( message: "Selection of p5_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("c34605c0-aea7-440d-9675-6211e1253e75",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"60d7e4ce-8603-4964-8bb0-8011693bba53");
INSERT INTO SM_AH
	VALUES ("c34605c0-aea7-440d-9675-6211e1253e75",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("c34605c0-aea7-440d-9675-6211e1253e75",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any m from instances of M where selected.m_id == 0;
select any n from instances of N where selected.n_id == 0;
select any o from instances of O where selected.n_id == 0 and selected.m_id == 0;


/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one n1 related by o->N[R7];
if ( empty n1 )
  LOG::LogFailure( message: "Selection of n1 failed." );
end if;

select one m1 related by o->M[R7];
if ( empty m1 )
  LOG::LogFailure( message: "Selection of m1 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any n2 related by m->N[R7];
if ( empty n2 )
  LOG::LogFailure( message: "Selection of n2 failed." );
end if;

select any o1 related by m->O[R7];
if ( empty o1 )
  LOG::LogFailure( message: "Selection of o1 failed." );
end if;

select any m2 related by n->M[R7];
if ( empty m2 )
  LOG::LogFailure( message: "Selection of m2 failed." );
end if;

select any o2 related by n->O[R7];
if ( empty o2 )
  LOG::LogFailure( message: "Selection of o2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many n1_set related by m->N[R7];
if ( cardinality n1_set != 2 )
  LOG::LogFailure( message: "Selection of n1_set failed." );
end if;

select many o1_set related by m->O[R7];
if ( cardinality o1_set != 2 )
  LOG::LogFailure( message: "Selection of o1_set failed." );
end if;

select many m1_set related by n->M[R7];
if ( cardinality m1_set != 2 )
  LOG::LogFailure( message: "Selection of m1_set failed." );
end if;

select many o2_set related by n->O[R7];
if ( cardinality o2_set != 2  )
  LOG::LogFailure( message: "Selection of o2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any n3 related by m->O[R7]->N[R7];
if ( empty n3 )
  LOG::LogFailure( message: "Selection of n3 failed." );
end if;

select any m3 related by n->O[R7]->M[R7];
if ( empty m3 )
  LOG::LogFailure( message: "Selection of m3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many n2_set related by m->O[R7]->N[R7];
if ( cardinality o2_set != 2 )
  LOG::LogFailure( message: "Selection of n2_set failed." );
end if;

select many m2_set related by n->O[R7]->M[R7];
if ( cardinality o2_set != 2 )
  LOG::LogFailure( message: "Selection of m2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many m_set from instances of M;
select many n_set from instances of N;
select many o_set from instances of O;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any n4 related by m_set->N[R7];
if ( empty n4 )
  LOG::LogFailure( message: "Selection of n4 failed." );
end if;

select any o3 related by m_set->O[R7];
if ( empty o3 )
  LOG::LogFailure( message: "Selection of o3 failed." );
end if;

select any m4 related by n_set->M[R7];
if ( empty m4 )
  LOG::LogFailure( message: "Selection of m4 failed." );
end if;

select any o4 related by n_set->O[R7];
if ( empty o4 )
  LOG::LogFailure( message: "Selection of o4 failed." );
end if;

select any m5 related by o_set->M[R7];
if ( empty m5 )
  LOG::LogFailure( message: "Selection of m5 failed." );
end if;

select any n5 related by o_set->N[R7];
if ( empty n5 )
  LOG::LogFailure( message: "Selection of n5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many n3_set related by m_set->N[R7];
if ( cardinality n3_set != 3 )
  LOG::LogFailure( message: "Selection of n3_set failed." );
end if;

select many o3_set related by m_set->O[R7];
if ( cardinality o3_set != 5 )
  LOG::LogFailure( message: "Selection of o3_set failed." );
end if;

select many m3_set related by n_set->M[R7];
if ( cardinality m3_set != 3 )
  LOG::LogFailure( message: "Selection of m3_set failed." );
end if;

select many o4_set related by n_set->O[R7];
if ( cardinality o4_set != 5 )
  LOG::LogFailure( message: "Selection of o4_set failed." );
end if;

select many m4_set related by o_set->M[R7];
if ( cardinality m4_set != 3 )
  LOG::LogFailure( message: "Selection of m4_set failed." );
end if;

select many n4_set related by o_set->N[R7];
if ( cardinality n4_set != 3 )
  LOG::LogFailure( message: "Selection of n4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any n6 related by m_set->O[R7]->N[R7];
if ( empty n6 )
  LOG::LogFailure( message: "Selection of n6 failed." );
end if;

select any m6 related by n_set->O[R7]->M[R7];
if ( empty m6 )
  LOG::LogFailure( message: "Selection of m6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many n5_set related by m_set->O[R7]->N[R7];
if ( cardinality n5_set != 3 )
  LOG::LogFailure( message: "Selection of n5_set failed." );
end if;

select many m5_set related by n_set->O[R7]->M[R7];
if ( cardinality m5_set != 3 )
  LOG::LogFailure( message: "Selection of m5_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("0dc47482-fe9b-4058-a98c-b5213a3119ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"37347ce1-cb36-486c-aba6-d7666ff036b5");
INSERT INTO SM_AH
	VALUES ("0dc47482-fe9b-4058-a98c-b5213a3119ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("0dc47482-fe9b-4058-a98c-b5213a3119ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'LOG::LogInfo( message: "REFLEXIVE TEST BEGIN..." );

select any a from instances of AA where selected.aa_id == 0;
select any a0 from instances of AA where selected.aa_id == 1;
select any b from instances of BB where selected.aa_id == 0 AND selected.aa_id2 == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one b1 related by a->BB[R200.''left''];
if ( b != b1 )
  LOG::LogFailure( message: "Selection of b1 failed." );
end if;

select one a1 related by a->AA[R200.''left''];
if ( a0 != a1 )
  LOG::LogFailure( message: "Selection of a1 failed." );
end if;

select one b2 related by a0->BB[R200.''right''];
if ( b != b2 )
  LOG::LogFailure( message: "Selection of b2 failed." );
end if;

select one a2 related by a0->AA[R200.''right''];
if ( a != a2 )
  LOG::LogFailure( message: "Selection of a2 failed." );
end if;

select one a3 related by b->AA[R200.''left''];
if ( a0 != a3 )
  LOG::LogFailure( message: "Selection of b2 failed." );
end if;

select one a4 related by b->AA[R200.''right''];
if ( a != a4 )
  LOG::LogFailure( message: "Selection of a2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select one a5 related by a->BB[R200.''left'']->AA[R200.''left''];
if ( a0 != a5 )
  LOG::LogFailure( message: "Selection of a5 failed." );
end if;

select one a6 related by a0->BB[R200.''right'']->AA[R200.''right''];
if ( a != a6 )
  LOG::LogFailure( message: "Selection of a6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many a_set from instances of AA;
if ( cardinality a_set != 3 )
  LOG::LogFailure( message: "Selection of a_set failed." );
end if;

select many b_set from instances of BB;
if ( cardinality b_set != 3 )
  LOG::LogFailure( message: "Selection of b_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any b3 related by a_set->BB[R200.''right''];
if ( empty b3 )
  LOG::LogFailure( message: "Selection of b3 failed." );
end if;

select any b4 related by a_set->BB[R200.''left''];
if ( empty b4 )
  LOG::LogFailure( message: "Selection of b4 failed." );
end if;

select any a7 related by a_set->AA[R200.''right''];
if ( empty a7 )
  LOG::LogFailure( message: "Selection of a7 failed." );
end if;

select any a8 related by a_set->AA[R200.''left''];
if ( empty a8 )
  LOG::LogFailure( message: "Selection of a8 failed." );
end if;

select any a9 related by b_set->AA[R200.''right''];
if ( empty a9 )
  LOG::LogFailure( message: "Selection of a9 failed." );
end if;

select any a10 related by b_set->AA[R200.''left''];
if ( empty a10 )
  LOG::LogFailure( message: "Selection of a10 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many b1_set related by a_set->BB[R200.''right''];
if ( cardinality b1_set != 3 )
  LOG::LogFailure( message: "Selection of b1_set failed." );
end if;

select many b2_set related by a_set->BB[R200.''left''];
if ( cardinality b2_set != 3 )
  LOG::LogFailure( message: "Selection of b2_set failed." );
end if;

select many a1_set related by b_set->AA[R200.''right''];
if ( cardinality a1_set != 3 )
  LOG::LogFailure( message: "Selection of a1_set failed." );
end if;

select many a2_set related by b_set->AA[R200.''left''];
if ( cardinality a2_set != 3 )
  LOG::LogFailure( message: "Selection of a2_set failed." );
end if;

select many a3_set related by a_set->AA[R200.''right''];
if ( cardinality a3_set != 3 )
  LOG::LogFailure( message: "Selection of a3_set failed." );
end if;

select many a4_set related by a_set->AA[R200.''left''];
if ( cardinality a4_set != 3 )
  LOG::LogFailure( message: "Selection of a4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any a11 related by a_set->BB[R200.''right'']->AA[R200.''right''];
if ( empty a11 )
  LOG::LogFailure( message: "Selection of a11 failed." );
end if;

select any a12 related by a_set->BB[R200.''left'']->AA[R200.''left''];
if ( empty a12 )
  LOG::LogFailure( message: "Selection of a12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many a5_set related by a_set->BB[R200.''right'']->AA[R200.''right''];
if ( cardinality a5_set != 3 )
  LOG::LogFailure( message: "Selection of a5_set failed." );
end if;

select many a6_set related by a_set->BB[R200.''left'']->AA[R200.''left''];
if ( cardinality a6_set != 3 )
  LOG::LogFailure( message: "Selection of a6_set failed." );
end if;

generate DRV1 to self;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("8b3b97fb-9970-4b03-b191-35e49cc1fddf",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6ad85b9d-647d-4437-b3ef-7b101db43524");
INSERT INTO SM_AH
	VALUES ("8b3b97fb-9970-4b03-b191-35e49cc1fddf",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("8b3b97fb-9970-4b03-b191-35e49cc1fddf",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any c from instances of CC where selected.cc_id == 0;
select any c0 from instances of CC where selected.cc_id2 == 0;
select any d from instances of DD where selected.dd_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one c1 related by c->CC[R201.''right''];
if ( c0 != c1 )
  LOG::LogFailure( message: "Selection of c1 failed." );
end if;

select one c2 related by c0->CC[R201.''left''];
if ( c != c2 )
  LOG::LogFailure( message: "Selection of c2 failed." );
end if;

select one c3 related by d->CC[R201.''left''];
if ( c != c3 ) 
  LOG::LogFailure( message: "Selection of c3 failed." );
end if;

select one c4 related by d->CC[R201.''right''];
if ( c0 != c4 ) 
  LOG::LogFailure( message: "Selection of c4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any d1 related by c->DD[R201.''right''];
if ( empty d1 )
  LOG::LogFailure( message: "Selection of d1 failed." );
end if;

select any d2 related by c0->DD[R201.''left''];
if ( empty d2 )
  LOG::LogFailure( message: "Selection of d2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many d1_set related by c->DD[R201.''right''];
if ( cardinality d1_set != 2 )
  LOG::LogFailure( message: "Selection of d1_set failed." );
end if;

select many d2_set related by c0->DD[R201.''left''];
if ( cardinality d2_set != 2 )
  LOG::LogFailure( message: "Selection of d2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any c5 related by c->DD[R201.''right'']->CC[R201.''right''];
if ( c0 != c5 ) 
  LOG::LogFailure( message: "Selection of c5 failed." );
end if;

select any c6 related by c0->DD[R201.''left'']->CC[R201.''left''];
if ( c6 != c ) 
  LOG::LogFailure( message: "Selection of c6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many c1_set related by c->DD[R201.''right'']->CC[R201.''right''];
if ( cardinality c1_set != 1 ) 
  LOG::LogFailure( message: "Selection of c1_set failed." );
end if;

select many c2_set related by c0->DD[R201.''left'']->CC[R201.''left''];
if ( cardinality c2_set != 1 ) 
  LOG::LogFailure( message: "Selection of c2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many c_set from instances of CC;
if ( cardinality c_set != 3 )
  LOG::LogFailure( message: "Selection of c_set failed." );
end if;

select many d_set from instances of DD;
if ( cardinality d_set != 3 )
  LOG::LogFailure( message: "Selection of d_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any c7 related by c_set->CC[R201.''right''];
if ( empty c7 )
  LOG::LogFailure( message: "Selection of c7 failed." );
end if;

select any c8 related by c_set->CC[R201.''left''];
if ( empty c8 )
  LOG::LogFailure( message: "Selection of c8 failed." );
end if;

select any c9 related by d_set->CC[R201.''right''];
if ( empty c9 )
  LOG::LogFailure( message: "Selection of c9 failed." );
end if;

select any c10 related by d_set->CC[R201.''left''];
if ( empty c10 )
  LOG::LogFailure( message: "Selection of c10 failed." );
end if;

select any d3 related by c_set->DD[R201.''right''];
if ( empty d3 )
  LOG::LogFailure( message: "Selection of d3 failed." );
end if;

select any d4 related by c_set->DD[R201.''left''];
if ( empty d4 )
  LOG::LogFailure( message: "Selection of d4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many c3_set related by c_set->CC[R201.''right''];
if ( cardinality c3_set != 2 )
  LOG::LogFailure( message: "Selection of c3_set failed." );
end if;

select many c4_set related by c_set->CC[R201.''left''];
if ( cardinality c4_set != 2 )
  LOG::LogFailure( message: "Selection of c4_set failed." );
end if;

select many c5_set related by d_set->CC[R201.''right''];
if ( cardinality c5_set != 2 )
  LOG::LogFailure( message: "Selection of c5_set failed." );
end if;

select many c6_set related by d_set->CC[R201.''left''];
if ( cardinality c6_set != 2 )
  LOG::LogFailure( message: "Selection of c6_set failed." );
end if;

select many d3_set related by c_set->DD[R201.''left''];
if ( cardinality d3_set != 3 )
  LOG::LogFailure( message: "Selection of d3_set failed." );
end if;

select many d4_set related by c_set->DD[R201.''right''];
if ( cardinality d4_set != 3 )
  LOG::LogFailure( message: "Selection of d4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any c11 related by c_set->DD[R201.''right'']->CC[R201.''right''];
if ( empty c11 )
  LOG::LogFailure( message: "Selection of c11 failed." );
end if;

select any c12 related by c_set->DD[R201.''left'']->CC[R201.''left''];
if ( empty c12 )
  LOG::LogFailure( message: "Selection of c12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many c7_set related by c_set->DD[R201.''right'']->CC[R201.''right''];
if ( cardinality c7_set != 2 )
  LOG::LogFailure( message: "Selection of c7_set failed." );
end if;

select many c8_set related by c_set->DD[R201.''left'']->CC[R201.''left''];
if ( cardinality c8_set != 2 )
  LOG::LogFailure( message: "Selection of c8_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("bfebed4b-c0ef-434f-9eda-ce5b68492bbf",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"5f379213-6a58-408a-a6dd-b2192311adbc");
INSERT INTO SM_AH
	VALUES ("bfebed4b-c0ef-434f-9eda-ce5b68492bbf",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("bfebed4b-c0ef-434f-9eda-ce5b68492bbf",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any e from instances of EE where selected.ee_id == 0;
select any e0 from instances of EE where selected.ee_id2 == 0;
select any f from instances of FF where selected.ee_id == 0 and selected.ee_id2 == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any e1 related by e->EE[R202.''left''];
if ( empty e1 )
  LOG::LogFailure( message: "Selection of e1 failed." );
end if;

select any f1 related by e->FF[R202.''left''];
if ( empty f1 )
  LOG::LogFailure( message: "Selection of f1 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many e1_set related by e->EE[R202.''left''];
if ( cardinality e1_set != 2 )
  LOG::LogFailure( message: "Selection of e1_set failed." );
end if;

select many f1_set related by e->FF[R202.''left''];
if ( cardinality f1_set != 2 )
  LOG::LogFailure( message: "Selection of f1_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one e2 related by e0->EE[R202.''right''];
if ( e != e2 )
  LOG::LogFailure( message: "Selection of e2 failed." );
end if;

select one f2 related by e0->FF[R202.''right''];
if ( f != f2 )
  LOG::LogFailure( message: "Selection of f2 failed." );
end if;

select one e3 related by f->EE[R202.''right''];
if ( e != e3 )
  LOG::LogFailure( message: "Selection of e3 failed." );
end if;

select one e4 related by f->EE[R202.''left''];
if ( e0 != e4 )
  LOG::LogFailure( message: "Selection of e4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select one e5 related by e0->FF[R202.''right'']->EE[R202.''right''];
if ( e != e5 )
  LOG::LogFailure( message: "Selection of e5 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any e6 related by e->FF[R202.''left'']->EE[R202.''left''];
if ( empty e6 )
  LOG::LogFailure( message: "Selection of e6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many e2_set related by e->FF[R202.''left'']->EE[R202.''left''];
if ( cardinality e2_set != 2 )
  LOG::LogFailure( message: "Selection of e2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many e_set from instances of EE;
select many f_set from instances of FF;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any e7 related by e_set->EE[R202.''left''];
if ( empty e7 )
  LOG::LogFailure( message: "Selection of e7 failed." );
end if;

select any e8 related by e_set->EE[R202.''right''];
if ( empty e8 )
  LOG::LogFailure( message: "Selection of e8 failed." );
end if;

select any e9 related by f_set->EE[R202.''left''];
if ( empty e9 )
  LOG::LogFailure( message: "Selection of e9 failed." );
end if;

select any e10 related by f_set->EE[R202.''right''];
if ( empty e10 )
  LOG::LogFailure( message: "Selection of e10 failed." );
end if;

select any f3 related by e_set->FF[R202.''left''];
if ( empty f3 )
  LOG::LogFailure( message: "Selection of f3 failed." );
end if;

select any f4 related by e_set->FF[R202.''right''];
if ( empty f4 )
  LOG::LogFailure( message: "Selection of f4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many e3_set related by e_set->EE[R202.''left''];
if ( cardinality e3_set != 3 )
  LOG::LogFailure( message: "Selection of e3_set failed." );
end if;

select many e4_set related by e_set->EE[R202.''right''];
if ( cardinality e4_set != 2 )
  LOG::LogFailure( message: "Selection of e4_set failed." );
end if;

select many f2_set related by e_set->FF[R202.''left''];
if ( cardinality f2_set != 3 )
  LOG::LogFailure( message: "Selection of f2_set failed." );
end if;

select many f3_set related by e_set->FF[R202.''right''];
if ( cardinality f3_set != 3 )
  LOG::LogFailure( message: "Selection of f3_set failed." );
end if;

select many e5_set related by f_set->EE[R202.''left''];
if ( cardinality e5_set != 3 )
  LOG::LogFailure( message: "Selection of e5_set failed." );
end if;

select many e6_set related by f_set->EE[R202.''right''];
if ( cardinality e6_set != 2 )
  LOG::LogFailure( message: "Selection of e6_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any e11 related by e_set->FF[R202.''left'']->EE[R202.''left''];
if ( empty e11 )
  LOG::LogFailure( message: "Selection of e11 failed." );
end if;

select any e12 related by e_set->FF[R202.''right'']->EE[R202.''right''];
if ( empty e12 )
  LOG::LogFailure( message: "Selection of e12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many e7_set related by e_set->FF[R202.''left'']->EE[R202.''left''];
if ( cardinality e7_set != 3 )
  LOG::LogFailure( message: "Selection of e7_set failed." );
end if;

select many e8_set related by e_set->FF[R202.''right'']->EE[R202.''right''];
if ( cardinality e8_set != 2 )
  LOG::LogFailure( message: "Selection of e8_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("0b21bcef-b2d2-4637-95b2-72aab2d8608c",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"39887177-6083-46bd-84c3-666176c50953");
INSERT INTO SM_AH
	VALUES ("0b21bcef-b2d2-4637-95b2-72aab2d8608c",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("0b21bcef-b2d2-4637-95b2-72aab2d8608c",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any g from instances of GG where selected.gg_id == 0;
select any g0 from instances of GG where selected.gg_id2 == 0;
select any h from instances of HH where selected.hh_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one g1 related by g->GG[R203.''left''];
if ( empty g1 )
  LOG::LogFailure( message: "Selection of g1 failed." );
end if;

select one g2 related by h->GG[R203.''left''];
if ( empty g2 )
  LOG::LogFailure( message: "Selection of g2 failed." );
end if;

select one g3 related by h->GG[R203.''right''];
if ( empty g3 )
  LOG::LogFailure( message: "Selection of g3 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any g4 related by g->GG[R203.''right''];
if ( empty g4 )
  LOG::LogFailure( message: "Selection of g4 failed." );
end if;

select any h1 related by g0->HH[R203.''right''];
if ( empty h1 )
  LOG::LogFailure( message: "Selection of h1 failed." );
end if;

select any h2 related by g->HH[R203.''left''];
if ( empty h2 )
  LOG::LogFailure( message: "Selection of h2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many g1_set related by g->GG[R203.''right''];
if ( cardinality g1_set != 1 )
  LOG::LogFailure( message: "Selection of g1_set failed." );
end if;

select many h1_set related by g0->HH[R203.''right''];
if ( cardinality h1_set != 2 )
  LOG::LogFailure( message: "Selection of h1_set failed." );
end if;

select many h2_set related by g->HH[R203.''left''];
if ( cardinality h2_set != 4 )
  LOG::LogFailure( message: "Selection of h2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any g5 related by g0->HH[R203.''right'']->GG[R203.''right''];
if ( empty g5 )
  LOG::LogFailure( message: "Selection of g5 failed." );
end if;

select any g6 related by g->HH[R203.''left'']->GG[R203.''left''];
if ( empty g6 )
  LOG::LogFailure( message: "Selection of g6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many g2_set related by g0->HH[R203.''right'']->GG[R203.''right''];
if ( cardinality g2_set != 1 )
  LOG::LogFailure( message: "Selection of g2_set failed." );
end if;

select many g3_set related by g->HH[R203.''left'']->GG[R203.''left''];
if ( cardinality g3_set != 2 )
  LOG::LogFailure( message: "Selection of g3_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many g_set from instances of GG;
select many h_set from instances of HH;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any g7 related by g_set->GG[R203.''right''];
if ( empty g7 )
  LOG::LogFailure( message: "Selection of g7 failed." );
end if;

select any g8 related by g_set->GG[R203.''left''];
if ( empty g8 )
  LOG::LogFailure( message: "Selection of g8 failed." );
end if;

select any g9 related by h_set->GG[R203.''left''];
if ( empty g9 )
  LOG::LogFailure( message: "Selection of g9 failed." );
end if;

select any g10 related by h_set->GG[R203.''right''];
if ( empty g10 )
  LOG::LogFailure( message: "Selection of g10 failed." );
end if;

select any h3 related by g_set->HH[R203.''left''];
if ( empty h3 )
  LOG::LogFailure( message: "Selection of h3 failed." );
end if;

select any h4 related by g_set->HH[R203.''right''];
if ( empty h4 )
  LOG::LogFailure( message: "Selection of h4 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many g4_set related by g_set->GG[R203.''left''];
if ( cardinality g4_set != 3 )
  LOG::LogFailure( message: "Selection of g4_set failed." );
end if;

select many g5_set related by g_set->GG[R203.''right''];
if ( cardinality g5_set != 2 )
  LOG::LogFailure( message: "Selection of g5_set failed." );
end if;

select many g6_set related by h_set->GG[R203.''left''];
if ( cardinality g6_set != 3 )
  LOG::LogFailure( message: "Selection of g6_set failed." );
end if;

select many g7_set related by h_set->GG[R203.''right''];
if ( cardinality g7_set != 2 )
  LOG::LogFailure( message: "Selection of g7_set failed." );
end if;

select many h3_set related by g_set->HH[R203.''left''];
if ( cardinality h3_set != 5 )
  LOG::LogFailure( message: "Selection of h3_set failed." );
end if;

select many h4_set related by g_set->HH[R203.''right''];
if ( cardinality h4_set != 5 )
  LOG::LogFailure( message: "Selection of h4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any g11 related by g_set->HH[R203.''left'']->GG[R203.''left''];
if ( empty g11 )
  LOG::LogFailure( message: "Selection of g11 failed." );
end if;

select any g12 related by g_set->HH[R203.''right'']->GG[R203.''right''];
if ( empty g12 )
  LOG::LogFailure( message: "Selection of g12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many g8_set related by g_set->HH[R203.''left'']->GG[R203.''left''];
if ( cardinality g8_set != 3 )
  LOG::LogFailure( message: "Selection of g8_set failed." );
end if;

select many g9_set related by g_set->HH[R203.''right'']->GG[R203.''right''];
if ( cardinality g9_set != 2 )
  LOG::LogFailure( message: "Selection of j4_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("aef23360-b939-4127-9b87-b6d5bb64b4af",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"2e3fd513-1482-4f74-908b-7c8a1924dab3");
INSERT INTO SM_AH
	VALUES ("aef23360-b939-4127-9b87-b6d5bb64b4af",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("aef23360-b939-4127-9b87-b6d5bb64b4af",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any k from instances of KK where selected.kk_id == 0;
select any k0 from instances of KK where selected.kk_id2 == 0;
select any l from instances of LL where selected.ll_id == 0;

/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one k1 related by l->KK[R205.''left''];
if ( empty k1 )
  LOG::LogFailure( message: "Selection of k1 failed." );
end if;

select one k2 related by l->KK[R205.''right''];
if ( empty k2 )
  LOG::LogFailure( message: "Selection of k2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any k3 related by k->KK[R205.''left''];
if ( empty k3 )
  LOG::LogFailure( message: "Selection of k3 failed." );
end if;

select any l1 related by k->LL[R205.''left''];
if ( empty l1 )
  LOG::LogFailure( message: "Selection of l1 failed." );
end if;

select any k4 related by k0->KK[R205.''right''];
if ( empty k4 )
  LOG::LogFailure( message: "Selection of k4 failed." );
end if;

select any l2 related by k0->LL[R205.''right''];
if ( empty l2 )
  LOG::LogFailure( message: "Selection of l2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many k1_set related by k->KK[R205.''left''];
if ( cardinality k1_set != 2 )
  LOG::LogFailure( message: "Selection of k1_set failed." );
end if;

select many l1_set related by k->LL[R205.''left''];
if ( cardinality l1_set != 4 )
  LOG::LogFailure( message: "Selection of l1_set failed." );
end if;

select many k2_set related by k0->KK[R205.''right''];
if ( cardinality k2_set != 2 )
  LOG::LogFailure( message: "Selection of k2_set failed." );
end if;

select many l2_set related by k0->LL[R205.''right''];
if ( cardinality l2_set != 4 )
  LOG::LogFailure( message: "Selection of l2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any k5 related by k->LL[R205.''left'']->KK[R205.''left''];
if ( empty k5 )
  LOG::LogFailure( message: "Selection of k5 failed." );
end if;

select any k6 related by k0->LL[R205.''right'']->KK[R205.''right''];
if ( empty k6 )
  LOG::LogFailure( message: "Selection of k6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many k3_set related by k->LL[R205.''left'']->KK[R205.''left''];
if ( cardinality k3_set != 2 )
  LOG::LogFailure( message: "Selection of k3_set failed." );
end if;

select many k4_set related by k0->LL[R205.''right'']->KK[R205.''right''];
if ( cardinality k4_set != 2 )
  LOG::LogFailure( message: "Selection of k4_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many k_set from instances of KK;
select many l_set from instances of LL;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any k7 related by k_set->KK[R205.''left''];
if ( empty k7 )
  LOG::LogFailure( message: "Selection of k7 failed." );
end if;

select any l3 related by k_set->LL[R205.''left''];
if ( empty l3 )
  LOG::LogFailure( message: "Selection of l3 failed." );
end if;

select any k8 related by k_set->KK[R205.''right''];
if ( empty k8 )
  LOG::LogFailure( message: "Selection of k8 failed." );
end if;

select any l4 related by k_set->LL[R205.''right''];
if ( empty l4 )
  LOG::LogFailure( message: "Selection of l4 failed." );
end if;

select any k9 related by l_set->KK[R205.''left''];
if ( empty k9 )
  LOG::LogFailure( message: "Selection of k9 failed." );
end if;

select any k10 related by l_set->KK[R205.''right''];
if ( empty k10 )
  LOG::LogFailure( message: "Selection of k10 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many k5_set related by k_set->KK[R205.''left''];
if ( cardinality k5_set != 3 )
  LOG::LogFailure( message: "Selection of k5_set failed." );
end if;

select many l3_set related by k_set->LL[R205.''left''];
if ( cardinality l3_set != 7 )
  LOG::LogFailure( message: "Selection of l3_set failed." );
end if;

select many k6_set related by k_set->KK[R205.''right''];
if ( cardinality k6_set != 3 )
  LOG::LogFailure( message: "Selection of k6_set failed." );
end if;

select many l4_set related by k_set->LL[R205.''right''];
if ( cardinality l4_set != 7 )
  LOG::LogFailure( message: "Selection of l4_set failed." );
end if;

select many k7_set related by l_set->KK[R205.''left''];
if ( cardinality k7_set != 3 )
  LOG::LogFailure( message: "Selection of k7_set failed." );
end if;

select many k8_set related by l_set->KK[R205.''right''];
if ( cardinality k8_set != 3 )
  LOG::LogFailure( message: "Selection of k8_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any k11 related by k_set->LL[R205.''left'']->KK[R205.''left''];
if ( empty k11 )
  LOG::LogFailure( message: "Selection of k11 failed." );
end if;

select any k12 related by k_set->LL[R205.''right'']->KK[R205.''right''];
if ( empty k12 )
  LOG::LogFailure( message: "Selection of k12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many k9_set related by k_set->LL[R205.''left'']->KK[R205.''left''];
if ( cardinality k9_set != 3 )
  LOG::LogFailure( message: "Selection of k9_set failed." );
end if;

select many k10_set related by k_set->LL[R205.''right'']->KK[R205.''right''];
if ( cardinality k10_set != 3 )
  LOG::LogFailure( message: "Selection of k10_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("dea90e57-240f-44f4-b18b-c58b3384c335",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"ef458cb4-e343-4439-ae99-27db09dd0117");
INSERT INTO SM_AH
	VALUES ("dea90e57-240f-44f4-b18b-c58b3384c335",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("dea90e57-240f-44f4-b18b-c58b3384c335",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'select any i from instances of II where selected.ii_id == 0;
select any i0 from instances of II where selected.ii_id2 == 0;
select any j from instances of JJ where selected.ii_id == 0 and selected.ii_id2 == 0;


/////////////////////////////////////////////////////////////////////////////////////
// Select one related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select one i1 related by j->II[R204.''left''];
if ( empty i1 )
  LOG::LogFailure( message: "Selection of i1 failed." );
end if;

select one i2 related by j->II[R204.''right''];
if ( empty i2 )
  LOG::LogFailure( message: "Selection of i2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select any i3 related by i->II[R204.''left''];
if ( empty i3 )
  LOG::LogFailure( message: "Selection of i3 failed." );
end if;

select any j1 related by i->JJ[R204.''left''];
if ( empty j1 )
  LOG::LogFailure( message: "Selection of j1 failed." );
end if;

select any i4 related by i0->II[R204.''right''];
if ( empty i4 )
  LOG::LogFailure( message: "Selection of i4 failed." );
end if;

select any j2 related by i0->JJ[R204.''right''];
if ( empty j2 )
  LOG::LogFailure( message: "Selection of j2 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - direct
/////////////////////////////////////////////////////////////////////////////////////
select many i1_set related by i->II[R204.''left''];
if ( cardinality i1_set != 2 )
  LOG::LogFailure( message: "Selection of i1_set failed." );
end if;

select many j1_set related by i->JJ[R204.''left''];
if ( cardinality j1_set != 2 )
  LOG::LogFailure( message: "Selection of j1_set failed." );
end if;

select many i2_set related by i0->II[R204.''right''];
if ( cardinality i2_set != 2 )
  LOG::LogFailure( message: "Selection of i2_set failed." );
end if;

select many j2_set related by i0->JJ[R204.''right''];
if ( cardinality j2_set != 2  )
  LOG::LogFailure( message: "Selection of j2_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any i5 related by i->JJ[R204.''left'']->II[R204.''left''];
if ( empty i5 )
  LOG::LogFailure( message: "Selection of i5 failed." );
end if;

select any i6 related by i0->JJ[R204.''right'']->II[R204.''right''];
if ( empty i6 )
  LOG::LogFailure( message: "Selection of i6 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many i3_set related by i->JJ[R204.''left'']->II[R204.''left''];
if ( cardinality i3_set != 2 )
  LOG::LogFailure( message: "Selection of i3_set failed." );
end if;

select many i4_set related by i0->JJ[R204.''right'']->II[R204.''right''];
if ( cardinality i3_set != 2 )
  LOG::LogFailure( message: "Selection of i3_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
select many i_set from instances of II;
select many j_set from instances of JJ;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select any i7 related by i_set->II[R204.''left''];
if ( empty i7 )
  LOG::LogFailure( message: "Selection of i7 failed." );
end if;

select any j3 related by i_set->JJ[R204.''left''];
if ( empty j3 )
  LOG::LogFailure( message: "Selection of j3 failed." );
end if;

select any i8 related by i_set->II[R204.''right''];
if ( empty i8 )
  LOG::LogFailure( message: "Selection of i8 failed." );
end if;

select any j4 related by i_set->JJ[R204.''right''];
if ( empty j4 )
  LOG::LogFailure( message: "Selection of j4 failed." );
end if;

select any i9 related by j_set->II[R204.''left''];
if ( empty i9 )
  LOG::LogFailure( message: "Selection of i9 failed." );
end if;

select any i10 related by j_set->II[R204.''right''];
if ( empty i10 )
  LOG::LogFailure( message: "Selection of i10 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - direct
/////////////////////////////////////////////////////////////////////////////////////
select many i5_set related by i_set->II[R204.''left''];
if ( cardinality i5_set != 3 )
  LOG::LogFailure( message: "Selection of i5_set failed." );
end if;

select many j3_set related by i_set->JJ[R204.''left''];
if ( cardinality j3_set != 4 )
  LOG::LogFailure( message: "Selection of j3_set failed." );
end if;

select many i6_set related by i_set->II[R204.''right''];
if ( cardinality i6_set != 3 )
  LOG::LogFailure( message: "Selection of i6_set failed." );
end if;

select many j4_set related by i_set->JJ[R204.''right''];
if ( cardinality j4_set != 4 )
  LOG::LogFailure( message: "Selection of j4_set failed." );
end if;

select many i7_set related by j_set->II[R204.''left''];
if ( cardinality i7_set != 3 )
  LOG::LogFailure( message: "Selection of i7_set failed." );
end if;

select many i8_set related by j_set->II[R204.''right''];
if ( cardinality i8_set != 3 )
  LOG::LogFailure( message: "Selection of i8_set failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select any related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select any i11 related by i_set->JJ[R204.''left'']->II[R204.''left''];
if ( empty i11 )
  LOG::LogFailure( message: "Selection of i11 failed." );
end if;

select any i12 related by i_set->JJ[R204.''right'']->II[R204.''right''];
if ( empty i12 )
  LOG::LogFailure( message: "Selection of i12 failed." );
end if;

/////////////////////////////////////////////////////////////////////////////////////
// Select many related by inst_ref_set - using assoc
/////////////////////////////////////////////////////////////////////////////////////
select many i9_set related by i_set->JJ[R204.''left'']->II[R204.''left''];
if ( cardinality i9_set != 3 )
  LOG::LogFailure( message: "Selection of i9_set failed." );
end if;

select many i10_set related by i_set->JJ[R204.''right'']->II[R204.''right''];
if ( cardinality i10_set != 3 )
  LOG::LogFailure( message: "Selection of i10_set failed." );
end if;

generate DRV1 to self;',
	'');
INSERT INTO SM_MOAH
	VALUES ("05ee206f-6ad5-45ed-8a70-f564bbb8f1f3",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4d2e66d5-5d99-4887-bb52-a2f2592edb9f");
INSERT INTO SM_AH
	VALUES ("05ee206f-6ad5-45ed-8a70-f564bbb8f1f3",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("05ee206f-6ad5-45ed-8a70-f564bbb8f1f3",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'// SIMPLE

select many a_set from instances of A;
for each a in a_set
  select one b related by a->B[R1];
  select one c related by a->C[R1];
  unrelate a from b across R1 using c;
end for;

select many a_set from instances of A;
select many b_set related by a_set->B[R1];
select many c_set related by a_set->C[R1];
if ( not_empty b_set )
  LOG::LogFailure( message: "Unrelate a from b failed - b_set." );
end if;
if ( not_empty c_set )
  LOG::LogFailure( message: "Unrelate a from b failed - c_set." );
end if;

select many d_set from instances of D;
for each d in d_set
  select one e related by d->E[R2];
  select many f_set related by d->F[R2];
  for each f in f_set
    unrelate d from e across R2 using f;
  end for;
end for;

select many d_set from instances of D;
select many e_set related by d_set->E[R2];
select many f_set related by d_set->F[R2];
if ( not_empty e_set )
  LOG::LogFailure( message: "Unrelate d from e failed - e_set." );
end if;
if ( not_empty f_set )
  LOG::LogFailure( message: "Unrelate d from e failed - f_set." );
end if;


select many g_set from instances of G;
for each g in g_set
  select many h_set related by g->H[R3];
  for each h in h_set
    select one i related by h->I[R3];
    unrelate g from h across R3 using i;
  end for;
end for;

select many g_set from instances of G;
select many h_set related by g_set->H[R3];
select many i_set related by g_set->I[R3];
if ( not_empty h_set )
  LOG::LogFailure( message: "Unrelate g from h failed - h_set." );
end if;
if ( not_empty i_set )
  LOG::LogFailure( message: "Unrelate g from h failed - i_set." );
end if;

select many j_set from instances of J;
for each j in j_set
  select many k_set related by j->K[R4];
  for each k in k_set
    select many l_set related by k->L[R4];
    for each l in l_set
      unrelate j from k across R4 using l;
    end for;
  end for;
end for;

select many j_set from instances of J;
select many k_set related by j_set->K[R4];
select many l_set related by j_set->L[R4];
if ( not_empty k_set )
  LOG::LogFailure( message: "Unrelate j from k failed - k_set." );
end if;
if ( not_empty l_set )
  LOG::LogFailure( message: "Unrelate j from k failed - l_set." );
end if;

select many m_set from instances of M;
for each m in m_set
  select many o_set related by m->O[R7];
  for each o in o_set
    select one n related by o->N[R7];
    unrelate m from n across R7 using o;
  end for;
end for;

select many m_set from instances of M;
select many n_set related by m_set->N[R7];
select many o_set related by m_set->O[R7];
if ( not_empty n_set )
  LOG::LogFailure( message: "Unrelate m from n failed - n_set." );
end if;
if ( not_empty o_set )
  LOG::LogFailure( message: "Unrelate m from n failed - o_set." );
end if;

select many p_set from instances of P;
for each p in p_set
  select many r_set related by p->R[R8];
  for each r in r_set
    select one q related by r->Q[R8];
      unrelate p from q across R8 using r;
  end for;
end for;

select many p_set from instances of P;
select many q_set related by p_set->Q[R8];
select many r_set related by p_set->R[R8];
if ( not_empty q_set )
  LOG::LogFailure( message: "Unrelate p from q failed - q_set." );
end if;
if ( not_empty r_set )
  LOG::LogFailure( message: "Unrelate p from q failed - r_set." );
end if;

// REFLEXIVE

select many aa_set from instances of AA;
for each aa in aa_set
  select one aa_left related by aa->AA[R200.''left''];
  select one bb_left related by aa->BB[R200.''left''];
  unrelate aa from aa_left across R200.''left'' using bb_left;
end for;

select many aa_set from instances of AA;
select many aa_left_set related by aa_set->AA[R200.''left''];
select many bb_left_set related by aa_set->BB[R200.''left''];
if ( not_empty aa_left_set )
  LOG::LogFailure( message: "Unrelate aa from aa_left failed - aa_left_set." );
end if;
if ( not_empty bb_left_set )
  LOG::LogFailure( message: "Unrelate aa from aa_left failed - bb_left_set." );
end if;

select many cc_set from instances of CC;
for each cc in cc_set
  select one cc_left related by cc->CC[R201.''left''];
  select many dd_left related by cc->DD[R201.''left''];
  for each dd in dd_left
    unrelate cc from cc_left across R201.''left'' using dd;
  end for;
end for;

select many cc_set from instances of CC;
select many cc_left_set related by cc_set->CC[R201.''left''];
select many dd_left_set related by cc_set->DD[R201.''left''];
if ( not_empty cc_left_set )
  LOG::LogFailure( message: "Unrelate cc from cc_left failed - cc_left_set." );
end if;
if ( not_empty dd_left_set )
  LOG::LogFailure( message: "Unrelate cc from cc_left failed - dd_left_set." );
end if;

select many ee_set from instances of EE;
for each ee in ee_set
  select many ee_left related by ee->EE[R202.''left''];
  for each ee_l in ee_left
    select one ff_left related by ee_l->FF[R202.''right''];
    unrelate ee from ee_l across R202.''left'' using ff_left;
  end for;

end for;

select many ee_set from instances of EE;
select many ee_left_set related by ee_set->EE[R202.''left''];
select many ff_left_set related by ee_set->FF[R202.''left''];
if ( not_empty ee_left_set )
  LOG::LogFailure( message: "Unrelate ee from ee_left failed - ee_left_set." );
end if;
if ( not_empty ff_left_set )
  LOG::LogFailure( message: "Unrelate ee from ee_left failed - ff_left_set." );
end if;

select many gg_set from instances of GG;
for each gg in gg_set
  select one gg_left related by gg->GG[R203.''left''];
  select many hh_left related by gg->HH[R203.''left''];
  for each hh in hh_left
    unrelate gg from gg_left across R203.''left'' using hh;
  end for;
end for;

select many gg_set from instances of GG;
select many gg_left_set related by gg_set->GG[R203.''left''];
select many hh_left_set related by gg_set->HH[R203.''left''];
if ( not_empty gg_left_set )
  LOG::LogFailure( message: "Unrelate gg from gg_left failed - gg_left_set." );
end if;
if ( not_empty hh_left_set )
  LOG::LogFailure( message: "Unrelate gg from gg_left failed - hh_left_set." );
end if;

select many ii_set from instances of II;
for each ii in ii_set
  select many jj_left related by ii->JJ[R204.''left''];
  for each jj in jj_left
    select one ii_left related by jj->II[R204.''left''];
    unrelate ii from ii_left across R204.''left'' using jj;
  end for;
end for;

select many ii_set from instances of II;
select many ii_left_set related by ii_set->II[R204.''left''];
select many jj_left_set related by ii_set->JJ[R204.''left''];
if ( not_empty ii_left_set )
  LOG::LogFailure( message: "Unrelate ii from ii_left failed - ii_left_set." );
end if;
if ( not_empty jj_left_set )
  LOG::LogFailure( message: "Unrelate ii from ii_left failed - jj_left_set." );
end if;

select many kk_set from instances of KK;
for each kk in kk_set
  select many ll_left related by kk->LL[R205.''left''];
  for each ll in ll_left
    select one kk_left related by ll->KK[R205.''left''];
    unrelate kk from kk_left across R205.''left'' using ll;
  end for;
end for;

select many kk_set from instances of KK;
select many kk_left_set related by kk_set->KK[R205.''left''];
select many ll_left_set related by kk_set->LL[R205.''left''];
if ( not_empty kk_left_set )
  LOG::LogFailure( message: "Unrelate kk from kk_left failed - kk_left_set." );
end if;
if ( not_empty ll_left_set )
  LOG::LogFailure( message: "Unrelate kk from kk_left failed - ll_left_set." );
end if;

ARCH::shutdown();',
	'');
INSERT INTO SM_TAH
	VALUES ("7e76741f-38d4-4c48-942b-a37f44f1c787",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"14b92a49-f330-4506-ae0d-3ec12d7827c1");
INSERT INTO SM_AH
	VALUES ("7e76741f-38d4-4c48-942b-a37f44f1c787",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("7e76741f-38d4-4c48-942b-a37f44f1c787",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("3abdc970-b79d-49e1-8cad-ed462848ba0e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"7dc20475-5c88-4a9c-b3ca-998507e1741c");
INSERT INTO SM_AH
	VALUES ("3abdc970-b79d-49e1-8cad-ed462848ba0e",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("3abdc970-b79d-49e1-8cad-ed462848ba0e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("0141c0c6-e326-4b49-99b7-afddbbf79e1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"6b4fec86-0b77-443f-b28f-0d9c46b165fc");
INSERT INTO SM_AH
	VALUES ("0141c0c6-e326-4b49-99b7-afddbbf79e1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("0141c0c6-e326-4b49-99b7-afddbbf79e1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("e6e212c4-3594-4c0c-ae00-3adb1b45992d",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"a075c66c-6993-4c5a-b6fb-ae2ab427535b");
INSERT INTO SM_AH
	VALUES ("e6e212c4-3594-4c0c-ae00-3adb1b45992d",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("e6e212c4-3594-4c0c-ae00-3adb1b45992d",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("3c6ae27b-54c8-4ac6-96fb-af2a98c58451",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"262649b0-de0f-4689-ab2c-d65b009348b2");
INSERT INTO SM_AH
	VALUES ("3c6ae27b-54c8-4ac6-96fb-af2a98c58451",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("3c6ae27b-54c8-4ac6-96fb-af2a98c58451",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("70d42b56-0fcf-4cca-b155-75ee2baf8705",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"18e2d166-bfdb-4a8e-a34a-3bd07c0e6457");
INSERT INTO SM_AH
	VALUES ("70d42b56-0fcf-4cca-b155-75ee2baf8705",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("70d42b56-0fcf-4cca-b155-75ee2baf8705",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("740fee9a-a594-4a89-a811-749da47acc1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"2f133236-d6b7-4564-83c0-6aaed6710910");
INSERT INTO SM_AH
	VALUES ("740fee9a-a594-4a89-a811-749da47acc1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("740fee9a-a594-4a89-a811-749da47acc1e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("b3f3a664-ff67-4ff1-990e-b8902946b94e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"55c61fe2-7d63-4f33-8bef-6cc036847a30");
INSERT INTO SM_AH
	VALUES ("b3f3a664-ff67-4ff1-990e-b8902946b94e",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("b3f3a664-ff67-4ff1-990e-b8902946b94e",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("fbe8910f-2333-48f2-ab17-617acc21a2f0",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"4dde17bf-fbf8-4af2-b2b0-9a9227aa3772");
INSERT INTO SM_AH
	VALUES ("fbe8910f-2333-48f2-ab17-617acc21a2f0",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("fbe8910f-2333-48f2-ab17-617acc21a2f0",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("453feba4-1318-4f6c-a442-203f92d50e53",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"d0b86985-1129-451b-82d0-0d9a52aeb2b1");
INSERT INTO SM_AH
	VALUES ("453feba4-1318-4f6c-a442-203f92d50e53",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("453feba4-1318-4f6c-a442-203f92d50e53",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("b0d7586c-628a-45d7-9091-53d24d5217ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"7cbea71a-63cd-40f2-a6d7-ef194bd7f4da");
INSERT INTO SM_AH
	VALUES ("b0d7586c-628a-45d7-9091-53d24d5217ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("b0d7586c-628a-45d7-9091-53d24d5217ea",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("8da33979-bc58-43d9-be90-abb7eeecf298",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"aa776acc-8c1d-46a1-ab5e-26b12bf2e7b6");
INSERT INTO SM_AH
	VALUES ("8da33979-bc58-43d9-be90-abb7eeecf298",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("8da33979-bc58-43d9-be90-abb7eeecf298",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("c421ee2e-a4e5-4295-af09-5dfe6c72fcc1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	"a2bb6fdd-d766-4ee1-bf65-5d30d0a868df");
INSERT INTO SM_AH
	VALUES ("c421ee2e-a4e5-4295-af09-5dfe6c72fcc1",
	"7f9ee828-eebd-4fc6-8369-104189a48062");
INSERT INTO SM_ACT
	VALUES ("c421ee2e-a4e5-4295-af09-5dfe6c72fcc1",
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	1,
	'',
	'');
INSERT INTO GD_MD
	VALUES ("3394c77a-ff7f-4531-9883-a8ef107ac698",
	8,
	"7f9ee828-eebd-4fc6-8369-104189a48062",
	40,
	1,
	0,
	1,
	1,
	0,
	12,
	0,
	0,
	0,
	0,
	0,
	0,
	'',
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine');
INSERT INTO GD_GE
	VALUES ("bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"fd0ae964-1223-4902-b13a-f12b6a09492d",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-One');
INSERT INTO GD_SHP
	VALUES ("bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b");
INSERT INTO GD_NCS
	VALUES ("bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b");
INSERT INTO DIM_GE
	VALUES (64.000000,
	144.000000,
	"bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("cca6a563-47bd-43a1-a8e8-16ee46fef30f",
	192.000000,
	144.000000,
	"bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b");
INSERT INTO DIM_CON
	VALUES ("16acffd0-2e0f-4ad1-bbd1-83dff08c0b03",
	192.000000,
	320.000000,
	"bbd2a94c-dc26-4f9d-aa1b-6bfccbc3899b");
INSERT INTO GD_GE
	VALUES ("eeab9ffe-949a-486d-ad56-1dc698f61bd5",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"8228e700-5dfa-4cdc-93cd-314abe33d47a",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-Many');
INSERT INTO GD_SHP
	VALUES ("eeab9ffe-949a-486d-ad56-1dc698f61bd5");
INSERT INTO GD_NCS
	VALUES ("eeab9ffe-949a-486d-ad56-1dc698f61bd5");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"eeab9ffe-949a-486d-ad56-1dc698f61bd5");
INSERT INTO DIM_GE
	VALUES (64.000000,
	432.000000,
	"eeab9ffe-949a-486d-ad56-1dc698f61bd5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("eeab9ffe-949a-486d-ad56-1dc698f61bd5",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("6f9741a0-6862-407b-9282-def181be6b51",
	192.000000,
	432.000000,
	"eeab9ffe-949a-486d-ad56-1dc698f61bd5");
INSERT INTO DIM_CON
	VALUES ("4298e580-88af-4b11-b439-c8a5ce50d9b4",
	192.000000,
	608.000000,
	"eeab9ffe-949a-486d-ad56-1dc698f61bd5");
INSERT INTO GD_GE
	VALUES ("57a48c13-51f9-419d-b3eb-29f2f7fe88e0",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"7909d6ba-29a3-43f9-9379-e42c09893b9e",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-One');
INSERT INTO GD_SHP
	VALUES ("57a48c13-51f9-419d-b3eb-29f2f7fe88e0");
INSERT INTO GD_NCS
	VALUES ("57a48c13-51f9-419d-b3eb-29f2f7fe88e0");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"57a48c13-51f9-419d-b3eb-29f2f7fe88e0");
INSERT INTO DIM_GE
	VALUES (64.000000,
	720.000000,
	"57a48c13-51f9-419d-b3eb-29f2f7fe88e0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("57a48c13-51f9-419d-b3eb-29f2f7fe88e0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("b4aaa909-caae-4384-baa4-65d1864a3995",
	192.000000,
	720.000000,
	"57a48c13-51f9-419d-b3eb-29f2f7fe88e0");
INSERT INTO DIM_CON
	VALUES ("e77c6f91-1efb-49b7-bf83-8697c1724390",
	331.000000,
	725.000000,
	"57a48c13-51f9-419d-b3eb-29f2f7fe88e0");
INSERT INTO GD_GE
	VALUES ("2a97814d-9637-4e33-b290-d5576ccb568c",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"6999e564-fc1d-4e83-be14-3248ccf9cea3",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-Many');
INSERT INTO GD_SHP
	VALUES ("2a97814d-9637-4e33-b290-d5576ccb568c");
INSERT INTO GD_NCS
	VALUES ("2a97814d-9637-4e33-b290-d5576ccb568c");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"2a97814d-9637-4e33-b290-d5576ccb568c");
INSERT INTO DIM_GE
	VALUES (656.000000,
	144.000000,
	"2a97814d-9637-4e33-b290-d5576ccb568c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2a97814d-9637-4e33-b290-d5576ccb568c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("6b12a1b7-9426-43c7-b5ed-c4ef242db0c7",
	661.000000,
	315.000000,
	"2a97814d-9637-4e33-b290-d5576ccb568c");
INSERT INTO DIM_CON
	VALUES ("f5473748-c4f5-41fb-9c27-5a292e569a1d",
	800.000000,
	320.000000,
	"2a97814d-9637-4e33-b290-d5576ccb568c");
INSERT INTO GD_GE
	VALUES ("ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"4a848a68-d75d-4b2f-a5ba-f1accd30979c",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-Many');
INSERT INTO GD_SHP
	VALUES ("ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9");
INSERT INTO GD_NCS
	VALUES ("ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9");
INSERT INTO DIM_GE
	VALUES (672.000000,
	720.000000,
	"ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("dc5f28eb-29c6-4caf-96f0-a8631dfdecc9",
	800.000000,
	720.000000,
	"ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9");
INSERT INTO DIM_CON
	VALUES ("6da28cb7-2763-4ac5-b641-446ad7b2d96e",
	939.000000,
	725.000000,
	"ce4972fa-c79c-4f2d-a0dd-c7f0c766b3b9");
INSERT INTO GD_GE
	VALUES ("3e623348-0183-4020-9010-7e6a01480f9f",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"60d7e4ce-8603-4964-8bb0-8011693bba53",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-One');
INSERT INTO GD_SHP
	VALUES ("3e623348-0183-4020-9010-7e6a01480f9f");
INSERT INTO GD_NCS
	VALUES ("3e623348-0183-4020-9010-7e6a01480f9f");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"3e623348-0183-4020-9010-7e6a01480f9f");
INSERT INTO DIM_GE
	VALUES (672.000000,
	448.000000,
	"3e623348-0183-4020-9010-7e6a01480f9f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3e623348-0183-4020-9010-7e6a01480f9f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("706e6bbf-0971-4667-a4e3-045cee71b5a4",
	800.000000,
	624.000000,
	"3e623348-0183-4020-9010-7e6a01480f9f");
INSERT INTO DIM_CON
	VALUES ("3cfd3b0d-1467-4cb7-9832-1cc213382dc0",
	800.000000,
	448.000000,
	"3e623348-0183-4020-9010-7e6a01480f9f");
INSERT INTO GD_GE
	VALUES ("57472c9b-709d-44fc-83f7-72602cbf0f1c",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"37347ce1-cb36-486c-aba6-d7666ff036b5",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-One-Reflexive');
INSERT INTO GD_SHP
	VALUES ("57472c9b-709d-44fc-83f7-72602cbf0f1c");
INSERT INTO GD_NCS
	VALUES ("57472c9b-709d-44fc-83f7-72602cbf0f1c");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"57472c9b-709d-44fc-83f7-72602cbf0f1c");
INSERT INTO DIM_GE
	VALUES (1248.000000,
	144.000000,
	"57472c9b-709d-44fc-83f7-72602cbf0f1c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("57472c9b-709d-44fc-83f7-72602cbf0f1c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("a0449156-f4a1-4026-8054-24b0a8148fa9",
	1376.000000,
	320.000000,
	"57472c9b-709d-44fc-83f7-72602cbf0f1c");
INSERT INTO DIM_CON
	VALUES ("e6ead9da-df12-4d2d-92b0-6a9a017d4a65",
	1264.000000,
	320.000000,
	"57472c9b-709d-44fc-83f7-72602cbf0f1c");
INSERT INTO GD_GE
	VALUES ("e168b5af-e26d-4e90-b424-320f2c41df5a",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"6ad85b9d-647d-4437-b3ef-7b101db43524",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-Many-Reflexive');
INSERT INTO GD_SHP
	VALUES ("e168b5af-e26d-4e90-b424-320f2c41df5a");
INSERT INTO GD_NCS
	VALUES ("e168b5af-e26d-4e90-b424-320f2c41df5a");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"e168b5af-e26d-4e90-b424-320f2c41df5a");
INSERT INTO DIM_GE
	VALUES (1248.000000,
	432.000000,
	"e168b5af-e26d-4e90-b424-320f2c41df5a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e168b5af-e26d-4e90-b424-320f2c41df5a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("a8ca68b9-cf20-41a2-ba22-e776723deda9",
	1376.000000,
	608.000000,
	"e168b5af-e26d-4e90-b424-320f2c41df5a");
INSERT INTO DIM_CON
	VALUES ("8d85295a-1741-4c36-b088-cd677d362696",
	1376.000000,
	432.000000,
	"e168b5af-e26d-4e90-b424-320f2c41df5a");
INSERT INTO GD_GE
	VALUES ("c19c46ba-ac6f-4edb-bb84-be8342f19e03",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"5f379213-6a58-408a-a6dd-b2192311adbc",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-One-Reflexive');
INSERT INTO GD_SHP
	VALUES ("c19c46ba-ac6f-4edb-bb84-be8342f19e03");
INSERT INTO GD_NCS
	VALUES ("c19c46ba-ac6f-4edb-bb84-be8342f19e03");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"c19c46ba-ac6f-4edb-bb84-be8342f19e03");
INSERT INTO DIM_GE
	VALUES (1248.000000,
	720.000000,
	"c19c46ba-ac6f-4edb-bb84-be8342f19e03",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c19c46ba-ac6f-4edb-bb84-be8342f19e03",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("caf4bd5c-c02b-42ba-b96a-9397bd16e9d8",
	1515.000000,
	725.000000,
	"c19c46ba-ac6f-4edb-bb84-be8342f19e03");
INSERT INTO DIM_CON
	VALUES ("884bc759-ddd0-402e-81e9-39a3f7b51f7b",
	1376.000000,
	720.000000,
	"c19c46ba-ac6f-4edb-bb84-be8342f19e03");
INSERT INTO GD_GE
	VALUES ("54b29664-8302-4f81-a822-c9b20dec583b",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"39887177-6083-46bd-84c3-666176c50953",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-Many-Reflexive');
INSERT INTO GD_SHP
	VALUES ("54b29664-8302-4f81-a822-c9b20dec583b");
INSERT INTO GD_NCS
	VALUES ("54b29664-8302-4f81-a822-c9b20dec583b");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"54b29664-8302-4f81-a822-c9b20dec583b");
INSERT INTO DIM_GE
	VALUES (1840.000000,
	144.000000,
	"54b29664-8302-4f81-a822-c9b20dec583b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("54b29664-8302-4f81-a822-c9b20dec583b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("98481d29-beb0-4786-b843-53400c351c9d",
	1984.000000,
	320.000000,
	"54b29664-8302-4f81-a822-c9b20dec583b");
INSERT INTO DIM_CON
	VALUES ("8e066629-d36e-44f0-bf1e-ebdd447dc061",
	1845.000000,
	315.000000,
	"54b29664-8302-4f81-a822-c9b20dec583b");
INSERT INTO GD_GE
	VALUES ("2588876e-7e25-4562-8f21-2f4a9a217572",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"2e3fd513-1482-4f74-908b-7c8a1924dab3",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-Many-Reflexive');
INSERT INTO GD_SHP
	VALUES ("2588876e-7e25-4562-8f21-2f4a9a217572");
INSERT INTO GD_NCS
	VALUES ("2588876e-7e25-4562-8f21-2f4a9a217572");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"2588876e-7e25-4562-8f21-2f4a9a217572");
INSERT INTO DIM_GE
	VALUES (1856.000000,
	720.000000,
	"2588876e-7e25-4562-8f21-2f4a9a217572",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2588876e-7e25-4562-8f21-2f4a9a217572",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("32e61ab1-b0f5-4301-890b-c82dc1860eae",
	1984.000000,
	720.000000,
	"2588876e-7e25-4562-8f21-2f4a9a217572");
INSERT INTO DIM_CON
	VALUES ("89792e91-facf-460a-8c4e-1c94c801d8ea",
	1984.000000,
	896.000000,
	"2588876e-7e25-4562-8f21-2f4a9a217572");
INSERT INTO GD_GE
	VALUES ("0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"ef458cb4-e343-4439-ae99-27db09dd0117",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-One-Reflexive');
INSERT INTO GD_SHP
	VALUES ("0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc");
INSERT INTO GD_NCS
	VALUES ("0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc");
INSERT INTO DIM_GE
	VALUES (1856.000000,
	448.000000,
	"0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("81b22733-e385-4e37-9d60-e7b44e6703be",
	1984.000000,
	448.000000,
	"0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc");
INSERT INTO DIM_CON
	VALUES ("d4319b7f-d61c-4fae-9856-811d240bfbb1",
	1984.000000,
	624.000000,
	"0cb31fcd-ab0b-4e4f-8fbd-c7ab7f6911dc");
INSERT INTO GD_GE
	VALUES ("278f46fc-b9fb-4121-8d7a-ee4d24f651ce",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"4d2e66d5-5d99-4887-bb52-a2f2592edb9f",
	41,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Cleanup');
INSERT INTO GD_SHP
	VALUES ("278f46fc-b9fb-4121-8d7a-ee4d24f651ce");
INSERT INTO GD_NCS
	VALUES ("278f46fc-b9fb-4121-8d7a-ee4d24f651ce");
INSERT INTO DIM_ND
	VALUES (272.000000,
	176.000000,
	"278f46fc-b9fb-4121-8d7a-ee4d24f651ce");
INSERT INTO DIM_GE
	VALUES (1856.000000,
	1024.000000,
	"278f46fc-b9fb-4121-8d7a-ee4d24f651ce",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("278f46fc-b9fb-4121-8d7a-ee4d24f651ce",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("b10f77bb-b302-49ed-aadc-91565575a1bd",
	1984.000000,
	1024.000000,
	"278f46fc-b9fb-4121-8d7a-ee4d24f651ce");
INSERT INTO GD_GE
	VALUES ("aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"262649b0-de0f-4689-ab2c-d65b009348b2",
	49,
	0,
	'DRV1: ');
INSERT INTO GD_CON
	VALUES ("aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("416250a7-9831-42c5-8d94-adacf4423adb",
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"416250a7-9831-42c5-8d94-adacf4423adb");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"416250a7-9831-42c5-8d94-adacf4423adb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("416250a7-9831-42c5-8d94-adacf4423adb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f65460c4-b3a1-4391-8da6-6d9c2a8ee02e",
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	3,
	78.000000,
	-9.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"f65460c4-b3a1-4391-8da6-6d9c2a8ee02e");
INSERT INTO DIM_GE
	VALUES (213.000000,
	94.000000,
	"f65460c4-b3a1-4391-8da6-6d9c2a8ee02e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f65460c4-b3a1-4391-8da6-6d9c2a8ee02e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f48b071f-5d20-4402-9a16-312e1d22763c",
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f48b071f-5d20-4402-9a16-312e1d22763c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f48b071f-5d20-4402-9a16-312e1d22763c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f48b071f-5d20-4402-9a16-312e1d22763c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("3e354d4f-a02a-420e-8da4-655e13cf08d1",
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"00000000-0000-0000-0000-000000000000",
	"02da9f8e-6761-491c-9eaa-1c051208e168",
	"023af8e5-d899-46db-8fba-d0fa96a822f1");
INSERT INTO DIM_WAY
	VALUES ("02da9f8e-6761-491c-9eaa-1c051208e168",
	192.000000,
	144.000000,
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("023af8e5-d899-46db-8fba-d0fa96a822f1",
	192.000000,
	80.000000,
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"00000000-0000-0000-0000-000000000000",
	"02da9f8e-6761-491c-9eaa-1c051208e168");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aaf24237-3efe-4bbe-8d7c-2ae4089bb015",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("cca6a563-47bd-43a1-a8e8-16ee46fef30f",
	"00000000-0000-0000-0000-000000000000",
	"aaf24237-3efe-4bbe-8d7c-2ae4089bb015");
INSERT INTO GD_GE
	VALUES ("acd1600f-36ff-498c-992b-dfb3593a18cc",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"14b92a49-f330-4506-ae0d-3ec12d7827c1",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-One::DRV1: ');
INSERT INTO GD_CON
	VALUES ("acd1600f-36ff-498c-992b-dfb3593a18cc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("bfdf2d14-a78d-4b7b-bea2-d97a1e3bccbe",
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"bfdf2d14-a78d-4b7b-bea2-d97a1e3bccbe");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"bfdf2d14-a78d-4b7b-bea2-d97a1e3bccbe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bfdf2d14-a78d-4b7b-bea2-d97a1e3bccbe",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("23a6a9f6-d564-4715-a835-5575947e2bce",
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	3,
	74.000000,
	-3.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"23a6a9f6-d564-4715-a835-5575947e2bce");
INSERT INTO DIM_GE
	VALUES (209.000000,
	364.000000,
	"23a6a9f6-d564-4715-a835-5575947e2bce",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("23a6a9f6-d564-4715-a835-5575947e2bce",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("73e8b8d3-d371-4254-b7bc-34df5c3b09bd",
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"73e8b8d3-d371-4254-b7bc-34df5c3b09bd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"73e8b8d3-d371-4254-b7bc-34df5c3b09bd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("73e8b8d3-d371-4254-b7bc-34df5c3b09bd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("81626800-5f42-4c4c-ac26-2208f63dbbc4",
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	"00000000-0000-0000-0000-000000000000",
	"b3d369a0-f447-4ebf-97c7-da96b9c4aa98",
	"a08857c3-cde2-489f-bb93-f6467d121a52");
INSERT INTO DIM_WAY
	VALUES ("b3d369a0-f447-4ebf-97c7-da96b9c4aa98",
	192.000000,
	320.000000,
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("a08857c3-cde2-489f-bb93-f6467d121a52",
	192.000000,
	432.000000,
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	"00000000-0000-0000-0000-000000000000",
	"b3d369a0-f447-4ebf-97c7-da96b9c4aa98");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"acd1600f-36ff-498c-992b-dfb3593a18cc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("acd1600f-36ff-498c-992b-dfb3593a18cc",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("16acffd0-2e0f-4ad1-bbd1-83dff08c0b03",
	"6f9741a0-6862-407b-9282-def181be6b51",
	"acd1600f-36ff-498c-992b-dfb3593a18cc");
INSERT INTO GD_GE
	VALUES ("658e4109-90f3-4df4-9cd7-ca944c44556a",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"7dc20475-5c88-4a9c-b3ca-998507e1741c",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-Many::DRV1: ');
INSERT INTO GD_CON
	VALUES ("658e4109-90f3-4df4-9cd7-ca944c44556a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("67ae08c0-73b9-49a3-91ad-ad187e5b8556",
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"67ae08c0-73b9-49a3-91ad-ad187e5b8556");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"67ae08c0-73b9-49a3-91ad-ad187e5b8556",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("67ae08c0-73b9-49a3-91ad-ad187e5b8556",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d2a0ac9f-1439-4736-b616-1f87a5935d51",
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	3,
	73.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"d2a0ac9f-1439-4736-b616-1f87a5935d51");
INSERT INTO DIM_GE
	VALUES (208.000000,
	654.000000,
	"d2a0ac9f-1439-4736-b616-1f87a5935d51",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d2a0ac9f-1439-4736-b616-1f87a5935d51",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("604ca2c4-85bd-43c0-bdd5-60edfe2e9923",
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"604ca2c4-85bd-43c0-bdd5-60edfe2e9923");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"604ca2c4-85bd-43c0-bdd5-60edfe2e9923",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("604ca2c4-85bd-43c0-bdd5-60edfe2e9923",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("aa8e692f-96fe-41a0-9b49-0d0ef2706d8e",
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	"00000000-0000-0000-0000-000000000000",
	"7def2509-0bd0-4496-9426-93506ec248be",
	"bf04d8ef-26de-42a2-954f-aa68bd80fe0f");
INSERT INTO DIM_WAY
	VALUES ("7def2509-0bd0-4496-9426-93506ec248be",
	192.000000,
	608.000000,
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("bf04d8ef-26de-42a2-954f-aa68bd80fe0f",
	192.000000,
	720.000000,
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	"00000000-0000-0000-0000-000000000000",
	"7def2509-0bd0-4496-9426-93506ec248be");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"658e4109-90f3-4df4-9cd7-ca944c44556a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("658e4109-90f3-4df4-9cd7-ca944c44556a",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("4298e580-88af-4b11-b439-c8a5ce50d9b4",
	"b4aaa909-caae-4384-baa4-65d1864a3995",
	"658e4109-90f3-4df4-9cd7-ca944c44556a");
INSERT INTO GD_GE
	VALUES ("4a243e98-6b33-49ce-a489-578f1f1f884f",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"6b4fec86-0b77-443f-b28f-0d9c46b165fc",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-One::DRV1: ');
INSERT INTO GD_CON
	VALUES ("4a243e98-6b33-49ce-a489-578f1f1f884f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fee05be0-d532-425c-84ab-a5d659a8fa4f",
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fee05be0-d532-425c-84ab-a5d659a8fa4f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fee05be0-d532-425c-84ab-a5d659a8fa4f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fee05be0-d532-425c-84ab-a5d659a8fa4f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f671894b-4750-49e0-8482-8b639b5e4108",
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	3,
	69.000000,
	12.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"f671894b-4750-49e0-8482-8b639b5e4108");
INSERT INTO DIM_GE
	VALUES (508.000000,
	514.000000,
	"f671894b-4750-49e0-8482-8b639b5e4108",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f671894b-4750-49e0-8482-8b639b5e4108",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("993d7ca2-a037-42d3-9602-c3efda19eec0",
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"993d7ca2-a037-42d3-9602-c3efda19eec0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"993d7ca2-a037-42d3-9602-c3efda19eec0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("993d7ca2-a037-42d3-9602-c3efda19eec0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("cd9cc22d-0d7e-42f6-aa80-36e784d32889",
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	"00000000-0000-0000-0000-000000000000",
	"1a35bcaf-57ac-45e5-a234-32696b9e2211",
	"32ba9e94-75b2-4eec-9621-1a1ed82bd5a9");
INSERT INTO DIM_WAY
	VALUES ("1a35bcaf-57ac-45e5-a234-32696b9e2211",
	331.000000,
	725.000000,
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("32ba9e94-75b2-4eec-9621-1a1ed82bd5a9",
	661.000000,
	315.000000,
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	"00000000-0000-0000-0000-000000000000",
	"1a35bcaf-57ac-45e5-a234-32696b9e2211");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4a243e98-6b33-49ce-a489-578f1f1f884f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4a243e98-6b33-49ce-a489-578f1f1f884f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e77c6f91-1efb-49b7-bf83-8697c1724390",
	"6b12a1b7-9426-43c7-b5ed-c4ef242db0c7",
	"4a243e98-6b33-49ce-a489-578f1f1f884f");
INSERT INTO GD_GE
	VALUES ("39401aca-0735-44dc-94c2-1256b4203c1f",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"a075c66c-6993-4c5a-b6fb-ae2ab427535b",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-One::DRV1: ');
INSERT INTO GD_CON
	VALUES ("39401aca-0735-44dc-94c2-1256b4203c1f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("eff2a445-6177-49a5-843e-b8f29dec0e97",
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"eff2a445-6177-49a5-843e-b8f29dec0e97");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"eff2a445-6177-49a5-843e-b8f29dec0e97",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("eff2a445-6177-49a5-843e-b8f29dec0e97",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("956d183d-6b80-491f-9f6c-5442461ad7fd",
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	3,
	77.000000,
	3.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"956d183d-6b80-491f-9f6c-5442461ad7fd");
INSERT INTO DIM_GE
	VALUES (820.000000,
	666.000000,
	"956d183d-6b80-491f-9f6c-5442461ad7fd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("956d183d-6b80-491f-9f6c-5442461ad7fd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("14b53f3c-3ba9-4416-84b4-3edae4148c05",
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"14b53f3c-3ba9-4416-84b4-3edae4148c05");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"14b53f3c-3ba9-4416-84b4-3edae4148c05",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("14b53f3c-3ba9-4416-84b4-3edae4148c05",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("ddf338e0-98e3-468c-9dc0-5cb9994fbb46",
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	"00000000-0000-0000-0000-000000000000",
	"d2b7ea9a-633e-44d4-9aef-fd2da0098d39",
	"fd9e6968-557b-43b6-a781-cab0d6b52952");
INSERT INTO DIM_WAY
	VALUES ("d2b7ea9a-633e-44d4-9aef-fd2da0098d39",
	800.000000,
	624.000000,
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("fd9e6968-557b-43b6-a781-cab0d6b52952",
	800.000000,
	720.000000,
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	"00000000-0000-0000-0000-000000000000",
	"d2b7ea9a-633e-44d4-9aef-fd2da0098d39");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"39401aca-0735-44dc-94c2-1256b4203c1f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("39401aca-0735-44dc-94c2-1256b4203c1f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("706e6bbf-0971-4667-a4e3-045cee71b5a4",
	"dc5f28eb-29c6-4caf-96f0-a8631dfdecc9",
	"39401aca-0735-44dc-94c2-1256b4203c1f");
INSERT INTO GD_GE
	VALUES ("bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"18e2d166-bfdb-4a8e-a34a-3bd07c0e6457",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-Many::DRV1: ');
INSERT INTO GD_CON
	VALUES ("bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5b966e20-0b90-4aa5-a97f-3a71efb80066",
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5b966e20-0b90-4aa5-a97f-3a71efb80066");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5b966e20-0b90-4aa5-a97f-3a71efb80066",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5b966e20-0b90-4aa5-a97f-3a71efb80066",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9e0db6a2-19f2-4b2d-b3fd-e839ef56d703",
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	3,
	70.000000,
	1.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"9e0db6a2-19f2-4b2d-b3fd-e839ef56d703");
INSERT INTO DIM_GE
	VALUES (813.000000,
	376.000000,
	"9e0db6a2-19f2-4b2d-b3fd-e839ef56d703",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9e0db6a2-19f2-4b2d-b3fd-e839ef56d703",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("40841ce8-81eb-4dcc-8f53-8b6c5b109c55",
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"40841ce8-81eb-4dcc-8f53-8b6c5b109c55");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"40841ce8-81eb-4dcc-8f53-8b6c5b109c55",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("40841ce8-81eb-4dcc-8f53-8b6c5b109c55",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("20076e07-3fd0-4ae3-b4aa-f5349609d14f",
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"00000000-0000-0000-0000-000000000000",
	"afa184e2-a724-497e-b961-a09b37c69ef1",
	"7007a4ef-f245-41e0-aa0f-0b1f76fb189b");
INSERT INTO DIM_WAY
	VALUES ("afa184e2-a724-497e-b961-a09b37c69ef1",
	800.000000,
	320.000000,
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("7007a4ef-f245-41e0-aa0f-0b1f76fb189b",
	800.000000,
	448.000000,
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"00000000-0000-0000-0000-000000000000",
	"afa184e2-a724-497e-b961-a09b37c69ef1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"bd0866d8-4610-45f8-a4de-f1b605bef25c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bd0866d8-4610-45f8-a4de-f1b605bef25c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("f5473748-c4f5-41fb-9c27-5a292e569a1d",
	"3cfd3b0d-1467-4cb7-9832-1cc213382dc0",
	"bd0866d8-4610-45f8-a4de-f1b605bef25c");
INSERT INTO GD_GE
	VALUES ("e9dc9496-d385-4b08-a21f-6823457341cd",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"2f133236-d6b7-4564-83c0-6aaed6710910",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-Many-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("e9dc9496-d385-4b08-a21f-6823457341cd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fb40a078-7015-424d-8dab-100af45e025a",
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"fb40a078-7015-424d-8dab-100af45e025a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fb40a078-7015-424d-8dab-100af45e025a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fb40a078-7015-424d-8dab-100af45e025a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4a61e299-be8c-4216-85b7-1f4b920af869",
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	3,
	70.000000,
	1.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"4a61e299-be8c-4216-85b7-1f4b920af869");
INSERT INTO DIM_GE
	VALUES (1997.000000,
	376.000000,
	"4a61e299-be8c-4216-85b7-1f4b920af869",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4a61e299-be8c-4216-85b7-1f4b920af869",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a4547870-be08-49a5-bb02-b1b24093f929",
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a4547870-be08-49a5-bb02-b1b24093f929");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a4547870-be08-49a5-bb02-b1b24093f929",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a4547870-be08-49a5-bb02-b1b24093f929",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("8c621fe6-7054-40fc-9544-3be48461b1e3",
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	"00000000-0000-0000-0000-000000000000",
	"41d3edad-0ebc-43b3-8bcd-f6f1f4bb64c1",
	"a0248aa8-2ded-445d-bc07-e46aec04c1eb");
INSERT INTO DIM_WAY
	VALUES ("41d3edad-0ebc-43b3-8bcd-f6f1f4bb64c1",
	1984.000000,
	320.000000,
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("a0248aa8-2ded-445d-bc07-e46aec04c1eb",
	1984.000000,
	448.000000,
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	"00000000-0000-0000-0000-000000000000",
	"41d3edad-0ebc-43b3-8bcd-f6f1f4bb64c1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e9dc9496-d385-4b08-a21f-6823457341cd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e9dc9496-d385-4b08-a21f-6823457341cd",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("98481d29-beb0-4786-b843-53400c351c9d",
	"81b22733-e385-4e37-9d60-e7b44e6703be",
	"e9dc9496-d385-4b08-a21f-6823457341cd");
INSERT INTO GD_GE
	VALUES ("dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"55c61fe2-7d63-4f33-8bef-6cc036847a30",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-One-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c620ffea-4f9d-4a43-b6a5-f65bc008d2b3",
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c620ffea-4f9d-4a43-b6a5-f65bc008d2b3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c620ffea-4f9d-4a43-b6a5-f65bc008d2b3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c620ffea-4f9d-4a43-b6a5-f65bc008d2b3",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5f5c312e-743a-4727-86b5-bbaac8488b7e",
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	3,
	77.000000,
	3.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"5f5c312e-743a-4727-86b5-bbaac8488b7e");
INSERT INTO DIM_GE
	VALUES (2004.000000,
	666.000000,
	"5f5c312e-743a-4727-86b5-bbaac8488b7e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5f5c312e-743a-4727-86b5-bbaac8488b7e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("709402b2-2a0e-4851-9b46-254f3ccc3017",
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"709402b2-2a0e-4851-9b46-254f3ccc3017");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"709402b2-2a0e-4851-9b46-254f3ccc3017",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("709402b2-2a0e-4851-9b46-254f3ccc3017",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("bfa34436-6842-4782-b045-8dbd3098bac1",
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"00000000-0000-0000-0000-000000000000",
	"31178ec1-ff4f-4290-8c08-7e0c117f40f7",
	"7d46834d-2b82-442d-b68a-5620e3e1aeb9");
INSERT INTO DIM_WAY
	VALUES ("31178ec1-ff4f-4290-8c08-7e0c117f40f7",
	1984.000000,
	624.000000,
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("7d46834d-2b82-442d-b68a-5620e3e1aeb9",
	1984.000000,
	720.000000,
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"00000000-0000-0000-0000-000000000000",
	"31178ec1-ff4f-4290-8c08-7e0c117f40f7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("dbd7a186-bf0a-4514-b393-cc3f2e2247b4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("d4319b7f-d61c-4fae-9856-811d240bfbb1",
	"32e61ab1-b0f5-4301-890b-c82dc1860eae",
	"dbd7a186-bf0a-4514-b393-cc3f2e2247b4");
INSERT INTO GD_GE
	VALUES ("28aa00be-4a22-4c96-88cc-c6813131b073",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"4dde17bf-fbf8-4af2-b2b0-9a9227aa3772",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-Many-One-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("28aa00be-4a22-4c96-88cc-c6813131b073",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("715c97f8-559d-4a27-9e9c-2956f5a8fe96",
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"715c97f8-559d-4a27-9e9c-2956f5a8fe96");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"715c97f8-559d-4a27-9e9c-2956f5a8fe96",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("715c97f8-559d-4a27-9e9c-2956f5a8fe96",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("917cd807-886b-4dce-9651-5b1935d8e251",
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	3,
	69.000000,
	12.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"917cd807-886b-4dce-9651-5b1935d8e251");
INSERT INTO DIM_GE
	VALUES (1692.000000,
	514.000000,
	"917cd807-886b-4dce-9651-5b1935d8e251",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("917cd807-886b-4dce-9651-5b1935d8e251",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ec1c78ed-20e7-4281-9172-ab6f80a2d171",
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ec1c78ed-20e7-4281-9172-ab6f80a2d171");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ec1c78ed-20e7-4281-9172-ab6f80a2d171",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ec1c78ed-20e7-4281-9172-ab6f80a2d171",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("459e57c5-3556-43db-976a-9d00fe6f64d0",
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	"00000000-0000-0000-0000-000000000000",
	"9512f943-eb99-4273-aea1-25cc6e5c6eb5",
	"53e63040-5ef1-4942-b9b6-e277c0118806");
INSERT INTO DIM_WAY
	VALUES ("9512f943-eb99-4273-aea1-25cc6e5c6eb5",
	1515.000000,
	725.000000,
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("53e63040-5ef1-4942-b9b6-e277c0118806",
	1845.000000,
	315.000000,
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	"00000000-0000-0000-0000-000000000000",
	"9512f943-eb99-4273-aea1-25cc6e5c6eb5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"28aa00be-4a22-4c96-88cc-c6813131b073",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("28aa00be-4a22-4c96-88cc-c6813131b073",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("caf4bd5c-c02b-42ba-b96a-9397bd16e9d8",
	"8e066629-d36e-44f0-bf1e-ebdd447dc061",
	"28aa00be-4a22-4c96-88cc-c6813131b073");
INSERT INTO GD_GE
	VALUES ("da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"d0b86985-1129-451b-82d0-0d9a52aeb2b1",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-Many-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("cb787b28-77cc-4c5e-b239-838776cd0188",
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"cb787b28-77cc-4c5e-b239-838776cd0188");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"cb787b28-77cc-4c5e-b239-838776cd0188",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("cb787b28-77cc-4c5e-b239-838776cd0188",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("74917226-2907-4948-a4ee-e818a0d1fe27",
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	3,
	73.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"74917226-2907-4948-a4ee-e818a0d1fe27");
INSERT INTO DIM_GE
	VALUES (1392.000000,
	654.000000,
	"74917226-2907-4948-a4ee-e818a0d1fe27",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("74917226-2907-4948-a4ee-e818a0d1fe27",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4a5f336e-027b-4d93-a701-c52cf430812f",
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4a5f336e-027b-4d93-a701-c52cf430812f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4a5f336e-027b-4d93-a701-c52cf430812f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4a5f336e-027b-4d93-a701-c52cf430812f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("34cdbcaa-7a90-4ca1-8299-52ff07f1ec75",
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"00000000-0000-0000-0000-000000000000",
	"f87e6f05-efd9-4760-aac5-9640f856740f",
	"6a150c74-660c-46e4-96ac-939aec5387a2");
INSERT INTO DIM_WAY
	VALUES ("f87e6f05-efd9-4760-aac5-9640f856740f",
	1376.000000,
	608.000000,
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("6a150c74-660c-46e4-96ac-939aec5387a2",
	1376.000000,
	720.000000,
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"00000000-0000-0000-0000-000000000000",
	"f87e6f05-efd9-4760-aac5-9640f856740f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("da30f0b3-da6b-496c-bc05-12f0fd8a3577",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a8ca68b9-cf20-41a2-ba22-e776723deda9",
	"884bc759-ddd0-402e-81e9-39a3f7b51f7b",
	"da30f0b3-da6b-496c-bc05-12f0fd8a3577");
INSERT INTO GD_GE
	VALUES ("2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"7cbea71a-63cd-40f2-a6d7-ef194bd7f4da",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::One-One-One-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ff2f6bf9-3802-4a3e-8e98-5c090047de83",
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ff2f6bf9-3802-4a3e-8e98-5c090047de83");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ff2f6bf9-3802-4a3e-8e98-5c090047de83",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ff2f6bf9-3802-4a3e-8e98-5c090047de83",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("455aaf00-d772-4c63-8dfe-1e8db447ef14",
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	3,
	74.000000,
	-3.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"455aaf00-d772-4c63-8dfe-1e8db447ef14");
INSERT INTO DIM_GE
	VALUES (1393.000000,
	364.000000,
	"455aaf00-d772-4c63-8dfe-1e8db447ef14",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("455aaf00-d772-4c63-8dfe-1e8db447ef14",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9347569b-7a27-4b07-bff8-c089905fcfd8",
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"9347569b-7a27-4b07-bff8-c089905fcfd8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9347569b-7a27-4b07-bff8-c089905fcfd8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9347569b-7a27-4b07-bff8-c089905fcfd8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2df70de8-cfdd-4969-85e1-d77b775fd5ef",
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"00000000-0000-0000-0000-000000000000",
	"83688ede-2296-4670-9a26-8f6c2967c284",
	"f1c5300f-b61f-44af-89b7-c3139404aa8b");
INSERT INTO DIM_WAY
	VALUES ("83688ede-2296-4670-9a26-8f6c2967c284",
	1376.000000,
	320.000000,
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("f1c5300f-b61f-44af-89b7-c3139404aa8b",
	1376.000000,
	432.000000,
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"00000000-0000-0000-0000-000000000000",
	"83688ede-2296-4670-9a26-8f6c2967c284");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2cf78c42-9a6c-4f25-8938-6eff6555282e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2cf78c42-9a6c-4f25-8938-6eff6555282e",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("a0449156-f4a1-4026-8054-24b0a8148fa9",
	"8d85295a-1741-4c36-b088-cd677d362696",
	"2cf78c42-9a6c-4f25-8938-6eff6555282e");
INSERT INTO GD_GE
	VALUES ("f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"aa776acc-8c1d-46a1-ab5e-26b12bf2e7b6",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-Many::DRV1: ');
INSERT INTO GD_CON
	VALUES ("f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("20907d14-8d01-4bef-bdde-5c315a7d85b0",
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"20907d14-8d01-4bef-bdde-5c315a7d85b0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"20907d14-8d01-4bef-bdde-5c315a7d85b0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("20907d14-8d01-4bef-bdde-5c315a7d85b0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0798d30f-cdb1-4580-9e93-2c1a5701a19f",
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	3,
	-86.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"0798d30f-cdb1-4580-9e93-2c1a5701a19f");
INSERT INTO DIM_GE
	VALUES (958.000000,
	505.000000,
	"0798d30f-cdb1-4580-9e93-2c1a5701a19f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0798d30f-cdb1-4580-9e93-2c1a5701a19f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d63cf282-f675-4470-98dd-195ebff3e67a",
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d63cf282-f675-4470-98dd-195ebff3e67a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d63cf282-f675-4470-98dd-195ebff3e67a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d63cf282-f675-4470-98dd-195ebff3e67a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("961ada51-141c-4fd9-88af-cc9fa9cc2ace",
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"00000000-0000-0000-0000-000000000000",
	"8b611400-3b0f-4ec3-afb7-144b21917593",
	"e5262f30-f87e-41f6-ab77-9c452d086bc7");
INSERT INTO DIM_WAY
	VALUES ("8b611400-3b0f-4ec3-afb7-144b21917593",
	939.000000,
	725.000000,
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e5262f30-f87e-41f6-ab77-9c452d086bc7",
	1264.000000,
	320.000000,
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"00000000-0000-0000-0000-000000000000",
	"8b611400-3b0f-4ec3-afb7-144b21917593");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f61a7af6-0a20-4e25-8a14-da8171c50ca8",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("6da28cb7-2763-4ac5-b641-446ad7b2d96e",
	"e6ead9da-df12-4d2d-92b0-6a9a017d4a65",
	"f61a7af6-0a20-4e25-8a14-da8171c50ca8");
INSERT INTO GD_GE
	VALUES ("b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"3394c77a-ff7f-4531-9883-a8ef107ac698",
	"a2bb6fdd-d766-4ee1-bf65-5d30d0a868df",
	42,
	0,
	'G_STE_assoc_rel::Controller::Driver::Instance State Machine::Many-Many-Many-Reflexive::DRV1: ');
INSERT INTO GD_CON
	VALUES ("b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e65c362e-f520-4027-afed-cdc22045bc2d",
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e65c362e-f520-4027-afed-cdc22045bc2d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e65c362e-f520-4027-afed-cdc22045bc2d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e65c362e-f520-4027-afed-cdc22045bc2d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a2bb933a-23d6-47d1-ba7a-453673b4c913",
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	3,
	79.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (51.000000,
	22.000000,
	"a2bb933a-23d6-47d1-ba7a-453673b4c913");
INSERT INTO DIM_GE
	VALUES (2006.000000,
	947.000000,
	"a2bb933a-23d6-47d1-ba7a-453673b4c913",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a2bb933a-23d6-47d1-ba7a-453673b4c913",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ee4826d4-82d8-44fe-b82a-cf0a02b9d499",
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ee4826d4-82d8-44fe-b82a-cf0a02b9d499");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ee4826d4-82d8-44fe-b82a-cf0a02b9d499",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ee4826d4-82d8-44fe-b82a-cf0a02b9d499",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("809f81b8-e7a2-4f00-ac50-7378d941f7f3",
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"00000000-0000-0000-0000-000000000000",
	"bc0f648f-be24-48ba-9a14-b4be795ccd9a",
	"fc7cd918-4f9e-4271-be1a-14094c16a5e3");
INSERT INTO DIM_WAY
	VALUES ("bc0f648f-be24-48ba-9a14-b4be795ccd9a",
	1984.000000,
	896.000000,
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("fc7cd918-4f9e-4271-be1a-14094c16a5e3",
	1984.000000,
	1024.000000,
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"00000000-0000-0000-0000-000000000000",
	"bc0f648f-be24-48ba-9a14-b4be795ccd9a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b9ca6c29-53ef-44e7-8a4e-870a4b30cde0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("89792e91-facf-460a-8c4e-1c94c801d8ea",
	"b10f77bb-b302-49ed-aadc-91565575a1bd",
	"b9ca6c29-53ef-44e7-8a4e-870a4b30cde0");
INSERT INTO DIM_DIA
	VALUES ("3394c77a-ff7f-4531-9883-a8ef107ac698",
	'',
	0.563780,
	0.000000,
	506.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_OBJ_PROXY
	VALUES ("292234d6-8592-4a07-88b7-c9b92bb97f22",
	'Driver',
	1,
	'DRV',
	'',
	"00000000-0000-0000-0000-000000000000",
	'../Driver.xtuml');
