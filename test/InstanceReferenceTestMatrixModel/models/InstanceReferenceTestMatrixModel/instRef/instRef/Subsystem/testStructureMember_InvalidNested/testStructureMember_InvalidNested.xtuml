-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'testStructureMember_InvalidNested',
	18,
	'MBR4',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("94a8efcb-0c87-4f44-9751-83ac9de60edd",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_booleanBinaryOperationLeftOperand',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_booleanBinaryOperationLeftOperand, Matrix cell : A14 V4 I8");
select any veh from instances of V;
if ( empty veh)
   LOG::LogFailure(message:"Failed to select veh");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V4 I8-  test failed");
   return;
   
end if;
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

if obj.sdtMember.nestedSDT.instRef != veh
	LOG::LogSuccess(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V4 I8-  test passed");
else
	LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V4 I8-  test failed");	
end if;

if obj.sdtMember.nestedSDT.instRef.model == veh.model	// empty instance access
	;
end if;
LOG::LogFailure(message:"Undetected empty instance access");
LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V4 I8-  test failed");	',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("116d21f8-6b60-476f-b178-b886851b72e3",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_booleanBinaryOperationLeftOperandSet',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_booleanBinaryOperationLeftOperandSet, Matrix cell : A30 V4 I8");
select many vehs from instances of V;
if ( empty vehs)
   LOG::LogFailure(message:"vehs is empty instance reference set");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperandSet -A30 V4 I8-  test failed");
   return;
   
end if;
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

if obj.sdtMember.nestedSDT.instRef_set != vehs
	LOG::LogSuccess(message:"S_MBR_booleanBinaryOperationLeftOperandSet -A30 V4 I8-  test passed");
else 
	LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperandSet -A30 V4 I8-  test failed");	
end if;
',
	1,
	'',
	"94a8efcb-0c87-4f44-9751-83ac9de60edd");
INSERT INTO O_TFR
	VALUES ("816bb0b8-be57-491e-99eb-15d290fba28f",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_booleanBinaryOperationRightOperand',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_booleanBinaryOperationRightOperand, Matrix cell : A15 V4 I8");
select any veh from instances of V where selected.model == "none";
if ( not_empty veh)
   LOG::LogFailure(message:"veh is not empty");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationRightOperand -A15 V4 I8-  test failed");
   return;
   
end if;
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

if  veh == obj.sdtMember.nestedSDT.instRef
	LOG::LogSuccess(message:"S_MBR_booleanBinaryOperationRightOperand -A14 V4 I8-  test passed");
else
	LOG::LogFailure(message:"S_MBR_booleanBinaryOperationRightOperand -A14 V4 I8-  test failed");
end if;

if  veh.model == obj.sdtMember.nestedSDT.instRef.model	// empty instance access
	;
end if;
LOG::LogFailure(message:"Undetected empty instance access");
LOG::LogFailure(message:"S_MBR_booleanBinaryOperationRightOperand -A14 V4 I8-  test failed");',
	1,
	'',
	"116d21f8-6b60-476f-b178-b886851b72e3");
INSERT INTO O_TFR
	VALUES ("90ab04d3-6dac-4d56-88bf-9dd509f11ac7",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_booleanBinaryOperationRightOperandSet',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_booleanBinaryOperationRightOperandSet, Matrix cell : A31 V4 I8");

select many vehs from instances of V where selected.model == "none";
if ( not_empty vehs) 
   LOG::LogFailure(message:"vehs is not empty instance reference set");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationRightOperandSet -A31 V4 I8-  test failed");
   return;
   
end if;

select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

if  vehs == obj.sdtMember.nestedSDT.instRef_set 
	LOG::LogSuccess(message:"S_MBR_booleanBinaryOperationRightOperandSet -A31 V4 I8-  test passed");
else
	LOG::LogFailure(message:"S_MBR_booleanBinaryOperationRightOperandSet -A31 V4 I8-  test failed");
end if;

',
	1,
	'',
	"816bb0b8-be57-491e-99eb-15d290fba28f");
INSERT INTO O_TFR
	VALUES ("f2cac230-b1d1-43e2-b154-5326475f0dce",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_readAttr',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_readAttir, Matrix cell : A2 V4 I8");
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

inst = obj.sdtMember.nestedSDT.instRef;
if ( not_empty inst)
	 LOG::LogFailure(message:"inst is not empty");
	 LOG::LogFailure(message:"S_MBR_readAttir -A2 V4 I8-  test failed");
else
	LOG::LogSuccess(message:"S_MBR_readAttir -A2 V4 I8-  test passed");
end if;


model = obj.sdtMember.nestedSDT.instRef.model;  // empty instance access
LOG::LogFailure(message:"Undetected empty instance access");
LOG::LogFailure(message:"S_MBR_readAttir -A2 V4 I8-  test failed");
EOF = 1;',
	1,
	'',
	"90ab04d3-6dac-4d56-88bf-9dd509f11ac7");
INSERT INTO O_TFR
	VALUES ("7d2f3918-ab76-4d65-ae9a-7b16a0b8e583",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_WhereClause',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_WhereClause, Matrix cell : A13 V4 I8");
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

select any car from instances of V;
if ( empty car)
   LOG::LogFailure(message:"Failed to select car");
   LOG::LogFailure(message:"S_MBR_WhereClause -A13 V4 I8-  test failed");
   return;
end if;
select one ped related by car->P[R1] where( selected.vehicleReference == obj.sdtMember.nestedSDT.instRef); 

if ( not_empty ped)
   LOG::LogFailure(message:"ped is not empty");
   LOG::LogFailure(message:"S_MBR_WhereClause -A13 V4 I8-  test failed");
   return;
else 
	LOG::LogSuccess(message:"S_MBR_WhereClause -A13 V4 I8-  test passed");   
end if;

select one ped related by car->P[R1] where( selected.vehicleReference.model == obj.sdtMember.nestedSDT.instRef.model); // empty instance access 
LOG::LogFailure(message:"Undetected empty instance access");
LOG::LogFailure(message:"S_MBR_WhereClause -A13 V4 I8-  test failed");
 
EOF = true;

',
	1,
	'',
	"f2cac230-b1d1-43e2-b154-5326475f0dce");
INSERT INTO O_TFR
	VALUES ("fcb930cc-10e9-479a-abbd-38c6a5f5ea52",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_writeAttr',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_writeAttr, Matrix cell : A19 V4 I8");
select any obj from instances of MBR4;
if ( empty obj)
   LOG::LogFailure(message:"Test setup failure : No instance for testStructureMember_InvalidNested");
   LOG::LogFailure(message:"S_MBR_booleanBinaryOperationLeftOperand -A14 V1 I8-  test failed");
   return; 
end if;

create object instance newCar of V;   
obj.sdtMember.nestedSDT.instRef = newCar;
if ( obj.sdtMember.nestedSDT.instRef == newCar )
	LOG::LogSuccess(message:"S_MBR_writeAttr -A19 V4 I8-  test passed");
else
	LOG::LogFailure(message:"S_MBR_writeAttr -A19 V4 I8-  test failed");
end if;  
delete object instance newCar;
obj.sdtMember.nestedSDT.instRef.model = "BMW";	// empty instance access 
if ( obj.sdtMember.nestedSDT.instRef.model == "BMW" ) 
	;
end if;  
LOG::LogFailure(message:"Undetected empty instance access");
LOG::LogFailure(message:"S_MBR_writeAttr -A19 V4 I8-  test failed");
EOF= true;
 
',
	1,
	'',
	"7d2f3918-ab76-4d65-ae9a-7b16a0b8e583");
INSERT INTO O_TFR
	VALUES ("89ff145b-6871-4bf2-920b-dcc1a434aa8c",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_ActivitiesInvocation',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_ActivitiesInvocation, Matrix cell : A36 V4 I8");

::EmptyInstRefParameterSetupTest(inst: self.sdtMember.nestedSDT.instRef);',
	1,
	'',
	"fcb930cc-10e9-479a-abbd-38c6a5f5ea52");
INSERT INTO O_TFR
	VALUES ("8520b41e-c858-4354-a2ec-da2712089b71",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	'S_MBR_ActivitiesInvocationSet',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'LOG::LogInfo(message:"Operation entered: testStructureMember_InvalidNested::S_MBR_ActivitiesInvocationSet, Matrix cell : A36 V4 I8");

::EmptyInstRefSetParameterSetupTest(instSet: self.sdtMember.nestedSDT.instRef_set); ',
	1,
	'',
	"89ff145b-6871-4bf2-920b-dcc1a434aa8c");
INSERT INTO O_NBATTR
	VALUES ("4e48a602-14d6-4b63-a36b-d34c5ac31a24",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46");
INSERT INTO O_BATTR
	VALUES ("4e48a602-14d6-4b63-a36b-d34c5ac31a24",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46");
INSERT INTO O_ATTR
	VALUES ("4e48a602-14d6-4b63-a36b-d34c5ac31a24",
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	"00000000-0000-0000-0000-000000000000",
	'sdtMember',
	'',
	'',
	'sdtMember',
	0,
	"2bfce69a-0624-47da-ae7d-452df615888c",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("2bfce69a-0624-47da-ae7d-452df615888c",
	"00000000-0000-0000-0000-000000000000",
	'InstRef StructureType',
	'',
	'',
	'../../Datatypes/InstanceReference Structure Types/InstanceReference Structure Types.xtuml');
INSERT INTO O_ID
	VALUES (0,
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46");
INSERT INTO O_ID
	VALUES (1,
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46");
INSERT INTO O_ID
	VALUES (2,
	"4679f78f-ca90-4c2d-b2af-c880d2ee7a46");
INSERT INTO PE_PE
	VALUES ("4679f78f-ca90-4c2d-b2af-c880d2ee7a46",
	1,
	"f0df44d5-e872-4448-8d98-f7bb6be2b9cb",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("f0df44d5-e872-4448-8d98-f7bb6be2b9cb",
	"00000000-0000-0000-0000-000000000000",
	"13c14d34-d225-4949-89b6-fe738cc62cbb",
	'Subsystem',
	'',
	0,
	'../Subsystem.xtuml');
