-- BP 7.1 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	'Parenthood',
	1,
	'P',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("b0c1355c-5534-4467-b9a0-a64a8b2aceb3",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	'pull_out_hair',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'generate P1:grow_up() to self;
LOG::LogInfo( message: "Calvin is driving his parents crazy." );

',
	1,
	'',
	"4fe194c8-1c6f-41a1-b363-a0ba1340677c");
INSERT INTO O_TFR
	VALUES ("4fe194c8-1c6f-41a1-b363-a0ba1340677c",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	'happy_times',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'family = param.family;

if ( family == param.family )
  LOG::LogSuccess( message: "Successful comparison of SDT with SDT array in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of SDT with SDT array in pass-by-val class operation." );
  ::failedFamilyTest();
end if;

child_name = param.family.child_1;

if ( child_name == "Calvin" )
  LOG::LogSuccess( message: "Happy times with new baby." );
  family = param.family;
else
  LOG::LogFailure( message: "Something broke in the test.  Child name is incorrect." );
  ::failedFamilyTest();
end if;

if ( param.family.Pets[0].name == "Garfield" )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;
if ( PetType::cat == param.family.Pets[0].PetType )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;
if ( param.family.Pets[0].CareGiver == param.family.mother )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;
// Use some funky expression syntax to index into the array
if ( param.family.Pets[101 - 100].name == "Odie" )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;
if ( PetType::dog == param.family.Pets[self.getNumOne()].PetType )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;
numOne = self.getNumOne();
if ( param.family.Pets[numOne].CareGiver == param.family.father )
  LOG::LogSuccess( message: "Successful read of SDT array element inside SDT in pass-by-val class operation." );
else
  LOG::LogFailure( message: "Unsuccessful read of SDT array element inside SDT in pass-by-val class operation." );
  ::failedFamilyTest();
end if;

if ( param.family.Pets[0] == self.pet )
  LOG::LogSuccess( message: "Successful comparison of SDT array element in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of SDT array element in state activity." );
  ::failedFamilyTest();
end if;
if ( self.pet != param.family.Pets[1] )
  LOG::LogSuccess( message: "Successful comparison of SDT array element in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of SDT array element in state activity." );
  ::failedFamilyTest();
end if;

aPet[1] = self.pet;
aPet[0] = self.pet;
aPet[1].name = "Odie";
aPet[1].PetType = PetType::dog;
aPet[1].CareGiver = self.family.father;

if ( param.family.Pets == aPet )
  LOG::LogSuccess( message: "Successful comparison of arrays in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of arrays in state activity." );
  ::failedFamilyTest();
end if;
if ( aPet != param.family.Pets )
  LOG::LogFailure( message: "Unsuccessful comparison of SDT array element in state activity." );
  ::failedFamilyTest();
else
  LOG::LogSuccess( message: "Successful comparison of SDT array element in state activity." );
end if;

// Check some deep nesting
if ( self.nest[0].deep_nest[0][0].real_numbers[0] == 0.0 )
  LOG::LogSuccess( message: "Successful read of deeply-nested array element as lVal in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful read of deeply-nested array element as lVal in state activity." );
  ::failedFamilyTest();
end if;
if ( 1.0 == self.nest[0].deep_nest[0][1].real_numbers[1] )
  LOG::LogSuccess( message: "Successful read of deeply-nested array element as rVal in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful read of deeply-nested array element as rVal in state activity." );
  ::failedFamilyTest();
end if;

deepTemp = self.nest;
someReals = self.nest[0].deep_nest[0][0];
if ( deepTemp[0].deep_nest[0][0] == someReals )
  LOG::LogSuccess( message: "Successful comparison of deeply-nested arrays as lVal in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of deeply-nested arrays as lVal in state activity." );
  ::failedFamilyTest();
end if;
if ( someReals == deepTemp[0].deep_nest[0][0] )
  LOG::LogSuccess( message: "Successful comparison of deeply-nested array element as rVal in state activity." );
else
  LOG::LogFailure( message: "Unsuccessful comparison of deeply-nested array element as rVal in state activity." );
  ::failedFamilyTest();
end if;

generate P1:grow_up() to self;',
	1,
	'',
	"22e40f39-0581-4c8b-9dca-9a9ac76704d4");
INSERT INTO O_TPARM
	VALUES ("81ada064-893a-42d1-969d-d3b4be98e7df",
	"4fe194c8-1c6f-41a1-b363-a0ba1340677c",
	'family',
	"8709e0bc-93c6-484e-9b2a-9a2712fc55f2",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("8709e0bc-93c6-484e-9b2a-9a2712fc55f2",
	"00000000-0000-0000-0000-000000000000",
	'Family',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("22e40f39-0581-4c8b-9dca-9a9ac76704d4",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	'getNumOne',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'return 1;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_NBATTR
	VALUES ("f94adf0c-5521-4ff5-bf09-a35043a18b5a",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_BATTR
	VALUES ("f94adf0c-5521-4ff5-bf09-a35043a18b5a",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_ATTR
	VALUES ("f94adf0c-5521-4ff5-bf09-a35043a18b5a",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"00000000-0000-0000-0000-000000000000",
	'family',
	'',
	'',
	'family',
	0,
	"8709e0bc-93c6-484e-9b2a-9a2712fc55f2",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("8e0b089c-b58a-4d01-8279-6c56f12a62ce",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_BATTR
	VALUES ("8e0b089c-b58a-4d01-8279-6c56f12a62ce",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_ATTR
	VALUES ("8e0b089c-b58a-4d01-8279-6c56f12a62ce",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"f94adf0c-5521-4ff5-bf09-a35043a18b5a",
	'current_state',
	'',
	'',
	'current_state',
	0,
	"ba5eda7a-def5-0000-0000-000000000006",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("dfadc4d3-1922-4675-9015-a960e7fe840e",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_BATTR
	VALUES ("dfadc4d3-1922-4675-9015-a960e7fe840e",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO S_DIM
	VALUES (0,
	0,
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"dfadc4d3-1922-4675-9015-a960e7fe840e",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"2a811421-0366-4dbd-afcb-229bfb951166",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_ATTR
	VALUES ("dfadc4d3-1922-4675-9015-a960e7fe840e",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"8e0b089c-b58a-4d01-8279-6c56f12a62ce",
	'schools',
	'',
	'',
	'schools',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'[]',
	'');
INSERT INTO O_NBATTR
	VALUES ("d4b2f0ec-1c5c-47ba-ad40-32abb9ea2bb2",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_BATTR
	VALUES ("d4b2f0ec-1c5c-47ba-ad40-32abb9ea2bb2",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_ATTR
	VALUES ("d4b2f0ec-1c5c-47ba-ad40-32abb9ea2bb2",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"dfadc4d3-1922-4675-9015-a960e7fe840e",
	'pet',
	'',
	'',
	'pet',
	0,
	"7a220dbb-1b1c-401b-8ae7-4d311c56bf2f",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("7a220dbb-1b1c-401b-8ae7-4d311c56bf2f",
	"00000000-0000-0000-0000-000000000000",
	'Pet',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_NBATTR
	VALUES ("d9093c89-128c-42aa-908c-06a283b9b23f",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_BATTR
	VALUES ("d9093c89-128c-42aa-908c-06a283b9b23f",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO S_DIM
	VALUES (0,
	0,
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"d9093c89-128c-42aa-908c-06a283b9b23f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	"8c2aa6c2-7655-4a45-ab33-b2bb92419f3d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_ATTR
	VALUES ("d9093c89-128c-42aa-908c-06a283b9b23f",
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	"d4b2f0ec-1c5c-47ba-ad40-32abb9ea2bb2",
	'nest',
	'',
	'',
	'nest',
	0,
	"fb869d16-2f89-47c4-8c9a-e01744d2ee30",
	'[]',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("fb869d16-2f89-47c4-8c9a-e01744d2ee30",
	"00000000-0000-0000-0000-000000000000",
	'Nest',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_ID
	VALUES (0,
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_ID
	VALUES (1,
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO O_ID
	VALUES (2,
	"758cb49c-e7cd-4abf-aefa-598cafdb5db1");
INSERT INTO PE_PE
	VALUES ("758cb49c-e7cd-4abf-aefa-598cafdb5db1",
	1,
	"55cca3d9-654c-445d-accd-6bbafdf8c328",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("55cca3d9-654c-445d-accd-6bbafdf8c328",
	"00000000-0000-0000-0000-000000000000",
	"d44b6837-1053-4e93-a92b-63147bc38ed4",
	'Test',
	'',
	0,
	'../Test.xtuml');
