-- BP 7.1 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.6

INSERT INTO SM_ISM
	VALUES ("444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"e9c823aa-df5d-40df-ad60-e963b7a7c7d2");
INSERT INTO SM_SM
	VALUES ("444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	'',
	3);
INSERT INTO SM_MOORE
	VALUES ("444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f");
INSERT INTO SM_LEVT
	VALUES ("da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000",
	1,
	'Init',
	0,
	'',
	'INIT1',
	'');
INSERT INTO SM_STATE
	VALUES ("4cc6ccbc-5143-49ba-b28b-f416a9764b34",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000",
	'Initialize',
	1,
	0);
INSERT INTO SM_EIGN
	VALUES ("4cc6ccbc-5143-49ba-b28b-f416a9764b34",
	"da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("4cc6ccbc-5143-49ba-b28b-f416a9764b34",
	"da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CRTXN
	VALUES ("29844a20-f2f0-4379-a845-4a3f21c36620",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"da67d240-5c4c-4928-bdf8-fa323c50e01a",
	"00000000-0000-0000-0000-000000180001");
INSERT INTO SM_TXN
	VALUES ("29844a20-f2f0-4379-a845-4a3f21c36620",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"4cc6ccbc-5143-49ba-b28b-f416a9764b34",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_MOAH
	VALUES ("f397cc7a-10dc-4edf-a401-5dd3ecfbf1cf",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"4cc6ccbc-5143-49ba-b28b-f416a9764b34");
INSERT INTO SM_AH
	VALUES ("f397cc7a-10dc-4edf-a401-5dd3ecfbf1cf",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f");
INSERT INTO SM_ACT
	VALUES ("f397cc7a-10dc-4edf-a401-5dd3ecfbf1cf",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	1,
	'// Insert initialization action language here.

create object instance tc of TC;
tc.b = true;
tc.d = TIM::current_date();
tc.en = enum::red;
create event instance t_e of BC1 to BC creator;
tc.tr = TIM::timer_start( event_inst:t_e, microseconds:3600000000 );
tc.i = 24;
tc.r = 4.11;
tc.s = "Hello World!";
tc.t = TIM::current_clock();
tc.u = 42;

create object instance tc2 of TC2;
tc2.times_around = 0;
create object instance tc3 of TC3;
create object instance tc3s of TC3S;

relate tc to tc2 across R1;
relate tc to tc3 across R2;
relate tc3 to tc3s across R3;

create object instance tc5 of TC5;

//////////////////////////////
// Attribute Assign
//////////////////////////////

create object instance tc4 of TC4;
create object instance tc_2 of TC;
create object instance tc_3 of TC;
create object instance tc_4 of TC;
create object instance tc_5 of TC;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
tc_2.b = ::bool1( date1: ::date1( evt1:tc.e ) ) and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tc_2.tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: tc.real3( str3:tc.s ) ) );
tc_2.i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
tc_2.r = ::real1(str1: EE::str2(time2:tc.t)          +    tc.str3( time3: TC::time4( id4:tc.ID ) ) );
tc_2.s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
tc_2.en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
tc_2.u = ::udt1(bool1: tc.bool3(date3:tc.d)    and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
tc_3.b = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tc_3.tr =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
tc_3.i =  REE::int5(real5: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
tc_3.r =  REE::real5(str5:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
tc_3.s =  EE::str2(time2: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
tc_3.en = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
tc_3.u = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
tc_4.b = tc.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tc_4.tr =  tc.timer3(int3:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
tc_4.i =  tc4.int6(real6: ::real1(str1:tc.s)            +  EE::real2( str2: tc4.str6( time6:tc.t ) ) );
tc_4.r =  tc4.real6(str6: EE::str2(time2:tc.t)        +   tc4.str6( time6: TC::time4( id4:tc.ID ) ) );
tc_4.s =  tc.str3(time3: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
tc_4.en = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
tc_4.u = tc.udt3(bool3: tc5.bool8(date8:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
tc_5.b = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tc_5.tr = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
tc_5.i = TC4::int7(real7: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
tc_5.r = TC4::real7(str7: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
tc_5.s = TC::str4(time4:tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
tc_5.en = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
tc_5.u = TC::udt4(bool4: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( tc_2.b and tc_3.b and tc_4.b and tc_5.b )
  LOG::LogSuccess( message:"Init State - Boolean" );
else
  LOG::LogFailure( message:"Init State - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:tc_2.b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:tc_3.b );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:tc_4.b );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:tc_5.b );
end if;

if ( ( tc_2.tr ==  tc_3.tr ) and (  tc_4.tr ==  tc_5.tr ) )
  LOG::LogSuccess( message:"Init State - Timer" );
else
  LOG::LogFailure( message:"Init State - Timer");
end if;

if ( ( tc_2.i ==  tc_3.i ) and (  tc_4.i ==  tc_5.i ) )
  LOG::LogSuccess( message:"Init State - Integer" );
else
  LOG::LogFailure( message:"Init State - Integer");
  LOG::LogInt( message:"Function Invocation", int: tc_2.i );
  LOG::LogInt( message:"Bridge Invocation", int: tc_3.i );
  LOG::LogInt( message:"Instance Operation Invocation", int: tc_4.i );
  LOG::LogInt( message:"Class Operation Invocation", int: tc_5.i );
end if;

if ( (  tc_2.r ==  tc_3.r ) and (  tc_4.r ==  tc_5.r ) )
  LOG::LogSuccess( message:"Init State - Real" );
else
  LOG::LogFailure( message:"Init State - Real");
  LOG::LogReal( message:"Function Invocation", real: tc_2.r );
  LOG::LogReal( message:"Bridge Invocation", real: tc_3.r );
  LOG::LogReal( message:"Instance Operation Invocation", real: tc_4.r );
  LOG::LogReal( message:"Class Operation Invocation", real: tc_5.r );
end if;

if ( (  tc_2.s ==  tc_3.s ) and (  tc_4.s ==  tc_5.s ) )
  LOG::LogSuccess( message:"Init State - String" );
else
  LOG::LogFailure( message:"Init State - String");
  LOG::LogString( message:"Function Invocation", str: tc_2.s );
  LOG::LogString( message:"Bridge Invocation", str: tc_3.s );
  LOG::LogString( message:"Instance Operation Invocation", str: tc_4.s );
  LOG::LogString( message:"Class Operation Invocation", str: tc_5.s );
end if;

if ( (  tc_2.en ==  tc_3.en ) and (  tc_4.en ==  tc_5.en ) )
  LOG::LogSuccess( message:"Init State - Enumeration" );
else
  LOG::LogFailure( message:"Init State - Enumeration");
end if;

if ( (  tc_2.u ==  tc_3.u ) and (  tc_4.u ==  tc_5.u ) )
  LOG::LogSuccess( message:"Init State - User Data Type" );
else
  LOG::LogFailure( message:"Init State - User Data Type");
  LOG::LogInt( message:"Function Invocation", int: tc_2.u );
  LOG::LogInt( message:"Bridge Invocation", int: tc_3.u );
  LOG::LogInt( message:"Instance Operation Invocation", int: tc_4.u );
  LOG::LogInt( message:"Class Operation Invocation", int: tc_5.u );
end if;

delete object instance tc4;
delete object instance tc_2;
delete object instance tc_3;
delete object instance tc_4;
delete object instance tc_5;

generate DRV1 to DRV creator;',
	'');
INSERT INTO SM_TAH
	VALUES ("ccdedb5a-8cd6-41d6-8272-ac4b1f7e243b",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	"29844a20-f2f0-4379-a845-4a3f21c36620");
INSERT INTO SM_AH
	VALUES ("ccdedb5a-8cd6-41d6-8272-ac4b1f7e243b",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f");
INSERT INTO SM_ACT
	VALUES ("ccdedb5a-8cd6-41d6-8272-ac4b1f7e243b",
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	1,
	'',
	'');
INSERT INTO GD_MD
	VALUES ("ab057be0-ce59-4597-804b-65bd87aa0151",
	8,
	"444d64d4-fbc0-4aa6-92c6-1bb1e7e5157f",
	40,
	1,
	0,
	1,
	1,
	0,
	12,
	0,
	0,
	0,
	0,
	0,
	0,
	'',
	'G_ALL_nested_invoke::G_ALL_nested_invoke::Initialization::Instance State Machine');
INSERT INTO GD_GE
	VALUES ("10f2e4f3-b629-4bfd-8428-75aef12a04f4",
	"ab057be0-ce59-4597-804b-65bd87aa0151",
	"4cc6ccbc-5143-49ba-b28b-f416a9764b34",
	41,
	0,
	'G_ALL_nested_invoke::G_ALL_nested_invoke::Initialization::Instance State Machine::Initialize');
INSERT INTO GD_SHP
	VALUES ("10f2e4f3-b629-4bfd-8428-75aef12a04f4");
INSERT INTO GD_NCS
	VALUES ("10f2e4f3-b629-4bfd-8428-75aef12a04f4");
INSERT INTO DIM_ND
	VALUES (320.000000,
	144.000000,
	"10f2e4f3-b629-4bfd-8428-75aef12a04f4");
INSERT INTO DIM_GE
	VALUES (1856.000000,
	1376.000000,
	"10f2e4f3-b629-4bfd-8428-75aef12a04f4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("10f2e4f3-b629-4bfd-8428-75aef12a04f4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("c099f36c-0564-43b4-b050-b69e159e14cd",
	2016.000000,
	1376.000000,
	"10f2e4f3-b629-4bfd-8428-75aef12a04f4");
INSERT INTO GD_GE
	VALUES ("193ce205-aa12-4486-b596-bd697afe5c0d",
	"ab057be0-ce59-4597-804b-65bd87aa0151",
	"29844a20-f2f0-4379-a845-4a3f21c36620",
	49,
	0,
	'INIT1: Init');
INSERT INTO GD_CON
	VALUES ("193ce205-aa12-4486-b596-bd697afe5c0d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("59f32664-cd78-4c05-bfd3-f3d935411906",
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"59f32664-cd78-4c05-bfd3-f3d935411906");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"59f32664-cd78-4c05-bfd3-f3d935411906",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("59f32664-cd78-4c05-bfd3-f3d935411906",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("03ab9741-3307-4752-aa6c-7e9ee8d8793d",
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	3,
	-32.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (63.000000,
	24.000000,
	"03ab9741-3307-4752-aa6c-7e9ee8d8793d");
INSERT INTO DIM_GE
	VALUES (1915.000000,
	1321.000000,
	"03ab9741-3307-4752-aa6c-7e9ee8d8793d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("03ab9741-3307-4752-aa6c-7e9ee8d8793d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ae6603ab-8db6-442a-87a3-02c674f32616",
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ae6603ab-8db6-442a-87a3-02c674f32616");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ae6603ab-8db6-442a-87a3-02c674f32616",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ae6603ab-8db6-442a-87a3-02c674f32616",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("6b1819db-53c8-4074-ab5b-d783c269f23e",
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	"00000000-0000-0000-0000-000000000000",
	"14ddbfc6-c47d-41b7-9883-5d55c02cd3ff",
	"8494e379-4350-45f7-a3a9-fff3dedb640d");
INSERT INTO DIM_WAY
	VALUES ("14ddbfc6-c47d-41b7-9883-5d55c02cd3ff",
	2016.000000,
	1376.000000,
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("8494e379-4350-45f7-a3a9-fff3dedb640d",
	2016.000000,
	1296.000000,
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	"00000000-0000-0000-0000-000000000000",
	"14ddbfc6-c47d-41b7-9883-5d55c02cd3ff");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"193ce205-aa12-4486-b596-bd697afe5c0d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("193ce205-aa12-4486-b596-bd697afe5c0d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("c099f36c-0564-43b4-b050-b69e159e14cd",
	"00000000-0000-0000-0000-000000000000",
	"193ce205-aa12-4486-b596-bd697afe5c0d");
INSERT INTO DIM_DIA
	VALUES ("ab057be0-ce59-4597-804b-65bd87aa0151",
	'',
	1.000000,
	1615.000000,
	1101.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_OBJ_PROXY
	VALUES ("e9c823aa-df5d-40df-ad60-e963b7a7c7d2",
	'Initialization',
	1,
	'INIT',
	'This class is used to create any pre-existing instances necessary for the execution of the domain.  It also generates the creation event to the driver to begin the test(s).  

This class is not translated the same as other classes by the architecture.  Events other than the creation event inside of the initialization class are not allowed.  Any instances created or events generated from its state chart are processed before the dispatcher is started.',
	"00000000-0000-0000-0000-000000000000",
	'../Initialization.xtuml');
