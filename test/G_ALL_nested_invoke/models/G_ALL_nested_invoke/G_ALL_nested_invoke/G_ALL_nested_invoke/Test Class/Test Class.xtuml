-- BP 7.1 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'Test Class',
	3,
	'TC',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("9912172f-b111-4c76-891c-d3f85f8fe782",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'bool3',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select any tc from instances of TC;

if ( param.date3 == tc.d )
  LOG::LogSuccess( message: "Instance Operation bool3 - Date parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation bool3 - Date parameter is incorrect." );
end if;

return tc.b;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("2163b7ab-c751-4c13-abbb-49cb07f1802c",
	"9912172f-b111-4c76-891c-d3f85f8fe782",
	'date3',
	"ba5eda7a-def5-0000-0000-00000000000e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("db8950b1-25e1-476c-a686-09f7de8f866c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'date3',
	'',
	"ba5eda7a-def5-0000-0000-00000000000e",
	1,
	'select any tc from instances of TC;

if ( param.evt3 == tc.e )
  LOG::LogSuccess( message: "Instance Operation date3 - Event parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation date3 - Event parameter is incorrect." );
end if;

return tc.d;',
	1,
	'',
	"cdd40be1-a171-4653-8fc3-703aaeb42ffa");
INSERT INTO O_TPARM
	VALUES ("4c8b070b-ec2e-41fb-9d6c-6ede9113bacb",
	"db8950b1-25e1-476c-a686-09f7de8f866c",
	'evt3',
	"ba5eda7a-def5-0000-0000-00000000000a",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("ec4beaec-b038-4042-a3d2-69fee2fd4549",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'evt3',
	'',
	"ba5eda7a-def5-0000-0000-00000000000a",
	1,
	'select any tc from instances of TC;

if ( param.timer3 == tc.tr )
  LOG::LogSuccess( message: "Instance Operation evt3 - Timer parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation evt3 - Timer parameter is incorrect." );
end if;

return tc.e;',
	1,
	'',
	"351fe8ad-862f-41a8-80c8-faf0eb9d583d");
INSERT INTO O_TPARM
	VALUES ("0052d8c5-c187-46b8-b324-0a5241dd5228",
	"ec4beaec-b038-4042-a3d2-69fee2fd4549",
	'timer3',
	"ba5eda7a-def5-0000-0000-00000000000f",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("babbd06e-176e-4920-809c-cbb79d844598",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'timer3',
	'',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'select any tc from instances of TC;

if ( ( param.int3 == tc.i ) OR ( param.int3 == ( 2 * tc.i ) ) )
  LOG::LogSuccess( message: "Instance Operation timer3 - Integer parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation timer3 - Integer parameter is incorrect." );
end if;

return tc.tr;',
	1,
	'',
	"ab1532a6-9697-4823-8eea-ca9e16ef38b8");
INSERT INTO O_TPARM
	VALUES ("2252949f-eb15-43d1-b5a1-1c89cdea45ac",
	"babbd06e-176e-4920-809c-cbb79d844598",
	'int3',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("539e9c47-3206-4ef9-82de-86193dd98ec1",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'int3',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'select any tc from instances of TC;

if ( ( param.real3 == tc.r ) OR ( ( param.real3 == ( 2 * tc.r ) ) OR ( param.real3 == 0 ) ) )
  LOG::LogSuccess( message: "Instance Operation int3 - Real parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation int3 - Real parameter is incorrect." );
end if;

return tc.i;',
	1,
	'',
	"2516bf74-7fd4-4882-91f5-24c5d3e7e38f");
INSERT INTO O_TPARM
	VALUES ("547a33a5-3e1d-41d9-871f-b433b3a27ee6",
	"539e9c47-3206-4ef9-82de-86193dd98ec1",
	'real3',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("85af1ee1-e70c-49be-b386-434ddb4ba51c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'real3',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'select any tc from instances of TC;

if ( ( param.str3 == tc.s ) OR ( param.str3 == ( tc.s + tc.s ) ) )
  LOG::LogSuccess( message: "Instance Operation real3 - String parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation real3 - String parameter is incorrect." );
end if;

return tc.r;',
	1,
	'',
	"24bafee5-0334-4e52-8437-d7f6f91730b9");
INSERT INTO O_TPARM
	VALUES ("e3f1ceec-5792-4958-ab29-f544fb014cfd",
	"85af1ee1-e70c-49be-b386-434ddb4ba51c",
	'str3',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("f23cbb61-7653-43a9-8808-e99bc16c83cc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'str3',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'select any tc from instances of TC;

if ( param.time3 == tc.t )
  LOG::LogSuccess( message: "Instance Operation str3 - Timestamp parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation str3 - Timestamp parameter is incorrect." );
end if;

return tc.s;',
	1,
	'',
	"71fd8fbc-2ab3-461a-90fc-fc52244fae2c");
INSERT INTO O_TPARM
	VALUES ("89f63335-8c89-4f3b-9963-db8469a6400d",
	"f23cbb61-7653-43a9-8808-e99bc16c83cc",
	'time3',
	"ba5eda7a-def5-0000-0000-000000000010",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("d095dbe3-f5be-4a16-a3db-bd66698e4095",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'time3',
	'',
	"ba5eda7a-def5-0000-0000-000000000010",
	1,
	'select any tc from instances of TC;

if ( param.id3 == tc.ID )
  LOG::LogSuccess( message: "Instance Operation time3 - Unique ID parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation time3 - Unique ID parameter is incorrect." );
end if;

return tc.t;',
	1,
	'',
	"84fcb297-ec7f-4271-8aad-9fa89fb75b9c");
INSERT INTO O_TPARM
	VALUES ("6bf598e1-53a2-41c3-bc04-5c964edd5624",
	"d095dbe3-f5be-4a16-a3db-bd66698e4095",
	'id3',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("da389b32-6b6a-4e19-a107-2e005faf0c33",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'id3',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	1,
	'select any tc from instances of TC;

if ( param.enum3 == tc.en )
  LOG::LogSuccess( message: "Instance Operation id3 - Enumeration parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation id3 - Enumeration parameter is incorrect." );
end if;

return tc.ID;',
	1,
	'',
	"eed828a3-1376-4a87-bf91-c6c663f06a24");
INSERT INTO O_TPARM
	VALUES ("ae88ce63-5906-44dc-abf1-c1ec6fd813a8",
	"da389b32-6b6a-4e19-a107-2e005faf0c33",
	'enum3',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	"00000000-0000-0000-0000-000000000000",
	'enum',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("cdd40be1-a171-4653-8fc3-703aaeb42ffa",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'bool4',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'select any tc from instances of TC;

if ( param.date4 == tc.d )
  LOG::LogSuccess( message: "Class Operation bool4 - Date parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation bool4 - Date parameter is incorrect." );
end if;

return tc.b;',
	1,
	'',
	"9912172f-b111-4c76-891c-d3f85f8fe782");
INSERT INTO O_TPARM
	VALUES ("53159295-3f5d-4287-b97e-6e43d99e0049",
	"cdd40be1-a171-4653-8fc3-703aaeb42ffa",
	'date4',
	"ba5eda7a-def5-0000-0000-00000000000e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("588fb106-7692-4d2b-9aff-b4ea7685d421",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'date4',
	'',
	"ba5eda7a-def5-0000-0000-00000000000e",
	0,
	'select any tc from instances of TC;

if ( param.evt4 == tc.e )
  LOG::LogSuccess( message: "Class Operation date4 - Event parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation date4 - Event parameter is incorrect." );
end if;

return tc.d;',
	1,
	'',
	"db8950b1-25e1-476c-a686-09f7de8f866c");
INSERT INTO O_TPARM
	VALUES ("d44a3adc-ccb1-4070-bc95-2a09a248f5c6",
	"588fb106-7692-4d2b-9aff-b4ea7685d421",
	'evt4',
	"ba5eda7a-def5-0000-0000-00000000000a",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("eed828a3-1376-4a87-bf91-c6c663f06a24",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'evt4',
	'',
	"ba5eda7a-def5-0000-0000-00000000000a",
	0,
	'select any tc from instances of TC;

if ( param.timer4 == tc.tr )
  LOG::LogSuccess( message: "Class Operation evt4 - Timer parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation evt4 - Timer parameter is incorrect." );
end if;

return tc.e;',
	1,
	'',
	"ec4beaec-b038-4042-a3d2-69fee2fd4549");
INSERT INTO O_TPARM
	VALUES ("e6e6f7d2-b2e9-49fb-bab9-565cad8b571b",
	"eed828a3-1376-4a87-bf91-c6c663f06a24",
	'timer4',
	"ba5eda7a-def5-0000-0000-00000000000f",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("b4811369-964d-44f4-b0e6-83b6f1f43141",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'timer4',
	'',
	"ba5eda7a-def5-0000-0000-00000000000f",
	0,
	'select any tc from instances of TC;

if ( ( param.int4 == tc.i ) OR ( ( param.int4 == ( 2 * tc.i ) ) OR ( param.int4 == 0 ) ) )
  LOG::LogSuccess( message: "Instance Operation timer4 - Integer parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation timer4 - Integer parameter is incorrect." );
end if;

return tc.tr;',
	1,
	'',
	"babbd06e-176e-4920-809c-cbb79d844598");
INSERT INTO O_TPARM
	VALUES ("98b38d71-bfb0-4908-b54b-412be2613193",
	"b4811369-964d-44f4-b0e6-83b6f1f43141",
	'int4',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("9523fc89-84e9-4964-aeb4-f0737981277a",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'int4',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'select any tc from instances of TC;

if ( ( param.real4 == tc.r ) OR ( param.real4 == ( 2 * tc.r ) ) )
  LOG::LogSuccess( message: "Class Operation int4 - Real parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation int4 - Real parameter is incorrect." );
end if;

return tc.i;',
	1,
	'',
	"539e9c47-3206-4ef9-82de-86193dd98ec1");
INSERT INTO O_TPARM
	VALUES ("85a24207-839d-4259-b7cf-fdcc3fab2a06",
	"9523fc89-84e9-4964-aeb4-f0737981277a",
	'real4',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("23ac3814-5e29-4f30-947f-d0a725d3f672",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'real4',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'select any tc from instances of TC;

if ( ( param.str4 == tc.s ) OR ( param.str4 == ( tc.s + tc.s ) ) )
  LOG::LogSuccess( message: "Class Operation real4 - String parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation real4 - String parameter is incorrect." );
end if;

return tc.r;',
	1,
	'',
	"85af1ee1-e70c-49be-b386-434ddb4ba51c");
INSERT INTO O_TPARM
	VALUES ("4cc67f86-d644-4c9c-bfe7-0184866c3223",
	"23ac3814-5e29-4f30-947f-d0a725d3f672",
	'str4',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("84fcb297-ec7f-4271-8aad-9fa89fb75b9c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'str4',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'select any tc from instances of TC;

if ( param.time4 == tc.t )
  LOG::LogSuccess( message: "Class Operation str4 - Timestamp parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation str4 - Timestamp parameter is incorrect." );
end if;

return tc.s;',
	1,
	'',
	"f23cbb61-7653-43a9-8808-e99bc16c83cc");
INSERT INTO O_TPARM
	VALUES ("0ad36d97-094b-47a1-81dc-0826f1c06614",
	"84fcb297-ec7f-4271-8aad-9fa89fb75b9c",
	'time4',
	"ba5eda7a-def5-0000-0000-000000000010",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("ab1532a6-9697-4823-8eea-ca9e16ef38b8",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'time4',
	'',
	"ba5eda7a-def5-0000-0000-000000000010",
	0,
	'select any tc from instances of TC;

if ( param.id4 == tc.ID )
  LOG::LogSuccess( message: "Class Operation time4 - Unique ID parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation time4 - Unique ID parameter is incorrect." );
end if;

return tc.t;',
	1,
	'',
	"d095dbe3-f5be-4a16-a3db-bd66698e4095");
INSERT INTO O_TPARM
	VALUES ("a48f42ae-dc0b-473e-82ce-3b217322f282",
	"ab1532a6-9697-4823-8eea-ca9e16ef38b8",
	'id4',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("2516bf74-7fd4-4882-91f5-24c5d3e7e38f",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'id4',
	'',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'select any tc from instances of TC;

if ( param.enum4 == tc.en )
  LOG::LogSuccess( message: "Class Operation id4 - Enumeration parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation id4 - Enumeration parameter is incorrect." );
end if;

return tc.ID;',
	1,
	'',
	"da389b32-6b6a-4e19-a107-2e005faf0c33");
INSERT INTO O_TPARM
	VALUES ("dd3bea32-ba1b-4482-a629-753d0faed4ff",
	"2516bf74-7fd4-4882-91f5-24c5d3e7e38f",
	'enum4',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("ff1db4d1-2fd3-405c-8de9-db7b00062dca",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'enum3',
	'',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'select any tc from instances of TC;

if ( ( param.udt3 == tc.u ) OR ( param.udt3 == ( 2 * tc.u ) ) )
  LOG::LogSuccess( message: "Instance Operation enum3 - User Data Type parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation enum3 - User Data Type parameter is incorrect." );
end if;

return tc.en;',
	1,
	'',
	"588fb106-7692-4d2b-9aff-b4ea7685d421");
INSERT INTO O_TPARM
	VALUES ("d3ec4f85-56c9-49de-9f73-2c5ab724c95e",
	"ff1db4d1-2fd3-405c-8de9-db7b00062dca",
	'udt3',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("42a729d2-3361-4a77-8752-dce5f2fd5786",
	"00000000-0000-0000-0000-000000000000",
	'udt',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("351fe8ad-862f-41a8-80c8-faf0eb9d583d",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'enum4',
	'',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	0,
	'select any tc from instances of TC;

if ( ( param.udt4 == tc.u ) OR ( param.udt4 == ( 2 * tc.u ) ) )
  LOG::LogSuccess( message: "Class Operation enum4 - User Data Type parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation enum4 - User Data Type parameter is incorrect." );
end if;

return tc.en;',
	1,
	'',
	"ff1db4d1-2fd3-405c-8de9-db7b00062dca");
INSERT INTO O_TPARM
	VALUES ("41522311-8a9f-497d-b9b5-82d5bf732a33",
	"351fe8ad-862f-41a8-80c8-faf0eb9d583d",
	'udt4',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("df38de02-bb9e-4ada-a8b7-903850d40bcc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'udt3',
	'',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'select any tc from instances of TC;

if ( param.bool3 == tc.b )
  LOG::LogSuccess( message: "Instance Operation udt3 - Boolean parameter is correct." );
else
  LOG::LogFailure( message: "Instance Operation udt3 - Boolean parameter is incorrect." );
end if;

return tc.u;',
	1,
	'',
	"b4811369-964d-44f4-b0e6-83b6f1f43141");
INSERT INTO O_TPARM
	VALUES ("7dc740cf-53de-4db2-bf22-ed6d54713e5e",
	"df38de02-bb9e-4ada-a8b7-903850d40bcc",
	'bool3',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("1d98aceb-239d-47b6-8175-ccf1f115dfc3",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'udt4',
	'',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	0,
	'select any tc from instances of TC;

if ( param.bool4 == tc.b )
  LOG::LogSuccess( message: "Class Operation udt4 - Boolean parameter is correct." );
else
  LOG::LogFailure( message: "Class Operation udt4 - Boolean parameter is incorrect." );
end if;

return tc.u;',
	1,
	'',
	"df38de02-bb9e-4ada-a8b7-903850d40bcc");
INSERT INTO O_TPARM
	VALUES ("d4ca92f7-bf03-4506-bb1b-b01a95faba82",
	"1d98aceb-239d-47b6-8175-ccf1f115dfc3",
	'bool4',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("43e385ca-55bc-4386-a46e-20b43933e79b",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'single_invoke',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any tc from instances of TC;

////////////////////////////
// Functions
////////////////////////////
b = ::bool1(date1:tc.d);
d = ::date1(evt1:tc.e);
e = ::evt1(timer1:tc.tr);
tr = ::timer1(int1:tc.i);
i = ::int1(real1:tc.r);
r = ::real1(str1:tc.s);
s = ::str1(time1:tc.t);
t = ::time1(id1:tc.ID);
id = ::id1(enum1:tc.en);
en = ::enum1(udt1:tc.u);
u = ::udt1(bool1:tc.b);

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2:tc.d);
d2 = EE::date2(evt2:tc.e);
e2 =  EE::evt2(timer2:tc.tr);
tr2 =  EE::timer2(int2:tc.i);
i2 =  EE::int2(real2:tc.r);
r2 =  EE::real2(str2:tc.s);
s2 =  EE::str2(time2:tc.t);
t2 =  EE::time2(id2:tc.ID);
id2 =  EE::id2(enum2:tc.en);
en2 = EE::enum2(udt2:tc.u);
u2 = EE::udt2(bool2:tc.b);

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3:tc.d);
d3 =  tc.date3(evt3:tc.e);
e3 =  tc.evt3(timer3:tc.tr);
tr3 =  tc.timer3(int3:tc.i);
i3 =  tc.int3(real3:tc.r);
r3 =  tc.real3(str3:tc.s);
s3 =  tc.str3(time3:tc.t);
t3 =  tc.time3(id3:tc.ID);
id3 =  tc.id3(enum3:tc.en);
en3 = tc.enum3(udt3:tc.u);
u3 = tc.udt3(bool3:tc.b);

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4:tc.d);
d4 = TC::date4(evt4:tc.e);
e4 = TC::evt4(timer4:tc.tr);
tr4 = TC::timer4(int4:tc.i);
i4 = TC::int4(real4:tc.r);
r4 = TC::real4(str4:tc.s);
s4 = TC::str4(time4:tc.t);
t4 = TC::time4(id4:tc.ID);
id4 = TC::id4(enum4:tc.en);
en4 = TC::enum4(udt4:tc.u);
u4 = TC::udt4(bool4:tc.b);

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Single Invocation - Boolean" );
else
  LOG::LogFailure( message:"Single Invocation - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( d == d2 ) and ( d3 == d4 ) )
  LOG::LogSuccess( message:"Single Invocation - Date" );
else
  LOG::LogFailure( message:"Single Invocation - Date");
  LOG::LogDate( message:"Function Invocation", date:d );
  LOG::LogDate( message:"Bridge Invocation", date:d2 );
  LOG::LogDate( message:"Instance Operation Invocation", date:d3 );
  LOG::LogDate( message:"Class Operation Invocation", date:d4 );
end if;

if ( ( e == e2 ) and ( e3 == e4 ) )
  LOG::LogSuccess( message:"Single Invocation - Event" );
else
  LOG::LogFailure( message:"Single Invocation - Event");
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Single Invocation - Timer" );
else
  LOG::LogFailure( message:"Single Invocation - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Single Invocation - Integer" );
else
  LOG::LogFailure( message:"Single Invocation - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Single Invocation - Real" );
else
  LOG::LogFailure( message:"Single Invocation - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Single Invocation - String" );
else
  LOG::LogFailure( message:"Single Invocation - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( t== t2 ) and ( t3 == t4 ) )
  LOG::LogSuccess( message:"Single Invocation - Timestamp" );
else
  LOG::LogFailure( message:"Single Invocation - Timestamp");
  LOG::LogTime( message:"Function Invocation", time:t );
  LOG::LogTime( message:"Bridge Invocation", time:t2 );
  LOG::LogTime( message:"Instance Operation Invocation", time:t3 );
  LOG::LogTime( message:"Class Operation Invocation", time:t4 );
end if;

if ( ( id == id2 ) and ( id3 == id4 ) )
  LOG::LogSuccess( message:"Single Invocation - Unique ID" );
else
  LOG::LogFailure( message:"Single Invocation - Unique ID");
  LOG::LogUniqueId( message:"Function Invocation", uid:id );
  LOG::LogUniqueId( message:"Bridge Invocation", uid:id2 );
  LOG::LogUniqueId( message:"Instance Operation Invocation", uid:id3 );
  LOG::LogUniqueId( message:"Class Operation Invocation", uid:id4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Single Invocation - Enumeration" );
else
  LOG::LogFailure( message:"Single Invocation - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Single Invocation - User Data Type" );
else
  LOG::LogFailure( message:"Single Invocation - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"9fd3fb81-9d61-4d62-97bb-978499ebde6a");
INSERT INTO O_TFR
	VALUES ("71fd8fbc-2ab3-461a-90fc-fc52244fae2c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'single_invoke2',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'select any tc from instances of TC;

////////////////////////////
// Functions
////////////////////////////
b = ::bool1(date1:tc.d);
d = ::date1(evt1:tc.e);
e = ::evt1(timer1:tc.tr);
tr = ::timer1(int1:tc.i);
i = ::int1(real1:tc.r);
r = ::real1(str1:tc.s);
s = ::str1(time1:tc.t);
t = ::time1(id1:tc.ID);
id = ::id1(enum1:tc.en);
en = ::enum1(udt1:tc.u);
u = ::udt1(bool1:tc.b);

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2:tc.d);
d2 = EE::date2(evt2:tc.e);
e2 =  EE::evt2(timer2:tc.tr);
tr2 =  EE::timer2(int2:tc.i);
i2 =  EE::int2(real2:tc.r);
r2 =  EE::real2(str2:tc.s);
s2 =  EE::str2(time2:tc.t);
t2 =  EE::time2(id2:tc.ID);
id2 =  EE::id2(enum2:tc.en);
en2 = EE::enum2(udt2:tc.u);
u2 = EE::udt2(bool2:tc.b);

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3:tc.d);
d3 =  tc.date3(evt3:tc.e);
e3 =  tc.evt3(timer3:tc.tr);
tr3 =  tc.timer3(int3:tc.i);
i3 =  tc.int3(real3:tc.r);
r3 =  tc.real3(str3:tc.s);
s3 =  tc.str3(time3:tc.t);
t3 =  tc.time3(id3:tc.ID);
id3 =  tc.id3(enum3:tc.en);
en3 = tc.enum3(udt3:tc.u);
u3 = tc.udt3(bool3:tc.b);

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4:tc.d);
d4 = TC::date4(evt4:tc.e);
e4 = TC::evt4(timer4:tc.tr);
tr4 = TC::timer4(int4:tc.i);
i4 = TC::int4(real4:tc.r);
r4 = TC::real4(str4:tc.s);
s4 = TC::str4(time4:tc.t);
t4 = TC::time4(id4:tc.ID);
id4 = TC::id4(enum4:tc.en);
en4 = TC::enum4(udt4:tc.u);
u4 = TC::udt4(bool4:tc.b);

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Single Invocation - Boolean" );
else
  LOG::LogFailure( message:"Single Invocation - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( d == d2 ) and ( d3 == d4 ) )
  LOG::LogSuccess( message:"Single Invocation - Date" );
else
  LOG::LogFailure( message:"Single Invocation - Date");
  LOG::LogDate( message:"Function Invocation", date:d );
  LOG::LogDate( message:"Bridge Invocation", date:d2 );
  LOG::LogDate( message:"Instance Operation Invocation", date:d3 );
  LOG::LogDate( message:"Class Operation Invocation", date:d4 );
end if;

if ( ( e == e2 ) and ( e3 == e4 ) )
  LOG::LogSuccess( message:"Single Invocation - Event" );
else
  LOG::LogFailure( message:"Single Invocation - Event");
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Single Invocation - Timer" );
else
  LOG::LogFailure( message:"Single Invocation - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Single Invocation - Integer" );
else
  LOG::LogFailure( message:"Single Invocation - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Single Invocation - Real" );
else
  LOG::LogFailure( message:"Single Invocation - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Single Invocation - String" );
else
  LOG::LogFailure( message:"Single Invocation - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( t== t2 ) and ( t3 == t4 ) )
  LOG::LogSuccess( message:"Single Invocation - Timestamp" );
else
  LOG::LogFailure( message:"Single Invocation - Timestamp");
  LOG::LogTime( message:"Function Invocation", time:t );
  LOG::LogTime( message:"Bridge Invocation", time:t2 );
  LOG::LogTime( message:"Instance Operation Invocation", time:t3 );
  LOG::LogTime( message:"Class Operation Invocation", time:t4 );
end if;

if ( ( id == id2 ) and ( id3 == id4 ) )
  LOG::LogSuccess( message:"Single Invocation - Unique ID" );
else
  LOG::LogFailure( message:"Single Invocation - Unique ID");
  LOG::LogUniqueId( message:"Function Invocation", uid:id );
  LOG::LogUniqueId( message:"Bridge Invocation", uid:id2 );
  LOG::LogUniqueId( message:"Instance Operation Invocation", uid:id3 );
  LOG::LogUniqueId( message:"Class Operation Invocation", uid:id4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Single Invocation - Enumeration" );
else
  LOG::LogFailure( message:"Single Invocation - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Single Invocation - User Data Type" );
else
  LOG::LogFailure( message:"Single Invocation - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"43e385ca-55bc-4386-a46e-20b43933e79b");
INSERT INTO O_TFR
	VALUES ("8f31d086-fcce-4dd5-b898-1a9955500732",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'multiple_invoke',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any tc from instances of TC;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
b = ::bool1(date1: ::date1(evt1:tc.e));
d = ::date1(evt1:EE::evt2(timer2:tc.tr));
e = ::evt1(timer1: tc.timer3(int3:tc.i));
tr = ::timer1(int1:TC::int4(real4:tc.r));
i = ::int1(real1: ::real1(str1:tc.s));
r = ::real1(str1:  EE::str2(time2:tc.t));
s = ::str1(time1: tc.time3(id3:tc.ID));
t = ::time1(id1: TC::id4(enum4:tc.en));
id = ::id1(enum1: ::enum1(udt1:tc.u));
en = ::enum1(udt1:EE::udt2(bool2:tc.b));
u = ::udt1(bool1: tc.bool3(date3:tc.d));

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2: ::date1(evt1:tc.e));
d2 = EE::date2(evt2:  EE::evt2(timer2:tc.tr));
e2 =  EE::evt2(timer2: tc.timer3(int3:tc.i));
tr2 =  EE::timer2(int2: TC::int4(real4:tc.r));
i2 =  EE::int2(real2: ::real1(str1:tc.s));
r2 =  EE::real2(str2:  EE::str2(time2:tc.t));
s2 =  EE::str2(time2: tc.time3(id3:tc.ID));
t2 =  EE::time2(id2: TC::id4(enum4:tc.en));
id2 =  EE::id2(enum2: ::enum1(udt1:tc.u));
en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b));
u2 = EE::udt2(bool2: tc.bool3(date3:tc.d));

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3: ::date1(evt1:tc.e));
d3 =  tc.date3(evt3: EE::evt2(timer2:tc.tr));
e3 =  tc.evt3(timer3:  tc.timer3(int3:tc.i));
tr3 =  tc.timer3(int3:TC::int4(real4:tc.r));
i3 =  tc.int3(real3: ::real1(str1:tc.s));
r3 =  tc.real3(str3: EE::str2(time2:tc.t));
s3 =  tc.str3(time3: tc.time3(id3:tc.ID));
t3 =  tc.time3(id3: TC::id4(enum4:tc.en));
id3 =  tc.id3(enum3: ::enum1(udt1:tc.u));
en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b));
u3 = tc.udt3(bool3: tc.bool3(date3:tc.d));

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4: ::date1(evt1:tc.e));
d4 = TC::date4(evt4: EE::evt2(timer2:tc.tr));
e4 = TC::evt4(timer4: tc.timer3(int3:tc.i));
tr4 = TC::timer4(int4:TC::int4(real4:tc.r));
i4 = TC::int4(real4: ::real1(str1:tc.s));
r4 = TC::real4(str4: EE::str2(time2:tc.t));
s4 = TC::str4(time4:tc.time3(id3:tc.ID));
t4 = TC::time4(id4:TC::id4(enum4:tc.en));
id4 = TC::id4(enum4: ::enum1(udt1:tc.u));
en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b));
u4 = TC::udt4(bool4: tc.bool3(date3:tc.d));

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Multiple Invocation - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( d == d2 ) and ( d3 == d4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Date" );
else
  LOG::LogFailure( message:"Multiple Invocation - Date");
  LOG::LogDate( message:"Function Invocation", date:d );
  LOG::LogDate( message:"Bridge Invocation", date:d2 );
  LOG::LogDate( message:"Instance Operation Invocation", date:d3 );
  LOG::LogDate( message:"Class Operation Invocation", date:d4 );
end if;

if ( ( e == e2 ) and ( e3 == e4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Event" );
else
  LOG::LogFailure( message:"Multiple Invocation - Event");
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Timer" );
else
  LOG::LogFailure( message:"Multiple Invocation - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - String" );
else
  LOG::LogFailure( message:"Multiple Invocation - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( t== t2 ) and ( t3 == t4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Timestamp" );
else
  LOG::LogFailure( message:"Multiple Invocation - Timestamp");
  LOG::LogTime( message:"Function Invocation", time:t );
  LOG::LogTime( message:"Bridge Invocation", time:t2 );
  LOG::LogTime( message:"Instance Operation Invocation", time:t3 );
  LOG::LogTime( message:"Class Operation Invocation", time:t4 );
end if;

if ( ( id == id2 ) and ( id3 == id4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Unique ID" );
else
  LOG::LogFailure( message:"Multiple Invocation - Unique ID");
  LOG::LogUniqueId( message:"Function Invocation", uid:id );
  LOG::LogUniqueId( message:"Bridge Invocation", uid:id2 );
  LOG::LogUniqueId( message:"Instance Operation Invocation", uid:id3 );
  LOG::LogUniqueId( message:"Class Operation Invocation", uid:id4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"c44f892d-986d-4975-8ea9-41efe726f3bf");
INSERT INTO O_TFR
	VALUES ("e3e27fea-0675-4fa6-8fcd-cbfd644edf34",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'multiple_invoke2',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'select any tc from instances of TC;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
b = ::bool1(date1: ::date1(evt1:tc.e));
d = ::date1(evt1:EE::evt2(timer2:tc.tr));
e = ::evt1(timer1: tc.timer3(int3:tc.i));
tr = ::timer1(int1:TC::int4(real4:tc.r));
i = ::int1(real1: ::real1(str1:tc.s));
r = ::real1(str1:  EE::str2(time2:tc.t));
s = ::str1(time1: tc.time3(id3:tc.ID));
t = ::time1(id1: TC::id4(enum4:tc.en));
id = ::id1(enum1: ::enum1(udt1:tc.u));
en = ::enum1(udt1:EE::udt2(bool2:tc.b));
u = ::udt1(bool1: tc.bool3(date3:tc.d));

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2: ::date1(evt1:tc.e));
d2 = EE::date2(evt2:  EE::evt2(timer2:tc.tr));
e2 =  EE::evt2(timer2: tc.timer3(int3:tc.i));
tr2 =  EE::timer2(int2: TC::int4(real4:tc.r));
i2 =  EE::int2(real2: ::real1(str1:tc.s));
r2 =  EE::real2(str2:  EE::str2(time2:tc.t));
s2 =  EE::str2(time2: tc.time3(id3:tc.ID));
t2 =  EE::time2(id2: TC::id4(enum4:tc.en));
id2 =  EE::id2(enum2: ::enum1(udt1:tc.u));
en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b));
u2 = EE::udt2(bool2: tc.bool3(date3:tc.d));

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3: ::date1(evt1:tc.e));
d3 =  tc.date3(evt3: EE::evt2(timer2:tc.tr));
e3 =  tc.evt3(timer3:  tc.timer3(int3:tc.i));
tr3 =  tc.timer3(int3:TC::int4(real4:tc.r));
i3 =  tc.int3(real3: ::real1(str1:tc.s));
r3 =  tc.real3(str3: EE::str2(time2:tc.t));
s3 =  tc.str3(time3: tc.time3(id3:tc.ID));
t3 =  tc.time3(id3: TC::id4(enum4:tc.en));
id3 =  tc.id3(enum3: ::enum1(udt1:tc.u));
en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b));
u3 = tc.udt3(bool3: tc.bool3(date3:tc.d));

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4: ::date1(evt1:tc.e));
d4 = TC::date4(evt4: EE::evt2(timer2:tc.tr));
e4 = TC::evt4(timer4: tc.timer3(int3:tc.i));
tr4 = TC::timer4(int4:TC::int4(real4:tc.r));
i4 = TC::int4(real4: ::real1(str1:tc.s));
r4 = TC::real4(str4: EE::str2(time2:tc.t));
s4 = TC::str4(time4:tc.time3(id3:tc.ID));
t4 = TC::time4(id4:TC::id4(enum4:tc.en));
id4 = TC::id4(enum4: ::enum1(udt1:tc.u));
en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b));
u4 = TC::udt4(bool4: tc.bool3(date3:tc.d));

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Multiple Invocation - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( d == d2 ) and ( d3 == d4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Date" );
else
  LOG::LogFailure( message:"Multiple Invocation - Date");
  LOG::LogDate( message:"Function Invocation", date:d );
  LOG::LogDate( message:"Bridge Invocation", date:d2 );
  LOG::LogDate( message:"Instance Operation Invocation", date:d3 );
  LOG::LogDate( message:"Class Operation Invocation", date:d4 );
end if;

if ( ( e == e2 ) and ( e3 == e4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Event" );
else
  LOG::LogFailure( message:"Multiple Invocation - Event");
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Timer" );
else
  LOG::LogFailure( message:"Multiple Invocation - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - String" );
else
  LOG::LogFailure( message:"Multiple Invocation - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( t== t2 ) and ( t3 == t4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Timestamp" );
else
  LOG::LogFailure( message:"Multiple Invocation - Timestamp");
  LOG::LogTime( message:"Function Invocation", time:t );
  LOG::LogTime( message:"Bridge Invocation", time:t2 );
  LOG::LogTime( message:"Instance Operation Invocation", time:t3 );
  LOG::LogTime( message:"Class Operation Invocation", time:t4 );
end if;

if ( ( id == id2 ) and ( id3 == id4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Unique ID" );
else
  LOG::LogFailure( message:"Multiple Invocation - Unique ID");
  LOG::LogUniqueId( message:"Function Invocation", uid:id );
  LOG::LogUniqueId( message:"Bridge Invocation", uid:id2 );
  LOG::LogUniqueId( message:"Instance Operation Invocation", uid:id3 );
  LOG::LogUniqueId( message:"Class Operation Invocation", uid:id4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Multiple Invocation - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"8f31d086-fcce-4dd5-b898-1a9955500732");
INSERT INTO O_TFR
	VALUES ("ad234194-1047-4b10-8d58-b8b62b246418",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'multiple_invoke_w_expressions',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any tc from instances of TC;

select any tc4 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
b = ::bool1( date1: ::date1( evt1:tc.e ) ) and REE::bool5(date5: tc.date3( evt3:tc.e ) );
tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: self.real3( str3:tc.s ) ) );
i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
r = ::real1(str1: EE::str2(time2:tc.t)          +    self.str3( time3: TC::time4( id4:tc.ID ) ) );
s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u = ::udt1(bool1: self.bool3(date3:tc.d)    and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr2 =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i2 =  EE::int2(real2: ::real1(str1:tc.s)            +  REE::real5( str5: self.str3( time3:tc.t ) ) );
r2 =  EE::real2(str2:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s2 =  EE::str2(time2: tc.time3(id3:tc.ID))       +  self.str3( time3: TC::time4( id4: tc.ID ) );
en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  self.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u2 = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
b3 = self.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr3 =  tc.timer3(int3:TC4::int7(real7:tc.r)       +   ::int1( real1: self.real3( str3:tc.s ) ) );
i3 =  self.int3(real3: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r3 =  tc.real3(str3: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s3 =  tc.str3(time3: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u3 = self.udt3(bool3: self.bool3(date3:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: self.date3( evt3:tc.e ) );
tr4 = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i4 = TC::int4(real4: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r4 = TC::real4(str4: REE::str5(time5:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s4 = TC::str4(time4:self.time3(id3:tc.ID))       +  tc4.str6( time6: TC::time4( id4: tc.ID ) );
en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u4 = TC::udt4(bool4: self.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Timer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - String" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"e3e27fea-0675-4fa6-8fcd-cbfd644edf34");
INSERT INTO O_TFR
	VALUES ("24bafee5-0334-4e52-8437-d7f6f91730b9",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'multiple_invoke_w_expressions2',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'select any tc from instances of TC;


select any tc4 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
b = ::bool1( date1: ::date1( evt1:tc.e ) ) and REE::bool5(date5: tc.date3( evt3:tc.e ) );
tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: tc.real3( str3:tc.s ) ) );
i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
r = ::real1(str1: EE::str2(time2:tc.t)          +    tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u = ::udt1(bool1: tc.bool3(date3:tc.d)    and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr2 =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i2 =  EE::int2(real2: ::real1(str1:tc.s)            +  REE::real5( str5: tc.str3( time3:tc.t ) ) );
r2 =  EE::real2(str2:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s2 =  EE::str2(time2: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u2 = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr3 =  tc.timer3(int3:TC4::int7(real7:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i3 =  tc.int3(real3: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r3 =  tc.real3(str3: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s3 =  tc.str3(time3: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u3 = tc.udt3(bool3: tc.bool3(date3:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr4 = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i4 = TC::int4(real4: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r4 = TC::real4(str4: REE::str5(time5:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s4 = TC::str4(time4:tc.time3(id3:tc.ID))       +  tc4.str6( time6: TC::time4( id4: tc.ID ) );
en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u4 = TC::udt4(bool4: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Timer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - String" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;',
	1,
	'',
	"ad234194-1047-4b10-8d58-b8b62b246418");
INSERT INTO O_TFR
	VALUES ("2bc141d5-cce0-4367-9ec9-5a0f7e667cc3",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'ret3',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select any tc from instances of TC;

return tc.bool3( date3: EE::date2( evt2: tc.evt3( timer3: TC::timer4( int4: ::int1( real1: tc.r + EE::real2( str2: tc.s ) ) + tc.int3( real3: TC::real4( str4: tc.s ) ) ) ) ) ) and ( ( EE::bool2( date2:tc.d ) or ( tc.bool3( date3:tc.d ) ) and TC::bool4( date4:tc.d ) ) );',
	1,
	'',
	"b11c72a5-e27a-4eed-ae27-a7eec755073e");
INSERT INTO O_TFR
	VALUES ("52c290e1-f7e8-4ef2-8526-fbe6d18acdaf",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'ret4',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'select any tc from instances of TC;

return TC::bool4( date4: EE::date2( evt2: tc.evt3( timer3: TC::timer4( int4: ::int1( real1: tc.r + EE::real2( str2: tc.s ) ) + tc.int3( real3: TC::real4( str4: tc.s ) ) ) ) ) ) and ( ( EE::bool2( date2:tc.d ) or ( tc.bool3( date3:tc.d ) ) and TC::bool4( date4:tc.d ) ) );',
	1,
	'',
	"2bc141d5-cce0-4367-9ec9-5a0f7e667cc3");
INSERT INTO O_TFR
	VALUES ("38786473-4e45-471b-b107-c5c39fd2dd86",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'mod_params3',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'//////////////////////////////
// Param Assign
//////////////////////////////

select any tc from instances of TC;
select any tc_4 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
param.b = ::bool1( date1: ::date1( evt1:tc.e ) ) and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r = ::real1(str1: EE::str2(time2:tc.t)          +    tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u = ::udt1(bool1: tc.bool3(date3:tc.d)    and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
param.b2 = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr2 =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i2 =  REE::int5(real5: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r2 =  REE::real5(str5:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s2 =  EE::str2(time2: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u2 = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
param.b3 = tc.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr3 =  tc.timer3(int3:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i3 =  tc.int3(real3: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r3 =  tc_4.real6(str6: EE::str2(time2:tc.t)        +   tc_4.str6( time6: TC::time4( id4:tc.ID ) ) );
param.s3 =  tc_4.str6(time6: TC::time4(id4:tc.ID))       +  tc_4.str6( time6: TC::time4( id4: tc.ID ) );
param.en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u3 = tc.udt3(bool3: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
param.b4 = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr4 = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i4 = TC4::int7(real7: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r4 = TC::real4(str4: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s4 = TC4::str7(time7:tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u4 = TC::udt4(bool4: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( param.b and param.b2 and param.b3 and param.b4 )
  LOG::LogSuccess( message:"Assign Param - Boolean" );
else
  LOG::LogFailure( message:"Assign Param - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:param.b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:param.b );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:param.b );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:param.b );
end if;

if ( ( param.tr ==  param.tr2 ) and (  param.tr3 ==  param.tr4 ) )
  LOG::LogSuccess( message:"Assign Param - Timer" );
else
  LOG::LogFailure( message:"Assign Param - Timer");
end if;

if ( ( param.i ==  param.i2 ) and (  param.i3 ==  param.i4 ) )
  LOG::LogSuccess( message:"Assign Param - Integer" );
else
  LOG::LogFailure( message:"Assign Param - Integer");
  LOG::LogInt( message:"Function Invocation", int: param.i );
  LOG::LogInt( message:"Bridge Invocation", int: param.i );
  LOG::LogInt( message:"Instance Operation Invocation", int: param.i );
  LOG::LogInt( message:"Class Operation Invocation", int: param.i );
end if;

if ( (  param.r ==  param.r2 ) and (  param.r3 ==  param.r4 ) )
  LOG::LogSuccess( message:"Assign Param - Real" );
else
  LOG::LogFailure( message:"Assign Param - Real");
  LOG::LogReal( message:"Function Invocation", real: param.r );
  LOG::LogReal( message:"Bridge Invocation", real: param.r );
  LOG::LogReal( message:"Instance Operation Invocation", real: param.r );
  LOG::LogReal( message:"Class Operation Invocation", real: param.r );
end if;

if ( (  param.s ==  param.s2 ) and (  param.s3 ==  param.s4 ) )
  LOG::LogSuccess( message:"Assign Param - String" );
else
  LOG::LogFailure( message:"Assign Param - String");
  LOG::LogString( message:"Function Invocation", str: param.s );
  LOG::LogString( message:"Bridge Invocation", str: param.s );
  LOG::LogString( message:"Instance Operation Invocation", str: param.s );
  LOG::LogString( message:"Class Operation Invocation", str: param.s );
end if;

if ( (  param.en ==  param.en2 ) and (  param.en3 ==  param.en4 ) )
  LOG::LogSuccess( message:"Assign Param - Enumeration" );
else
  LOG::LogFailure( message:"Assign Param - Enumeration");
end if;

if ( (  param.u ==  param.u2 ) and (  param.u3 ==  param.u4 ) )
  LOG::LogSuccess( message:"Assign Param - User Data Type" );
else
  LOG::LogFailure( message:"Assign Param - User Data Type");
  LOG::LogInt( message:"Function Invocation", int: param.u );
  LOG::LogInt( message:"Bridge Invocation", int: param.u );
  LOG::LogInt( message:"Instance Operation Invocation", int: param.u );
  LOG::LogInt( message:"Class Operation Invocation", int: param.u );
end if;',
	1,
	'',
	"9523fc89-84e9-4964-aeb4-f0737981277a");
INSERT INTO O_TPARM
	VALUES ("a2a358a9-5dce-479c-9709-d8797844f15d",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'b',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("075dd4d0-3898-4d46-b5af-23b84c5db6a2",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'tr',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"58d53473-d6ee-4458-8356-aad8701e2dc9",
	'');
INSERT INTO O_TPARM
	VALUES ("51b031eb-a500-4d7c-a2ea-ac68d770f101",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'i',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"0858eb9e-30a6-494a-83e5-b97a841db83a",
	'');
INSERT INTO O_TPARM
	VALUES ("27515412-9519-4bb0-b677-978680cd6465",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'r',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"572a476b-6213-449c-94f7-a98f6705ae29",
	'');
INSERT INTO O_TPARM
	VALUES ("4f1d3fe0-be73-49fe-93a2-af4ccea74d9c",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	's',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"0c2b886a-b558-4268-846c-a556e690705a",
	'');
INSERT INTO O_TPARM
	VALUES ("6f64400f-15a7-4658-8a5a-9962582ed4d7",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'en',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"b393d1e0-5009-4965-9eda-1a0e72c21cea",
	'');
INSERT INTO O_TPARM
	VALUES ("c7775bc8-6b98-4669-a948-e780963a97b8",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'u',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"f68fa01f-7e99-4de3-8960-f18fa457f56f",
	'');
INSERT INTO O_TPARM
	VALUES ("7a0e168a-bcdc-42b3-97fd-9ce1a95caca4",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'b2',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"a2a358a9-5dce-479c-9709-d8797844f15d",
	'');
INSERT INTO O_TPARM
	VALUES ("6bb130aa-6bf0-4108-815d-94bade88c92c",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'tr2',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"075dd4d0-3898-4d46-b5af-23b84c5db6a2",
	'');
INSERT INTO O_TPARM
	VALUES ("427a733a-7c3a-4021-b84c-76340fca74e3",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'i2',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"51b031eb-a500-4d7c-a2ea-ac68d770f101",
	'');
INSERT INTO O_TPARM
	VALUES ("8fdd65e9-3138-4cca-aea1-75db201b0cf6",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'r2',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"27515412-9519-4bb0-b677-978680cd6465",
	'');
INSERT INTO O_TPARM
	VALUES ("3427dcfd-4344-4909-81d8-84fd17001367",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	's2',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"4f1d3fe0-be73-49fe-93a2-af4ccea74d9c",
	'');
INSERT INTO O_TPARM
	VALUES ("6d22d26d-8eb9-43bf-9dee-69e330f9a6b5",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'en2',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"6f64400f-15a7-4658-8a5a-9962582ed4d7",
	'');
INSERT INTO O_TPARM
	VALUES ("14bc7296-b244-4420-ab86-b91259bb6b43",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'u2',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"c7775bc8-6b98-4669-a948-e780963a97b8",
	'');
INSERT INTO O_TPARM
	VALUES ("0d951507-9b72-46f4-9f86-9fa00a558a9e",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'b3',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"7a0e168a-bcdc-42b3-97fd-9ce1a95caca4",
	'');
INSERT INTO O_TPARM
	VALUES ("fde67a96-928a-4f53-9d0f-c8964ddcfc8c",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'tr3',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"6bb130aa-6bf0-4108-815d-94bade88c92c",
	'');
INSERT INTO O_TPARM
	VALUES ("b35d7e26-645a-4f3f-ad05-0944ff8b1f1f",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'i3',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"427a733a-7c3a-4021-b84c-76340fca74e3",
	'');
INSERT INTO O_TPARM
	VALUES ("f7743d6d-e6a1-4e65-907b-75751eb5ffcf",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'r3',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"8fdd65e9-3138-4cca-aea1-75db201b0cf6",
	'');
INSERT INTO O_TPARM
	VALUES ("4da5bcec-714b-4e4f-a203-be0500b3c43c",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	's3',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"3427dcfd-4344-4909-81d8-84fd17001367",
	'');
INSERT INTO O_TPARM
	VALUES ("da67757c-b1e3-4546-b1e8-eceb5113c56b",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'en3',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"6d22d26d-8eb9-43bf-9dee-69e330f9a6b5",
	'');
INSERT INTO O_TPARM
	VALUES ("ec8e4f94-479b-4ef8-b561-8d04b549f173",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'u3',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"14bc7296-b244-4420-ab86-b91259bb6b43",
	'');
INSERT INTO O_TPARM
	VALUES ("b393d1e0-5009-4965-9eda-1a0e72c21cea",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'b4',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"0d951507-9b72-46f4-9f86-9fa00a558a9e",
	'');
INSERT INTO O_TPARM
	VALUES ("f68fa01f-7e99-4de3-8960-f18fa457f56f",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'tr4',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"fde67a96-928a-4f53-9d0f-c8964ddcfc8c",
	'');
INSERT INTO O_TPARM
	VALUES ("572a476b-6213-449c-94f7-a98f6705ae29",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'i4',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"b35d7e26-645a-4f3f-ad05-0944ff8b1f1f",
	'');
INSERT INTO O_TPARM
	VALUES ("0c2b886a-b558-4268-846c-a556e690705a",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'r4',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"f7743d6d-e6a1-4e65-907b-75751eb5ffcf",
	'');
INSERT INTO O_TPARM
	VALUES ("58d53473-d6ee-4458-8356-aad8701e2dc9",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	's4',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"4da5bcec-714b-4e4f-a203-be0500b3c43c",
	'');
INSERT INTO O_TPARM
	VALUES ("0858eb9e-30a6-494a-83e5-b97a841db83a",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'en4',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"da67757c-b1e3-4546-b1e8-eceb5113c56b",
	'');
INSERT INTO O_TPARM
	VALUES ("1086b4cf-3045-4e22-8a54-5181e4a17a6f",
	"38786473-4e45-471b-b107-c5c39fd2dd86",
	'u4',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"ec8e4f94-479b-4ef8-b561-8d04b549f173",
	'');
INSERT INTO O_TFR
	VALUES ("c44f892d-986d-4975-8ea9-41efe726f3bf",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'mod_params4',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'//////////////////////////////
// Param Assign
//////////////////////////////

select any tc from instances of TC;
select any tc_4 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
param.b = ::bool1( date1: ::date1( evt1:tc.e ) ) and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r = ::real1(str1: EE::str2(time2:tc.t)          +    tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u = ::udt1(bool1: tc.bool3(date3:tc.d)    and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
param.b2 = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr2 =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i2 =  REE::int5(real5: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r2 =  REE::real5(str5:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s2 =  EE::str2(time2: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u2 = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
param.b3 = tc.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr3 =  tc.timer3(int3:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i3 =  tc.int3(real3: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r3 =  tc_4.real6(str6: EE::str2(time2:tc.t)        +   tc_4.str6( time6: TC::time4( id4:tc.ID ) ) );
param.s3 =  tc_4.str6(time6: TC::time4(id4:tc.ID))       +  tc_4.str6( time6: TC::time4( id4: tc.ID ) );
param.en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u3 = tc.udt3(bool3: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
param.b4 = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
param.tr4 = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
param.i4 = TC4::int7(real7: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
param.r4 = TC4::real7(str7: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
param.s4 = TC::str4(time4:tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
param.en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
param.u4 = TC::udt4(bool4: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( param.b and param.b2 and param.b3 and param.b4 )
  LOG::LogSuccess( message:"Assign Param - Boolean" );
else
  LOG::LogFailure( message:"Assign Param - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:param.b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:param.b );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:param.b );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:param.b );
end if;

if ( ( param.tr ==  param.tr2 ) and (  param.tr3 ==  param.tr4 ) )
  LOG::LogSuccess( message:"Assign Param - Timer" );
else
  LOG::LogFailure( message:"Assign Param - Timer");
end if;

if ( ( param.i ==  param.i2 ) and (  param.i3 ==  param.i4 ) )
  LOG::LogSuccess( message:"Assign Param - Integer" );
else
  LOG::LogFailure( message:"Assign Param - Integer");
  LOG::LogInt( message:"Function Invocation", int: param.i );
  LOG::LogInt( message:"Bridge Invocation", int: param.i );
  LOG::LogInt( message:"Instance Operation Invocation", int: param.i );
  LOG::LogInt( message:"Class Operation Invocation", int: param.i );
end if;

if ( (  param.r ==  param.r2 ) and (  param.r3 ==  param.r4 ) )
  LOG::LogSuccess( message:"Assign Param - Real" );
else
  LOG::LogFailure( message:"Assign Param - Real");
  LOG::LogReal( message:"Function Invocation", real: param.r );
  LOG::LogReal( message:"Bridge Invocation", real: param.r );
  LOG::LogReal( message:"Instance Operation Invocation", real: param.r );
  LOG::LogReal( message:"Class Operation Invocation", real: param.r );
end if;

if ( (  param.s ==  param.s2 ) and (  param.s3 ==  param.s4 ) )
  LOG::LogSuccess( message:"Assign Param - String" );
else
  LOG::LogFailure( message:"Assign Param - String");
  LOG::LogString( message:"Function Invocation", str: param.s );
  LOG::LogString( message:"Bridge Invocation", str: param.s );
  LOG::LogString( message:"Instance Operation Invocation", str: param.s );
  LOG::LogString( message:"Class Operation Invocation", str: param.s );
end if;

if ( (  param.en ==  param.en2 ) and (  param.en3 ==  param.en4 ) )
  LOG::LogSuccess( message:"Assign Param - Enumeration" );
else
  LOG::LogFailure( message:"Assign Param - Enumeration");
end if;

if ( (  param.u ==  param.u2 ) and (  param.u3 ==  param.u4 ) )
  LOG::LogSuccess( message:"Assign Param - User Data Type" );
else
  LOG::LogFailure( message:"Assign Param - User Data Type");
  LOG::LogInt( message:"Function Invocation", int: param.u );
  LOG::LogInt( message:"Bridge Invocation", int: param.u );
  LOG::LogInt( message:"Instance Operation Invocation", int: param.u );
  LOG::LogInt( message:"Class Operation Invocation", int: param.u );
end if;',
	1,
	'',
	"38786473-4e45-471b-b107-c5c39fd2dd86");
INSERT INTO O_TPARM
	VALUES ("1bff8791-9c08-4774-8052-087587f1fe35",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'b',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("9913cc34-a15d-4ee0-8e7b-ac369b080bbe",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'tr',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"629af1b0-7df4-4028-a0c8-9f67ea8c0da3",
	'');
INSERT INTO O_TPARM
	VALUES ("e780dd93-ebb1-48f8-807e-1939d4f64008",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'i',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"f73a71cd-1f63-4440-9b2a-e1cab8632f6b",
	'');
INSERT INTO O_TPARM
	VALUES ("532d738b-4981-4d52-ba40-4ec37c39707b",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'r',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"82882c34-dbd3-40df-af3e-e3f561d58ad2",
	'');
INSERT INTO O_TPARM
	VALUES ("f68a016e-4528-411b-b26d-4facab8f1493",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	's',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"45490e80-b0ce-430e-b112-f47c7d9b18dc",
	'');
INSERT INTO O_TPARM
	VALUES ("fb8df9cd-f5d5-4596-946a-d594e55ca4c8",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'en',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"893221c8-7570-4597-bc82-fe4cf2b0fd90",
	'');
INSERT INTO O_TPARM
	VALUES ("c1335b2d-46be-4a04-9f2b-3d899cb766d7",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'u',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"3ed32422-1e4a-4d36-adc9-52b37dc9daae",
	'');
INSERT INTO O_TPARM
	VALUES ("76001acc-75bd-4be6-bd12-c4603a950e33",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'b2',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"1bff8791-9c08-4774-8052-087587f1fe35",
	'');
INSERT INTO O_TPARM
	VALUES ("7945a3ca-0c65-4bf4-879d-ffc90623b208",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'tr2',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"9913cc34-a15d-4ee0-8e7b-ac369b080bbe",
	'');
INSERT INTO O_TPARM
	VALUES ("988f1627-dcc1-43bb-ab3b-e7bb6aa762fb",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'i2',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"e780dd93-ebb1-48f8-807e-1939d4f64008",
	'');
INSERT INTO O_TPARM
	VALUES ("4b8d1c09-dc8c-4140-b8ce-a37cad93aafa",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'r2',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"532d738b-4981-4d52-ba40-4ec37c39707b",
	'');
INSERT INTO O_TPARM
	VALUES ("a2491cf0-0678-46ef-a8d5-ed0d604880e6",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	's2',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"f68a016e-4528-411b-b26d-4facab8f1493",
	'');
INSERT INTO O_TPARM
	VALUES ("3b79b636-fbd9-4df0-bef6-ef2484033517",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'en2',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"fb8df9cd-f5d5-4596-946a-d594e55ca4c8",
	'');
INSERT INTO O_TPARM
	VALUES ("8dbe1203-7c15-4911-aadb-f4ab546b5491",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'u2',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"c1335b2d-46be-4a04-9f2b-3d899cb766d7",
	'');
INSERT INTO O_TPARM
	VALUES ("6774d360-2e23-4ba2-80bc-d9987b608372",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'b3',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"76001acc-75bd-4be6-bd12-c4603a950e33",
	'');
INSERT INTO O_TPARM
	VALUES ("6ab4b32a-b41e-41d4-81a1-af7dd57a15e3",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'tr3',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"7945a3ca-0c65-4bf4-879d-ffc90623b208",
	'');
INSERT INTO O_TPARM
	VALUES ("4ef68ad4-7a94-4587-89a7-50a7f4500c6e",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'i3',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"988f1627-dcc1-43bb-ab3b-e7bb6aa762fb",
	'');
INSERT INTO O_TPARM
	VALUES ("b512f284-1032-4b94-8322-54c931a2b5c1",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'r3',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"4b8d1c09-dc8c-4140-b8ce-a37cad93aafa",
	'');
INSERT INTO O_TPARM
	VALUES ("0513db02-bb64-4941-9cc6-a9666e4e3711",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	's3',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"a2491cf0-0678-46ef-a8d5-ed0d604880e6",
	'');
INSERT INTO O_TPARM
	VALUES ("efb03261-a6b7-40e1-a5d6-49f2584538b9",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'en3',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"3b79b636-fbd9-4df0-bef6-ef2484033517",
	'');
INSERT INTO O_TPARM
	VALUES ("dedffc4d-1a49-4e44-a803-6e10a6d3ae0a",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'u3',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"8dbe1203-7c15-4911-aadb-f4ab546b5491",
	'');
INSERT INTO O_TPARM
	VALUES ("893221c8-7570-4597-bc82-fe4cf2b0fd90",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'b4',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	"6774d360-2e23-4ba2-80bc-d9987b608372",
	'');
INSERT INTO O_TPARM
	VALUES ("3ed32422-1e4a-4d36-adc9-52b37dc9daae",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'tr4',
	"ba5eda7a-def5-0000-0000-00000000000f",
	1,
	'',
	"6ab4b32a-b41e-41d4-81a1-af7dd57a15e3",
	'');
INSERT INTO O_TPARM
	VALUES ("82882c34-dbd3-40df-af3e-e3f561d58ad2",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'i4',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'',
	"4ef68ad4-7a94-4587-89a7-50a7f4500c6e",
	'');
INSERT INTO O_TPARM
	VALUES ("45490e80-b0ce-430e-b112-f47c7d9b18dc",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'r4',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'',
	"b512f284-1032-4b94-8322-54c931a2b5c1",
	'');
INSERT INTO O_TPARM
	VALUES ("629af1b0-7df4-4028-a0c8-9f67ea8c0da3",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	's4',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	"0513db02-bb64-4941-9cc6-a9666e4e3711",
	'');
INSERT INTO O_TPARM
	VALUES ("f73a71cd-1f63-4440-9b2a-e1cab8632f6b",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'en4',
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	1,
	'',
	"efb03261-a6b7-40e1-a5d6-49f2584538b9",
	'');
INSERT INTO O_TPARM
	VALUES ("d5ac88be-cdaf-4a68-aec0-56e060653f98",
	"c44f892d-986d-4975-8ea9-41efe726f3bf",
	'u4',
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	1,
	'',
	"dedffc4d-1a49-4e44-a803-6e10a6d3ae0a",
	'');
INSERT INTO O_TFR
	VALUES ("abe3c22d-40f6-4f19-8c30-24da524fee75",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'real_invoke3',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select any tc from instances of TC;

select any tc7 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Bridges
////////////////////////////
b5 = REE::bool5(date5: ::date1(evt1:tc.e))  and REE::bool5(date5: tc.date3( evt3:tc.e ) );
i5 =  REE::int5(real5: ::real1(str1:tc.s)            +  EE::real2( str2: REE::str5( time5:tc.t ) ) );
r5 =  REE::real5(str5:  REE::str5(time5:tc.t)      +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s5 =  REE::str5(time5: tc.time3(id3:tc.ID))       +  tc7.str6( time6: TC::time4( id4: tc.ID ) );
en5 = REE::enum5(udt5: REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: TC4::bool7( date7:tc.d ) ) );
u5 = REE::udt5(bool5: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
b6 = tc7.bool6(date6: ::date1(evt1:tc.e))   and REE::bool5(date5: TC::date4( evt4:tc.e ) );
i6 =  tc7.int6(real6: ::real1(str1:tc.s)            +  REE::real5( str5: tc7.str6( time6:tc.t ) ) );
r6 =  tc7.real6(str6: REE::str5(time5:tc.t)        +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s6 =  tc7.str6(time6: TC::time4(id4:tc.ID))       +  tc7.str6( time6: TC::time4( id4: tc.ID ) );
en6 = tc7.enum6(udt6: REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: REE::bool5( date5:tc.d ) ) );
u6 = tc7.udt6(bool6: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
b7 = TC4::bool7(date7: ::date1(evt1:tc.e))   and REE::bool5(date5: tc.date3( evt3:tc.e ) );
i7 = TC4::int7(real7: ::real1(str1:tc.s)            +  REE::real5( str5: tc7.str6( time6:tc.t ) ) );
r7 = TC4::real7(str7: REE::str5(time5:tc.t)        +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s7 = TC4::str7(time7:tc.time3(id3:tc.ID))       +  TC::str4( time4: TC::time4( id4: tc.ID ) );
en7 = TC4::enum7(udt7:REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: TC4::bool7( date7:tc.d ) ) );
u7 = TC4::udt7(bool7: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( b5 and b6 and b7 )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Boolean");
  LOG::LogBoolean( message:"Bridge Invocation", bool:b5 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b6 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b7 );
end if;

if ( ( i5 == i6 ) and ( i6 == i7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Integer");
  LOG::LogInt( message:"Bridge Invocation", int:i5 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i6 );
  LOG::LogInt( message:"Class Operation Invocation", int:i7 );
end if;

if ( ( r5 == r6 ) and ( r6 == r7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Real");
  LOG::LogReal( message:"Bridge Invocation", real:r5 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r6 );
  LOG::LogReal( message:"Class Operation Invocation", real:r7 );
end if;

if ( ( s5 == s6 ) and ( s6 == s7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - String" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - String");
  LOG::LogString( message:"Bridge Invocation", str:s5 );
  LOG::LogString( message:"Instance Operation Invocation", str:s6 );
  LOG::LogString( message:"Class Operation Invocation", str:s7 );
end if;

if ( ( en5 == en6 ) and ( en6 == en7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Enumeration");
end if;

if ( ( u5 == u6 ) and ( u6 == u7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - User Data Type");
  LOG::LogInt( message:"Bridge Invocation", int:u5 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u6 );
  LOG::LogInt( message:"Class Operation Invocation", int:u7 );
end if;',
	1,
	'',
	"23ac3814-5e29-4f30-947f-d0a725d3f672");
INSERT INTO O_TFR
	VALUES ("b11c72a5-e27a-4eed-ae27-a7eec755073e",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'real_invoke4',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'select any tc from instances of TC;

select any tc7 from instances of TC4;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Bridges
////////////////////////////
b5 = REE::bool5(date5: ::date1(evt1:tc.e))  and REE::bool5(date5: tc.date3( evt3:tc.e ) );
i5 =  REE::int5(real5: ::real1(str1:tc.s)            +  EE::real2( str2: REE::str5( time5:tc.t ) ) );
r5 =  REE::real5(str5:  REE::str5(time5:tc.t)      +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s5 =  REE::str5(time5: tc.time3(id3:tc.ID))       +  tc7.str6( time6: TC::time4( id4: tc.ID ) );
en5 = REE::enum5(udt5: REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: TC4::bool7( date7:tc.d ) ) );
u5 = REE::udt5(bool5: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
b6 = tc7.bool6(date6: ::date1(evt1:tc.e))   and REE::bool5(date5: TC::date4( evt4:tc.e ) );
i6 =  tc7.int6(real6: ::real1(str1:tc.s)            +  REE::real5( str5: tc7.str6( time6:tc.t ) ) );
r6 =  tc7.real6(str6: REE::str5(time5:tc.t)        +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s6 =  tc7.str6(time6: TC::time4(id4:tc.ID))       +  tc7.str6( time6: TC::time4( id4: tc.ID ) );
en6 = tc7.enum6(udt6: REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: REE::bool5( date5:tc.d ) ) );
u6 = tc7.udt6(bool6: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
b7 = TC4::bool7(date7: ::date1(evt1:tc.e))   and REE::bool5(date5: tc.date3( evt3:tc.e ) );
i7 = TC4::int7(real7: ::real1(str1:tc.s)            +  REE::real5( str5: tc7.str6( time6:tc.t ) ) );
r7 = TC4::real7(str7: REE::str5(time5:tc.t)        +   tc7.str6( time6: TC::time4( id4:tc.ID ) ) );
s7 = TC4::str7(time7:tc.time3(id3:tc.ID))       +  TC::str4( time4: TC::time4( id4: tc.ID ) );
en7 = TC4::enum7(udt7:REE::udt5(bool5:tc.b) +  tc7.udt6( bool6: TC4::bool7( date7:tc.d ) ) );
u7 = TC4::udt7(bool7: tc7.bool6(date6:tc.d)   and  TC4::bool7( date7: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( b5 and b6 and b7 )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Boolean");
  LOG::LogBoolean( message:"Bridge Invocation", bool:b5 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b6 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b7 );
end if;

if ( ( i5 == i6 ) and ( i6 == i7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Integer");
  LOG::LogInt( message:"Bridge Invocation", int:i5 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i6 );
  LOG::LogInt( message:"Class Operation Invocation", int:i7 );
end if;

if ( ( r5 == r6 ) and ( r6 == r7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Real");
  LOG::LogReal( message:"Bridge Invocation", real:r5 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r6 );
  LOG::LogReal( message:"Class Operation Invocation", real:r7 );
end if;

if ( ( s5 == s6 ) and ( s6 == s7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - String" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - String");
  LOG::LogString( message:"Bridge Invocation", str:s5 );
  LOG::LogString( message:"Instance Operation Invocation", str:s6 );
  LOG::LogString( message:"Class Operation Invocation", str:s7 );
end if;

if ( ( en5 == en6 ) and ( en6 == en7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Enumeration");
end if;

if ( ( u5 == u6 ) and ( u6 == u7 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - User Data Type");
  LOG::LogInt( message:"Bridge Invocation", int:u5 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u6 );
  LOG::LogInt( message:"Class Operation Invocation", int:u7 );
end if;',
	1,
	'',
	"abe3c22d-40f6-4f19-8c30-24da524fee75");
INSERT INTO O_TFR
	VALUES ("678afd3f-489c-406e-9705-6df7c02e5729",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'ret6',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select any tc from instances of TC;
select any tc_4 from instances of TC4;

return tc_4.bool6( date6: EE::date2( evt2: TC::evt4( timer4: TC::timer4( int4: ::int1( real1: tc.r + EE::real2( str2: tc.s ) ) + tc_4.int6( real6: TC::real4( str4: tc.s ) ) ) ) ) ) and ( ( EE::bool2( date2:tc.d ) or ( tc_4.bool6( date6:tc.d ) ) and TC::bool4( date4:tc.d ) ) );',
	1,
	'',
	"52c290e1-f7e8-4ef2-8526-fbe6d18acdaf");
INSERT INTO O_TFR
	VALUES ("9fd3fb81-9d61-4d62-97bb-978499ebde6a",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'ret7',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'select any tc from instances of TC;

return TC4::bool7( date7: EE::date2( evt2: tc.evt3( timer3: TC::timer4( int4: ::int1( real1: tc.r + EE::real2( str2: tc.s ) ) + tc.int3( real3: TC::real4( str4: tc.s ) ) ) ) ) ) and ( ( EE::bool2( date2:tc.d ) or ( tc.bool3( date3:tc.d ) ) and TC::bool4( date4:tc.d ) ) );',
	1,
	'',
	"678afd3f-489c-406e-9705-6df7c02e5729");
INSERT INTO O_NBATTR
	VALUES ("5da0214a-1574-485b-94dd-b3bb264b1ecc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("5da0214a-1574-485b-94dd-b3bb264b1ecc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("5da0214a-1574-485b-94dd-b3bb264b1ecc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"00000000-0000-0000-0000-000000000000",
	'b',
	'',
	'',
	'b',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("47f2dca9-6bcc-4b16-980d-55c38b19b05d",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("47f2dca9-6bcc-4b16-980d-55c38b19b05d",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("47f2dca9-6bcc-4b16-980d-55c38b19b05d",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"5da0214a-1574-485b-94dd-b3bb264b1ecc",
	'd',
	'',
	'',
	'd',
	0,
	"ba5eda7a-def5-0000-0000-00000000000e",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("fda2ef3b-8d92-41ca-9e8d-753a22747cdc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("fda2ef3b-8d92-41ca-9e8d-753a22747cdc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("fda2ef3b-8d92-41ca-9e8d-753a22747cdc",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"47f2dca9-6bcc-4b16-980d-55c38b19b05d",
	'en',
	'',
	'',
	'en',
	0,
	"9254ec0d-976f-4b8c-8fbe-c5047142da3a",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("b32af5c6-862f-4fbb-b807-3c9d8643adf2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("b32af5c6-862f-4fbb-b807-3c9d8643adf2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("b32af5c6-862f-4fbb-b807-3c9d8643adf2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"fda2ef3b-8d92-41ca-9e8d-753a22747cdc",
	'e',
	'',
	'',
	'e',
	0,
	"ba5eda7a-def5-0000-0000-00000000000a",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("e7247ab9-b318-4cd9-a912-5e0c43d6d9aa",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("e7247ab9-b318-4cd9-a912-5e0c43d6d9aa",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("e7247ab9-b318-4cd9-a912-5e0c43d6d9aa",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"b32af5c6-862f-4fbb-b807-3c9d8643adf2",
	'tr',
	'',
	'',
	'tr',
	0,
	"ba5eda7a-def5-0000-0000-00000000000f",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("b5e77368-10fe-4e4c-b5bd-16cf91041b75",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("b5e77368-10fe-4e4c-b5bd-16cf91041b75",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("b5e77368-10fe-4e4c-b5bd-16cf91041b75",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"e7247ab9-b318-4cd9-a912-5e0c43d6d9aa",
	'i',
	'',
	'',
	'i',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("89f3fe41-2aa1-4a57-9921-051a5beb4da2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("89f3fe41-2aa1-4a57-9921-051a5beb4da2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("89f3fe41-2aa1-4a57-9921-051a5beb4da2",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"b5e77368-10fe-4e4c-b5bd-16cf91041b75",
	'r',
	'',
	'',
	'r',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1d19f8f0-7271-4f76-b920-8d71f0718482",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("1d19f8f0-7271-4f76-b920-8d71f0718482",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("1d19f8f0-7271-4f76-b920-8d71f0718482",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"89f3fe41-2aa1-4a57-9921-051a5beb4da2",
	's',
	'',
	'',
	's',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("d4d38c3d-cdd8-47a3-b3af-22cab0a20dbe",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("d4d38c3d-cdd8-47a3-b3af-22cab0a20dbe",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("d4d38c3d-cdd8-47a3-b3af-22cab0a20dbe",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"1d19f8f0-7271-4f76-b920-8d71f0718482",
	't',
	'',
	'',
	't',
	0,
	"ba5eda7a-def5-0000-0000-000000000010",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("63a8ebe9-57fe-4118-ac2f-5d8288f6e15a",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("63a8ebe9-57fe-4118-ac2f-5d8288f6e15a",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("63a8ebe9-57fe-4118-ac2f-5d8288f6e15a",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"d4d38c3d-cdd8-47a3-b3af-22cab0a20dbe",
	'u',
	'',
	'',
	'u',
	0,
	"42a729d2-3361-4a77-8752-dce5f2fd5786",
	'',
	'');
INSERT INTO O_DBATTR
	VALUES ("df9352d4-34a3-4f4d-af89-4b95c4893440",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	'select any tc from instances of TC;

// Order is Function, Bridge, Instance Operation, Class Operation

////////////////////////////
// Functions
////////////////////////////
b = ::bool1( date1: ::date1( evt1:tc.e ) ) and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr = ::timer1( int1:TC::int4( real4:tc.r )      +    ::int1( real1: tc.real3( str3:tc.s ) ) );
i = ::int1(real1: ::real1(str1:tc.s)               +   EE::real2( str2: tc.str3( time3:tc.t ) ) );
r = ::real1(str1: EE::str2(time2:tc.t)          +    tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s = ::str1( time1: EE::time2( id2: tc.ID ) )  +    tc.str3( time3: TC::time4( id4: tc.ID ) );
en = ::enum1(udt1:EE::udt2(bool2:tc.b)   +    tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u = ::udt1(bool1: tc.bool3(date3:tc.d)    and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Bridges
////////////////////////////
b2 = EE::bool2(date2: ::date1(evt1:tc.e))  and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr2 =  EE::timer2(int2: TC::int4(real4:tc.r)     +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i2 =  EE::int2(real2: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r2 =  EE::real2(str2:  EE::str2(time2:tc.t)      +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s2 =  EE::str2(time2: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en2 = EE::enum2(udt2: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u2 = EE::udt2(bool2: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Instance Operations
////////////////////////////
b3 = tc.bool3(date3: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr3 =  tc.timer3(int3:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i3 =  tc.int3(real3: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r3 =  tc.real3(str3: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s3 =  tc.str3(time3: tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en3 = tc.enum3(udt3: EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u3 = tc.udt3(bool3: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Class Operations
////////////////////////////
b4 = TC::bool4(date4: ::date1(evt1:tc.e))   and EE::bool2(date2: tc.date3( evt3:tc.e ) );
tr4 = TC::timer4(int4:TC::int4(real4:tc.r)       +   ::int1( real1: tc.real3( str3:tc.s ) ) );
i4 = TC::int4(real4: ::real1(str1:tc.s)            +  EE::real2( str2: tc.str3( time3:tc.t ) ) );
r4 = TC::real4(str4: EE::str2(time2:tc.t)        +   tc.str3( time3: TC::time4( id4:tc.ID ) ) );
s4 = TC::str4(time4:tc.time3(id3:tc.ID))       +  tc.str3( time3: TC::time4( id4: tc.ID ) );
en4 = TC::enum4(udt4:EE::udt2(bool2:tc.b) +  tc.udt3( bool3: TC::bool4( date4:tc.d ) ) );
u4 = TC::udt4(bool4: tc.bool3(date3:tc.d)   and  TC::bool4( date4: ::date1( evt1:tc.e ) ) );

////////////////////////////
// Results
////////////////////////////
if ( b and b2 and b3 and b4 )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Boolean" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Boolean");
  LOG::LogBoolean( message:"Function Invocation", bool:b );
  LOG::LogBoolean( message:"Bridge Invocation", bool:b2 );
  LOG::LogBoolean( message:"Instance Operation Invocation", bool:b3 );
  LOG::LogBoolean( message:"Class Operation Invocation", bool:b4 );
end if;

if ( ( tr == tr2 ) and ( tr3 == tr4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Timer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Timer");
end if;

if ( ( i == i2 ) and ( i3 == i4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Integer" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Integer");
  LOG::LogInt( message:"Function Invocation", int:i );
  LOG::LogInt( message:"Bridge Invocation", int:i2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:i3 );
  LOG::LogInt( message:"Class Operation Invocation", int:i4 );
end if;

if ( ( r == r2 ) and ( r3 == r4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Real" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Real");
  LOG::LogReal( message:"Function Invocation", real:r );
  LOG::LogReal( message:"Bridge Invocation", real:r2 );
  LOG::LogReal( message:"Instance Operation Invocation", real:r3 );
  LOG::LogReal( message:"Class Operation Invocation", real:r4 );
end if;

if ( ( s == s2 ) and ( s3 == s4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - String" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - String");
  LOG::LogString( message:"Function Invocation", str:s );
  LOG::LogString( message:"Bridge Invocation", str:s2 );
  LOG::LogString( message:"Instance Operation Invocation", str:s3 );
  LOG::LogString( message:"Class Operation Invocation", str:s4 );
end if;

if ( ( en == en2 ) and ( en3 == en4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - Enumeration" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - Enumeration");
end if;

if ( ( u == u2 ) and ( u3 == u4 ) )
  LOG::LogSuccess( message:"Multiple Invocation with Expression - User Data Type" );
else
  LOG::LogFailure( message:"Multiple Invocation with Expression - User Data Type");
  LOG::LogInt( message:"Function Invocation", int:u );
  LOG::LogInt( message:"Bridge Invocation", int:u2 );
  LOG::LogInt( message:"Instance Operation Invocation", int:u3 );
  LOG::LogInt( message:"Class Operation Invocation", int:u4 );
end if;

self.mda = true;',
	1);
INSERT INTO O_BATTR
	VALUES ("df9352d4-34a3-4f4d-af89-4b95c4893440",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("df9352d4-34a3-4f4d-af89-4b95c4893440",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"63a8ebe9-57fe-4118-ac2f-5d8288f6e15a",
	'mda',
	'',
	'',
	'mda',
	0,
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("75aaf4aa-ff73-45ea-a3d5-33a2f0ae5409",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_BATTR
	VALUES ("75aaf4aa-ff73-45ea-a3d5-33a2f0ae5409",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ATTR
	VALUES ("75aaf4aa-ff73-45ea-a3d5-33a2f0ae5409",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"df9352d4-34a3-4f4d-af89-4b95c4893440",
	'ID',
	'',
	'',
	'ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_REF
	VALUES ("6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"0962a94f-adaa-4121-a61e-138a4a4cf3e4",
	0,
	"2e2cb802-9137-44a5-ade9-a3f87fe298d2",
	"ca4d5e27-3061-4fa3-a135-03ad5bccb371",
	"8fe16d8c-fa0a-4cf1-9be6-4e22058b341e",
	"c9cf2550-cbcd-4005-842e-4f4b4e34d1e2",
	"072982ad-9cdd-4f36-bf8d-8dd4e3d7b67c",
	"8086d63c-a556-4d38-b2f8-72b9b51f7f92",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Test Class Two',
	'ID2',
	'R1');
INSERT INTO R_RGO_PROXY
	VALUES ("6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"ca4d5e27-3061-4fa3-a135-03ad5bccb371",
	"8fe16d8c-fa0a-4cf1-9be6-4e22058b341e",
	'../G_ALL_nested_invoke.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("2e2cb802-9137-44a5-ade9-a3f87fe298d2",
	"0962a94f-adaa-4121-a61e-138a4a4cf3e4",
	0,
	"ca4d5e27-3061-4fa3-a135-03ad5bccb371",
	"c9cf2550-cbcd-4005-842e-4f4b4e34d1e2",
	'../G_ALL_nested_invoke.xtuml');
INSERT INTO O_RATTR
	VALUES ("072982ad-9cdd-4f36-bf8d-8dd4e3d7b67c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"2e2cb802-9137-44a5-ade9-a3f87fe298d2",
	"0962a94f-adaa-4121-a61e-138a4a4cf3e4",
	1,
	'ID2');
INSERT INTO O_BATTR_PROXY
	VALUES ("2e2cb802-9137-44a5-ade9-a3f87fe298d2",
	"0962a94f-adaa-4121-a61e-138a4a4cf3e4",
	'../Test Class Two/Test Class Two.xtuml');
INSERT INTO O_ATTR
	VALUES ("072982ad-9cdd-4f36-bf8d-8dd4e3d7b67c",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	"75aaf4aa-ff73-45ea-a3d5-33a2f0ae5409",
	'ID2',
	'',
	'',
	'ID2',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_OIDA
	VALUES ("75aaf4aa-ff73-45ea-a3d5-33a2f0ae5409",
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	0,
	'ID');
INSERT INTO O_ID
	VALUES (1,
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO O_ID
	VALUES (2,
	"6e4f8f60-da8d-4c68-b11c-ded79a4e82ac");
INSERT INTO PE_PE
	VALUES ("6e4f8f60-da8d-4c68-b11c-ded79a4e82ac",
	1,
	"f6a7a5d6-07f6-4246-a33c-eab1cc657201",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("f6a7a5d6-07f6-4246-a33c-eab1cc657201",
	"00000000-0000-0000-0000-000000000000",
	"0d7f30b4-802c-4448-8609-9f80dc325590",
	'G_ALL_nested_invoke',
	'Rename this subsystem to something appropriate for your purposes.',
	1,
	'../G_ALL_nested_invoke.xtuml');
